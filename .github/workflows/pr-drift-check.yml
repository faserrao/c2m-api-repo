name: PR Build Validation

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'openapi/**'
      - 'data_dictionary/**'
      - 'scripts/**'
      - 'Makefile'
      - '.github/workflows/**'

permissions:
  contents: read
  pull-requests: write

jobs:
  build-validation:
    name: Validate PR builds successfully
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then npm ci; fi
          if [ -f scripts/python_env/requirements.txt ]; then
            pip install -r scripts/python_env/requirements.txt
          fi

      - name: Validate build process
        id: build_check
        run: |
          echo "üî® Validating build process..."
          
          # Test that all build targets work
          if make openapi-build && make postman-collection-build && make docs; then
            echo "‚úÖ All build targets completed successfully!"
            echo "build_success=true" >> $GITHUB_OUTPUT
          else
            echo "‚ùå Build failed!"
            echo "build_success=false" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Comment on PR success
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            // Check if we already commented
            const comments = await github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            
            const botComment = comments.data.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Build Validation')
            );
            
            const output = `## ‚úÖ Build Validation Passed
            
            All build targets completed successfully. When this PR is merged to main:
            - Generated artifacts will be pushed to the [c2m-api-artifacts](https://github.com/faserrao/c2m-api-artifacts) repository
            - Postman workspaces will be updated automatically
            `;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: output
              });
            } else {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              });
            }

      - name: Comment on PR failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const output = `## ‚ùå Build Validation Failed
            
            The build process failed. Please check the workflow logs for details.
            
            Common issues:
            - Missing dependencies
            - Syntax errors in EBNF data dictionary
            - Invalid OpenAPI overlays
            
            Please fix the issues and push an update to this PR.
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })