openapi: 3.0.3
info:
  title: Generated from EBNF
  version: 8.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
- url: https://api.example.com
paths:
  /jobs/submit/single/doc:
    post:
      summary: POST /jobs/submit/single/doc
      operationId: post_jobs_submit_single_doc
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/singleDocJobParams'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singleDocJobParams'
        '400':
          description: Bad Request
      security:
      - bearerAuth: []
  /jobs/submit/multi/doc:
    post:
      summary: POST /jobs/submit/multi/doc
      operationId: post_jobs_submit_multi_doc
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/submitMultiDocParams'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/submitMultiDocParams'
        '400':
          description: Bad Request
      security:
      - bearerAuth: []
  /jobs/submit/multi/doc/merge:
    post:
      summary: POST /jobs/submit/multi/doc/merge
      operationId: post_jobs_submit_multi_doc_merge
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mergeMultiDocParams'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mergeMultiDocParams'
        '400':
          description: Bad Request
      security:
      - bearerAuth: []
  /jobs/submit/single/doc/jobTemplate:
    post:
      summary: POST /jobs/submit/single/doc/jobTemplate
      operationId: post_jobs_submit_single_doc_jobTemplate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/submitSingleDocWithTemplateParams'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/submitSingleDocWithTemplateParams'
        '400':
          description: Bad Request
      security:
      - bearerAuth: []
  /jobs/submit/multi/docs/jobtemplate:
    post:
      summary: POST /jobs/submit/multi/docs/jobtemplate
      operationId: post_jobs_submit_multi_docs_jobtemplate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/submitMultiDocWithTemplateParams'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/submitMultiDocWithTemplateParams'
        '400':
          description: Bad Request
      security:
      - bearerAuth: []
  /jobs/submit/multi/doc/merge/jobTemplate:
    post:
      summary: POST /jobs/submit/multi/doc/merge/jobTemplate
      operationId: post_jobs_submit_multi_doc_merge_jobTemplate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mergeMultiDocWithTemplateParams'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mergeMultiDocWithTemplateParams'
        '400':
          description: Bad Request
      security:
      - bearerAuth: []
  /jobs/submit/single/pdf/split:
    post:
      summary: POST /jobs/submit/single/pdf/split
      operationId: post_jobs_submit_single_pdf_split
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/splitPdfParams'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/splitPdfParams'
        '400':
          description: Bad Request
      security:
      - bearerAuth: []
  /jobs/submit/single/pdf/split/addressCapture:
    post:
      summary: POST /jobs/submit/single/pdf/split/addressCapture
      operationId: post_jobs_submit_single_pdf_split_addressCapture
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/splitPdfWithCaptureParams'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/splitPdfWithCaptureParams'
        '400':
          description: Bad Request
      security:
      - bearerAuth: []
  /jobs/submit/multi/pdf/addressCapture:
    post:
      summary: POST /jobs/submit/multi/pdf/addressCapture
      operationId: post_jobs_submit_multi_pdf_addressCapture
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/multiPdfWithCaptureParams'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/multiPdfWithCaptureParams'
        '400':
          description: Bad Request
      security:
      - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    documentSourceIdentifier:
      oneOf:
      - $ref: '#/components/schemas/documentId'
      - $ref: '#/components/schemas/externalUrl'
      - type: object
        properties:
          uploadRequestId:
            $ref: '#/components/schemas/uploadRequestId'
          documentName:
            $ref: '#/components/schemas/documentName'
        required:
        - uploadRequestId
        - documentName
      - type: object
        properties:
          uploadRequestId:
            $ref: '#/components/schemas/uploadRequestId'
          zipId:
            $ref: '#/components/schemas/zipId'
          documentName:
            $ref: '#/components/schemas/documentName'
        required:
        - uploadRequestId
        - zipId
        - documentName
      - type: object
        properties:
          zipId:
            $ref: '#/components/schemas/zipId'
          documentName:
            $ref: '#/components/schemas/documentName'
        required:
        - zipId
        - documentName
    recipientAddressSource:
      oneOf:
      - $ref: '#/components/schemas/exactlyOneNewAddress'
      - $ref: '#/components/schemas/exactlyOneListId'
      - $ref: '#/components/schemas/exactlyOneId'
    exactlyOneNewAddress:
      $ref: '#/components/schemas/recipientAddress'
    exactlyOneListId:
      $ref: '#/components/schemas/addressListId'
    exactlyOneId:
      $ref: '#/components/schemas/addressId'
    recipientAddress:
      type: object
      properties:
        firstName:
          $ref: '#/components/schemas/firstName'
        lastName:
          $ref: '#/components/schemas/lastName'
        address1:
          $ref: '#/components/schemas/address1'
        city:
          $ref: '#/components/schemas/city'
        state:
          $ref: '#/components/schemas/state'
        zip:
          $ref: '#/components/schemas/zip'
        country:
          $ref: '#/components/schemas/country'
        nickName:
          $ref: '#/components/schemas/nickName'
        address2:
          $ref: '#/components/schemas/address2'
        address3:
          $ref: '#/components/schemas/address3'
        phoneNumber:
          $ref: '#/components/schemas/phoneNumber'
      required:
      - firstName
      - lastName
      - address1
      - city
      - state
      - zip
      - country
    jobOptions:
      type: object
      properties:
        documentClass:
          $ref: '#/components/schemas/documentClass'
        layout:
          $ref: '#/components/schemas/layout'
        mailclass:
          $ref: '#/components/schemas/mailclass'
        paperType:
          $ref: '#/components/schemas/paperType'
        printOption:
          $ref: '#/components/schemas/printOption'
        envelope:
          $ref: '#/components/schemas/envelope'
      required:
      - documentClass
      - layout
      - mailclass
      - paperType
      - printOption
      - envelope
    paymentDetails:
      type: object
      properties:
        billingType:
          $ref: '#/components/schemas/billingType'
        optionalPaymentFields:
          $ref: '#/components/schemas/optionalPaymentFields'
      required:
      - billingType
    billingType:
      type: string
      enum:
      - creditCard
      - invoice
      - ach
      - userCredit
    creditCardDetails:
      type: object
      properties:
        cardType:
          $ref: '#/components/schemas/cardType'
        cardNumber:
          $ref: '#/components/schemas/cardNumber'
        expirationDate:
          $ref: '#/components/schemas/expirationDate'
        cvv:
          $ref: '#/components/schemas/cvv'
      required:
      - cardType
      - cardNumber
      - expirationDate
      - cvv
    invoiceDetails:
      type: object
      properties:
        invoiceNumber:
          $ref: '#/components/schemas/invoiceNumber'
        amountDue:
          $ref: '#/components/schemas/amountDue'
      required:
      - invoiceNumber
      - amountDue
    achDetails:
      type: object
      properties:
        routingNumber:
          $ref: '#/components/schemas/routingNumber'
        accountNumber:
          $ref: '#/components/schemas/accountNumber'
        checkDigit:
          $ref: '#/components/schemas/checkDigit'
      required:
      - routingNumber
      - accountNumber
      - checkDigit
    creditAmount:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
      required:
      - amount
      - currency
    currency:
      type: string
      enum:
      - USD
      - EUR
      - GBP
      - CAD
      - AUD
    amount:
      type: number
    cardNumber:
      type: string
    expirationDate:
      type: object
      properties:
        month:
          $ref: '#/components/schemas/month'
        year:
          $ref: '#/components/schemas/year'
      required:
      - month
      - year
    month:
      type: integer
    year:
      type: integer
    cvv:
      type: integer
    routingNumber:
      type: string
    accountNumber:
      type: string
    checkDigit:
      type: integer
    invoiceNumber:
      type: string
    amountDue:
      type: number
    optionalPaymentFields:
      type: object
      properties:
        creditCardDetails:
          $ref: '#/components/schemas/creditCardDetails'
        invoiceDetails:
          $ref: '#/components/schemas/invoiceDetails'
        achDetails:
          $ref: '#/components/schemas/achDetails'
        creditAmount:
          $ref: '#/components/schemas/creditAmount'
    addressListId:
      type: string
    addressId:
      type: string
    documentName:
      type: string
    documentId:
      type: string
    externalUrl:
      type: string
    uploadRequestId:
      type: string
    zipId:
      type: string
    firstName:
      type: string
    lastName:
      type: string
    nickName:
      type: string
    address1:
      type: string
    address2:
      type: string
    address3:
      type: string
    city:
      type: string
    state:
      type: string
    country:
      type: string
    zip:
      type: string
    phoneNumber:
      type: string
    tags:
      type: array
      items:
        $ref: '#/components/schemas/tags'
    singleDocJobParams:
      type: object
      properties:
        documentSourceIdentifier:
          $ref: '#/components/schemas/documentSourceIdentifier'
        __anon__:
          type: array
          items:
            $ref: '#/components/schemas/recipientAddressSource'
        jobOptions:
          $ref: '#/components/schemas/jobOptions'
        paymentDetails:
          $ref: '#/components/schemas/paymentDetails'
        tags:
          $ref: '#/components/schemas/tags'
      required:
      - documentSourceIdentifier
      - __anon__
      - jobOptions
    submitMultiDocParams:
      type: object
      properties:
        __anon__:
          type: array
          items:
            type: object
            properties:
              documentSourceIdentifier:
                $ref: '#/components/schemas/documentSourceIdentifier'
              recipientAddressSource:
                $ref: '#/components/schemas/recipientAddressSource'
            required:
            - documentSourceIdentifier
            - recipientAddressSource
        jobOptions:
          $ref: '#/components/schemas/jobOptions'
        paymentDetails:
          $ref: '#/components/schemas/paymentDetails'
        tags:
          $ref: '#/components/schemas/tags'
      required:
      - __anon__
      - jobOptions
    mergeMultiDocParams:
      type: object
      properties:
        documentsToMerge:
          $ref: '#/components/schemas/documentsToMerge'
        recipientAddressSource:
          $ref: '#/components/schemas/recipientAddressSource'
        tags:
          $ref: '#/components/schemas/tags'
      required:
      - documentsToMerge
      - recipientAddressSource
    documentsToMerge:
      $ref: '#/components/schemas/documentSourceIdentifier'
    submitSingleDocWithTemplateParams:
      type: object
      properties:
        documentSourceIdentifier:
          $ref: '#/components/schemas/documentSourceIdentifier'
        __anon__:
          type: array
          items:
            $ref: '#/components/schemas/recipientAddressSource'
        jobTemplate:
          $ref: '#/components/schemas/jobTemplate'
        jobOptions:
          $ref: '#/components/schemas/jobOptions'
        paymentDetails:
          $ref: '#/components/schemas/paymentDetails'
        tags:
          $ref: '#/components/schemas/tags'
      required:
      - documentSourceIdentifier
      - jobTemplate
    submitMultiDocWithTemplateParams:
      type: object
      properties:
        __anon__:
          type: array
          items:
            type: object
            properties:
              documentSourceIdentifier:
                $ref: '#/components/schemas/documentSourceIdentifier'
              recipientAddressSource:
                $ref: '#/components/schemas/recipientAddressSource'
            required:
            - documentSourceIdentifier
            - recipientAddressSource
        jobTemplate:
          $ref: '#/components/schemas/jobTemplate'
        paymentDetails:
          $ref: '#/components/schemas/paymentDetails'
        tags:
          $ref: '#/components/schemas/tags'
      required:
      - __anon__
      - jobTemplate
      - paymentDetails
    mergeMultiDocWithTemplateParams:
      type: object
      properties:
        documentsToMerge:
          $ref: '#/components/schemas/documentsToMerge'
        recipientAddressSource:
          $ref: '#/components/schemas/recipientAddressSource'
        jobTemplate:
          $ref: '#/components/schemas/jobTemplate'
        paymentDetails:
          $ref: '#/components/schemas/paymentDetails'
        tags:
          $ref: '#/components/schemas/tags'
      required:
      - documentsToMerge
      - recipientAddressSource
      - jobTemplate
    splitPdfParams:
      type: object
      properties:
        documentSourceIdentifier:
          $ref: '#/components/schemas/documentSourceIdentifier'
        __anon__:
          type: array
          items:
            type: object
            properties:
              pageRange:
                $ref: '#/components/schemas/pageRange'
              __anon__:
                type: array
                items:
                  $ref: '#/components/schemas/recipientAddressSource'
            required:
            - pageRange
            - __anon__
        paymentDetails:
          $ref: '#/components/schemas/paymentDetails'
        tags:
          $ref: '#/components/schemas/tags'
      required:
      - documentSourceIdentifier
      - __anon__
    pageRange:
      type: object
      properties:
        startPage:
          $ref: '#/components/schemas/startPage'
        endPage:
          $ref: '#/components/schemas/endPage'
      required:
      - startPage
      - endPage
    startPage:
      type: integer
    endPage:
      type: integer
    splitPdfWithCaptureParams:
      type: object
      properties:
        documentSourceIdentifier:
          $ref: '#/components/schemas/documentSourceIdentifier'
        embeddedExtractionSpecs:
          $ref: '#/components/schemas/embeddedExtractionSpecs'
        paymentDetails:
          $ref: '#/components/schemas/paymentDetails'
        tags:
          $ref: '#/components/schemas/tags'
      required:
      - documentSourceIdentifier
      - embeddedExtractionSpecs
    embeddedExtractionSpecs:
      type: array
      items:
        $ref: '#/components/schemas/extractionSpec'
    multiPdfWithCaptureParams:
      type: object
      properties:
        addressCapturePdfs:
          $ref: '#/components/schemas/addressCapturePdfs'
        jobTemplate:
          $ref: '#/components/schemas/jobTemplate'
        paymentDetails:
          $ref: '#/components/schemas/paymentDetails'
        tags:
          $ref: '#/components/schemas/tags'
      required:
      - addressCapturePdfs
      - jobTemplate
    addressCapturePdfs:
      type: array
      items:
        $ref: '#/components/schemas/addressListPdf'
    addressListPdf:
      type: object
      properties:
        documentSourceIdentifier:
          $ref: '#/components/schemas/documentSourceIdentifier'
        addressListRegion:
          $ref: '#/components/schemas/addressListRegion'
        delimiter:
          $ref: '#/components/schemas/delimiter'
        tags:
          $ref: '#/components/schemas/tags'
      required:
      - documentSourceIdentifier
      - addressListRegion
    delimiter:
      type: string
    cardType:
      type: string
      enum:
      - visa
      - mastercard
      - discover
      - americanExpress
    printOption:
      type: string
      enum:
      - none
      - color
      - grayscale
    envelope:
      type: string
      enum:
      - flat
      - windowedFlat
      - letter
      - legal
      - postcard
    paperType:
      type: string
      enum:
      - letter
      - legal
      - postcard
    layout:
      type: string
      enum:
      - portrait
      - landscape
    mailclass:
      type: string
      enum:
      - firstClassMail
      - priorityMail
      - largeEnvelope
    documentClass:
      type: string
      enum:
      - businessLetter
      - personalLetter
    jobTemplate:
      oneOf:
      - $ref: '#/components/schemas/jobTemplateId'
      - $ref: '#/components/schemas/fullJobTemplate'
      - $ref: '#/components/schemas/jobTemplateName'
    jobTemplateId:
      type: string
    jobTemplateName:
      type: string
    fullJobTemplate:
      type: object
      properties:
        jobTemplateId:
          $ref: '#/components/schemas/jobTemplateId'
        jobTemplateName:
          $ref: '#/components/schemas/jobTemplateName'
        jobOptions:
          $ref: '#/components/schemas/jobOptions'
        __anon__:
          type: array
          items:
            $ref: '#/components/schemas/recipientAddressSource'
      required:
      - jobTemplateId
      - jobTemplateName
      - jobOptions
    addressListRegion:
      type: string
    extractionSpec:
      type: string
security:
- bearerAuth: []
