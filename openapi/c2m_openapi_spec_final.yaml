openapi: 3.0.3
info:
  title: LOB-Style Document Submission API
  version: 1.0.0
  description: API for submitting document jobs using LOB-style document and address
    structures.
servers:
- url: https://api.example.com
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    documentSourceIdentifier:
      oneOf:
      - type: object
        required:
        - documentId
        properties:
          documentId:
            type: string
      - type: object
        required:
        - externalUrl
        properties:
          externalUrl:
            type: string
            format: uri
      - type: object
        required:
        - uploadRequestId
        - documentName
        properties:
          uploadRequestId:
            type: string
          documentName:
            type: string
      - type: object
        required:
        - uploadRequestId
        - zipId
        - documentName
        properties:
          uploadRequestId:
            type: string
          zipId:
            type: string
          documentName:
            type: string
      - type: object
        required:
        - zipId
        - documentName
        properties:
          zipId:
            type: string
          documentName:
            type: string
    recipientAddress:
      type: object
      required:
      - firstName
      - lastName
      - address1
      - city
      - state
      - zip
      - country
      properties:
        firstName:
          type: string
        lastName:
          type: string
        nickName:
          type: string
        address1:
          type: string
        address2:
          type: string
        address3:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        country:
          type: string
        phoneNumber:
          type: string
    recipientAddressSource:
      oneOf:
      - $ref: '#/components/schemas/recipientAddress'
      - type: object
        required:
        - addressListId
        properties:
          addressListId:
            type: string
      - type: object
        required:
        - addressId
        properties:
          addressId:
            type: string
    jobOptions:
      type: object
      required:
      - documentClass
      - layout
      - mailclass
      - paperType
      - printOption
      - envelope
      properties:
        documentClass:
          type: string
          enum:
          - businessLetter
          - personalLetter
        layout:
          type: string
          enum:
          - portrait
          - landscape
        mailclass:
          type: string
          enum:
          - firstClassMail
          - priorityMail
          - largeEnvelope
        paperType:
          type: string
          enum:
          - letter
          - legal
          - postcard
        printOption:
          type: string
          enum:
          - none
          - color
          - grayscale
        envelope:
          type: string
          enum:
          - flat
          - windowedFlat
          - letter
          - legal
          - postcard
    creditCardDetails:
      type: object
      required:
      - cardType
      - cardNumber
      - expirationDate
      - cvv
      properties:
        cardType:
          type: string
          enum:
          - visa
          - mastercard
          - discover
          - americanExpress
        cardNumber:
          type: string
        expirationDate:
          type: object
          required:
          - month
          - year
          properties:
            month:
              type: integer
              minimum: 1
              maximum: 12
            year:
              type: integer
              minimum: 2000
        cvv:
          type: integer
    achDetails:
      type: object
      required:
      - routingNumber
      - accountNumber
      - checkDigit
      properties:
        routingNumber:
          type: string
        accountNumber:
          type: string
        checkDigit:
          type: integer
    creditAmount:
      type: object
      required:
      - amount
      - currency
      properties:
        amount:
          type: number
        currency:
          type: string
          enum:
          - USD
          - EUR
          - GBP
          - CAD
          - AUD
    paymentDetails:
      type: object
      required:
      - billingType
      properties:
        billingType:
          type: string
          enum:
          - creditCard
          - invoice
          - ach
          - userCredit
        creditCardDetails:
          $ref: '#/components/schemas/creditCardDetails'
        invoiceDetails:
          type: object
          properties:
            invoiceNumber:
              type: string
            amountDue:
              type: number
        achDetails:
          $ref: '#/components/schemas/achDetails'
        creditAmount:
          $ref: '#/components/schemas/creditAmount'
    StandardResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        jobId:
          type: string
  parameters:
    Authorization:
      name: Authorization
      in: header
      required: true
      schema:
        type: string
        example: Bearer <your-jwt-token>
      description: JWT Bearer token for authorization
    Content-Type:
      name: Content-Type
      in: header
      required: true
      schema:
        type: string
        example: application/json
security:
- bearerAuth: []
paths:
  /jobs/submit/single/doc:
    post:
      summary: Submit a single document to multiple recipients
      operationId: submitSingleDoc
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - documentSourceIdentifier
              - jobOptions
              properties:
                documentSourceIdentifier:
                  $ref: '#/components/schemas/documentSourceIdentifier'
                recipientAddresses:
                  type: array
                  items:
                    $ref: '#/components/schemas/recipientAddressSource'
                jobOptions:
                  $ref: '#/components/schemas/jobOptions'
                paymentDetails:
                  $ref: '#/components/schemas/paymentDetails'
                tags:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Job submission accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobId:
                    type: string
                  status:
                    type: string
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
  /jobs/submit/multi/doc:
    post:
      summary: Submit multiple documents, each to a different recipient
      operationId: submitMultiDoc
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - documentRecipientPairs
              - jobOptions
              properties:
                documentRecipientPairs:
                  type: array
                  items:
                    type: object
                    required:
                    - documentSourceIdentifier
                    - recipientAddressSource
                    properties:
                      documentSourceIdentifier:
                        $ref: '#/components/schemas/documentSourceIdentifier'
                      recipientAddressSource:
                        $ref: '#/components/schemas/recipientAddressSource'
                jobOptions:
                  $ref: '#/components/schemas/jobOptions'
                paymentDetails:
                  $ref: '#/components/schemas/paymentDetails'
                tags:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: OK
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
  /jobs/submit/multi/doc/merge:
    post:
      summary: Merge multiple documents and send to a single recipient
      operationId: submitMultiDocMerge
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - documentsToMerge
              - recipientAddressSource
              properties:
                documentsToMerge:
                  type: array
                  items:
                    $ref: '#/components/schemas/documentSourceIdentifier'
                recipientAddressSource:
                  $ref: '#/components/schemas/recipientAddressSource'
                tags:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: OK
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
  /jobs/submit/single/doc/jobTemplate:
    post:
      summary: Submit a document using a job template
      operationId: submitSingleDocJobTemplate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - documentSourceIdentifier
              - jobTemplate
              properties:
                documentSourceIdentifier:
                  $ref: '#/components/schemas/documentSourceIdentifier'
                recipientAddresses:
                  type: array
                  items:
                    $ref: '#/components/schemas/recipientAddressSource'
                jobTemplate:
                  type: string
                jobOptions:
                  $ref: '#/components/schemas/jobOptions'
                paymentDetails:
                  $ref: '#/components/schemas/paymentDetails'
                tags:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: OK
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
  /jobs/submit/multi/docs/jobtemplate:
    post:
      summary: Submit multiple documents with recipient addresses and job template
      operationId: submitMultiDocsJobTemplate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - documentRecipientPairs
              - jobTemplate
              - paymentDetails
              properties:
                documentRecipientPairs:
                  type: array
                  items:
                    type: object
                    required:
                    - documentSourceIdentifier
                    - recipientAddressSource
                    properties:
                      documentSourceIdentifier:
                        $ref: '#/components/schemas/documentSourceIdentifier'
                      recipientAddressSource:
                        $ref: '#/components/schemas/recipientAddressSource'
                jobTemplate:
                  type: string
                paymentDetails:
                  $ref: '#/components/schemas/paymentDetails'
                tags:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: OK
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
  /jobs/submit/multi/doc/merge/jobTemplate:
    post:
      summary: Merge documents, send to recipient using job template
      operationId: submitMultiDocMergeJobTemplate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - documentsToMerge
              - recipientAddressSource
              - jobTemplate
              properties:
                documentsToMerge:
                  type: array
                  items:
                    $ref: '#/components/schemas/documentSourceIdentifier'
                recipientAddressSource:
                  $ref: '#/components/schemas/recipientAddressSource'
                jobTemplate:
                  type: string
                paymentDetails:
                  $ref: '#/components/schemas/paymentDetails'
                tags:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: OK
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
  /jobs/submit/single/pdf/split:
    post:
      summary: Split a PDF into page ranges and send to different recipients
      operationId: submitSinglePdfSplit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - documentSourceIdentifier
              - pageRanges
              properties:
                documentSourceIdentifier:
                  $ref: '#/components/schemas/documentSourceIdentifier'
                pageRanges:
                  type: array
                  items:
                    type: object
                    required:
                    - startPage
                    - endPage
                    - recipientAddressSource
                    properties:
                      startPage:
                        type: integer
                      endPage:
                        type: integer
                      recipientAddressSource:
                        $ref: '#/components/schemas/recipientAddressSource'
                paymentDetails:
                  $ref: '#/components/schemas/paymentDetails'
                tags:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: OK
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
  /jobs/submit/single/pdf/split/addressCapture:
    post:
      summary: Split PDF and extract embedded recipient addresses
      operationId: submitSinglePdfSplitAddressCapture
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - documentSourceIdentifier
              - embeddedExtractionSpecs
              properties:
                documentSourceIdentifier:
                  $ref: '#/components/schemas/documentSourceIdentifier'
                embeddedExtractionSpecs:
                  type: array
                  items:
                    type: object
                    required:
                    - startPage
                    - endPage
                    - addressRegion
                    properties:
                      startPage:
                        type: integer
                      endPage:
                        type: integer
                      addressRegion:
                        type: object
                        required:
                        - x
                        - y
                        - width
                        - height
                        - pageOffset
                        properties:
                          x:
                            type: number
                          y:
                            type: number
                          width:
                            type: number
                          height:
                            type: number
                          pageOffset:
                            type: integer
                paymentDetails:
                  $ref: '#/components/schemas/paymentDetails'
                tags:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: OK
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
  /jobs/submit/multi/pdf/addressCapture:
    post:
      summary: Submit multiple PDFs with embedded address regions
      operationId: submitMultiPdfAddressCapture
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - addressCapturePdfs
              - jobTemplate
              properties:
                addressCapturePdfs:
                  type: array
                  items:
                    type: object
                    required:
                    - documentSourceIdentifier
                    - addressListRegion
                    properties:
                      documentSourceIdentifier:
                        $ref: '#/components/schemas/documentSourceIdentifier'
                      addressListRegion:
                        type: object
                        required:
                        - x
                        - y
                        - width
                        - height
                        - pageOffset
                        properties:
                          x:
                            type: number
                          y:
                            type: number
                          width:
                            type: number
                          height:
                            type: number
                          pageOffset:
                            type: integer
                      delimiter:
                        type: string
                      tags:
                        type: array
                        items:
                          type: string
                jobTemplate:
                  type: string
                paymentDetails:
                  $ref: '#/components/schemas/paymentDetails'
                tags:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: OK
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
  /webhooks/jobStatusUpdate:
    post:
      summary: Webhook endpoint to receive job status updates
      operationId: webhookJobStatusUpdate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - jobId
              - status
              - timestamp
              properties:
                jobId:
                  type: string
                  example: job_123456789
                status:
                  type: string
                  enum:
                  - queued
                  - processing
                  - completed
                  - failed
                  example: completed
                timestamp:
                  type: string
                  format: date-time
                  example: '2025-07-07T12:34:56Z'
                metadata:
                  type: object
                  additionalProperties:
                    type: string
                  example:
                    source: PrintCenterA
                    batch: B20250707
      responses:
        '200':
          description: Webhook received successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'
        '400':
          description: Invalid payload
        '401':
          description: Unauthorized
