*** Makefile.orig
--- Makefile
***************
*** 104,111 ****
- POSTMAN_WORKSPACE_PARAM				:= ?workspaceId=$(POSTMAN_WS)
+ # ---- Postman workspace query helpers ----
+ POSTMAN_Q_ID := ?workspaceId=$(POSTMAN_WS)   # /apis and /specs
+ POSTMAN_Q    := ?workspace=$(POSTMAN_WS)     # /collections, /mocks, /environments
***************
*** 160,170 ****
- # --- Python Virtual Environment ---
- VENV_DIR             								:= $(PYTHON_ENV_DIR)/e2o.venv
- VENV_PIP             								:= $(VENV_DIR)/bin/pip
- VENV_PYTHON          								:= $(VENV_DIR)/bin/python
- PYTHON3              								:= python3
- PYTHON              								:= $(PYTHON3)
- PYTHON_ENV_DIR       								:= $(SCRIPTS_DIR)/python_env
+ # --- Python Virtual Environment ---
+ PYTHON_ENV_DIR        = $(SCRIPTS_DIR)/python_env
+ VENV_DIR              = $(PYTHON_ENV_DIR)/e2o.venv
+ VENV_PIP              = $(VENV_DIR)/bin/pip
+ VENV_PYTHON           = $(VENV_DIR)/bin/python
+ PYTHON3               = python3
+ PYTHON                = $(PYTHON3)
***************
*** 315,321 ****
  	@echo "📤 Installing required Python modules..."
- 	$(VENV_PIP) $(INSTAALL_PYTHON_MODULES)
+ 	$(MAKE) venv
+ 	$(VENV_PIP) $(INSTALL_PYTHON_MODULES)
***************
*** 333,338 ****
 .PHONY: lint
 lint:
 	$(REDOCLY) lint $(C2MAPIV2_OPENAPI_SPEC)
 	$(SPECTRAL) lint $(C2MAPIV2_OPENAPI_SPEC)
 
---  ADD BELOW THIS BLOCK  ---
+ 
+ # --- Ensure venv exists & deps installed once ---
+ .PHONY: venv
+ venv:
+ 	@test -x "$(VENV_PIP)" || { echo "🐍 Creating venv at $(VENV_DIR)"; $(PYTHON3) -m venv "$(VENV_DIR)"; }
+ 	@"$(VENV_PIP)" install -U pip setuptools wheel
+ 	@"$(VENV_PIP)" -q $(INSTALL_PYTHON_MODULES)
***************
*** 574,601 ****
 postman-collection-upload:
 	@echo "📤 Uploading Postman collection $(POSTMAN_COLLECTION_RAW) to workspace $(POSTMAN_WS)..."
 	@COLLECTION_UID=$$(jq -c '{collection: .}' "$(POSTMAN_COLLECTION_RAW)" | \
- 		$(call curl_json,--request POST "$(POSTMAN_COLLECTIONS_URL)?workspace=$(POSTMAN_WS)",--data-binary @-) \
+ 		$(call curl_json,--request POST "$(POSTMAN_COLLECTIONS_URL)$(POSTMAN_Q)",--data-binary @-) \
 		| jq -r '.collection.uid'); \
 	if [ -z "$$COLLECTION_UID" ] || [ "$$COLLECTION_UID" = "null" ]; then \
 		echo "❌ Failed to upload collection"; exit 1; \
 	else \
 		echo "✅ Collection uploaded with UID: $$COLLECTION_UID"; \
 		echo $$COLLECTION_UID > "$(POSTMAN_COLLECTION_UID_FILE)"; \
 	fi
***************
*** 645,651 ****
 	@echo "📤 Creating mock server via Postman API..."
- 	@curl --silent --location --request POST "$(POSTMAN_MOCKS_URL)$(POSTMAN_WORKSAPCE_PARAM)" \
- 		$(POSTMAN_CURL_HEADERS_XC) \
- 		--data-binary "@$(POSTMAN_MOCK_PAYLOAD)" \
- 		-o "$(POSTMAN_MOCK_DEBUG)"
+ 	@$(call curl_json,--request POST "$(POSTMAN_MOCKS_URL)$(POSTMAN_Q)",--data-binary "@$(POSTMAN_MOCK_PAYLOAD)") \
+ 		> "$(POSTMAN_MOCK_DEBUG)"
***************
*** 820,850 ****
-.PHONY: docs-serve
-docs-serve:
-	@echo "🌐 Serving API documentation locally on http://localhost:8080..."
-	@python3 -m http.server 8080 --directory $(DOCS_DIR)
+ # --- Docs build products ---
+ .PHONY: docs-build
+ docs-build:
+ 	@echo "📚 Building API documentation with Redoc..."
+ 	$(REDOCLY) build-docs $(C2MAPIV2_OPENAPI_SPEC) -o $(REDOC_HTML_OUTPUT)
+ 	$(SWAGGER) bundle $(C2MAPIV2_OPENAPI_SPEC) --outfile $(OPENAPI_BUNDLED_FILE) --type yaml
+ 
+ # --- Docs: serve in background with PID ---
+ DOCS_PORT      ?= 8080
+ DOCS_HOST      ?= 127.0.0.1
+ DOCS_PID_FILE  ?= $(DOCS_DIR)/http_pid.txt
+ DOCS_LOG       ?= $(DOCS_DIR)/http.log
+ DOCS_URL       := http://$(DOCS_HOST):$(DOCS_PORT)
+ 
+ .PHONY: docs-serve
+ docs-serve: docs-build | $(DOCS_DIR)
+ 	@echo "🌐 Starting docs server at $(DOCS_URL)…"
+ 	@EXISTING=$$(lsof -ti :$(DOCS_PORT)) ; \
+ 	if [ -n "$$EXISTING" ]; then \
+ 		echo "ℹ️ Port $(DOCS_PORT) is in use (PID $$EXISTING). Stopping it..."; \
+ 		kill $$EXISTING || true; sleep 1; \
+ 	fi
+ 	@echo "=== $$(date) ===" >> "$(DOCS_LOG)"
+ 	@nohup $(PYTHON3) -m http.server $(DOCS_PORT) --bind $(DOCS_HOST) --directory "$(DOCS_DIR)" >> "$(DOCS_LOG)" 2>&1 &
+ 	@i=0; \
+ 	while [ $$i -lt 30 ]; do \
+ 		if lsof -ti :$(DOCS_PORT) >/dev/null; then break; fi; \
+ 		sleep 0.5; i=$$((i+1)); \
+ 	done; \
+ 	if lsof -ti :$(DOCS_PORT) >/dev/null; then \
+ 		PID=$$(lsof -ti :$(DOCS_PORT) | head -n1); \
+ 		echo "$$PID" > "$(DOCS_PID_FILE)"; \
+ 		echo "✅ Docs server running at $(DOCS_URL) (PID: $$PID)"; \
+ 	else \
+ 		echo "❌ Failed to start docs server."; \
+ 		echo "─── Last 40 log lines ───"; \
+ 		tail -n 40 "$(DOCS_LOG)" || true; \
+ 		exit 1; \
+ 	fi
+ 
+ .PHONY: docs-stop
+ docs-stop:
+ 	@if [ -f "$(DOCS_PID_FILE)" ]; then \
+ 		PID=$$(cat "$(DOCS_PID_FILE)" | xargs); \
+ 		if [ -n "$$PID" ]; then \
+ 			echo "🛑 Stopping docs server PID $$PID"; \
+ 			kill -9 "$$PID" 2>/dev/null || true; \
+ 		fi; \
+ 		rm -f "$(DOCS_PID_FILE)"; \
+ 	else \
+ 		echo "ℹ️ No docs PID file."; \
+ 	fi
+ 
+ .PHONY: docs-status
+ docs-status:
+ 	@if lsof -ti :$(DOCS_PORT) >/dev/null; then \
+ 		echo "✅ Docs server running at $(DOCS_URL) (PID: $$(lsof -ti :$(DOCS_PORT)))"; \
+ 	else \
+ 		echo "❌ Docs server not running."; \
+ 	fi
***************
*** 1037,1042 ****
 .PHONY: postman-workspace-debug
 postman-workspace-debug:
-     @echo "🔍 Current Postman workspace ID: $(POSTMAN_WS)"
+ 	@echo "🔍 Current Postman workspace ID: $(POSTMAN_WS)"
