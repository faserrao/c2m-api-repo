{
  "name": "C2M API Spec",
  "type": "OPENAPI:3.0",
  "files": [
    {
      "path": "index.json",
      "content": "\"{\n  \\"openapi\\": \\"3.0.3\\",\n  \\"info\\": {\n    \\"title\\": \\"LOB-Style Document Submission API\\",\n    \\"version\\": \\"1.0.0\\",\n    \\"description\\": \\"API for submitting document jobs using LOB-style document and address structures.\\"\n  },\n  \\"servers\\": [\n    {\n      \\"url\\": \\"http://localhost:4010\\"\n    }\n  ],\n  \\"components\\": {\n    \\"securitySchemes\\": {\n      \\"bearerAuth\\": {\n        \\"type\\": \\"http\\",\n        \\"scheme\\": \\"bearer\\",\n        \\"bearerFormat\\": \\"JWT\\"\n      }\n    },\n    \\"schemas\\": {\n      \\"documentSourceIdentifier\\": {\n        \\"oneOf\\": [\n          {\n            \\"type\\": \\"object\\",\n            \\"required\\": [\n              \\"documentId\\"\n            ],\n            \\"properties\\": {\n              \\"documentId\\": {\n                \\"type\\": \\"string\\"\n              }\n            }\n          },\n          {\n            \\"type\\": \\"object\\",\n            \\"required\\": [\n              \\"externalUrl\\"\n            ],\n            \\"properties\\": {\n              \\"externalUrl\\": {\n                \\"type\\": \\"string\\",\n                \\"format\\": \\"uri\\"\n              }\n            }\n          },\n          {\n            \\"type\\": \\"object\\",\n            \\"required\\": [\n              \\"uploadRequestId\\",\n              \\"documentName\\"\n            ],\n            \\"properties\\": {\n              \\"uploadRequestId\\": {\n                \\"type\\": \\"string\\"\n              },\n              \\"documentName\\": {\n                \\"type\\": \\"string\\"\n              }\n            }\n          },\n          {\n            \\"type\\": \\"object\\",\n            \\"required\\": [\n              \\"uploadRequestId\\",\n              \\"zipId\\",\n              \\"documentName\\"\n            ],\n            \\"properties\\": {\n              \\"uploadRequestId\\": {\n                \\"type\\": \\"string\\"\n              },\n              \\"zipId\\": {\n                \\"type\\": \\"string\\"\n              },\n              \\"documentName\\": {\n                \\"type\\": \\"string\\"\n              }\n            }\n          },\n          {\n            \\"type\\": \\"object\\",\n            \\"required\\": [\n              \\"zipId\\",\n              \\"documentName\\"\n            ],\n            \\"properties\\": {\n              \\"zipId\\": {\n                \\"type\\": \\"string\\"\n              },\n              \\"documentName\\": {\n                \\"type\\": \\"string\\"\n              }\n            }\n          }\n        ]\n      },\n      \\"recipientAddress\\": {\n        \\"type\\": \\"object\\",\n        \\"required\\": [\n          \\"firstName\\",\n          \\"lastName\\",\n          \\"address1\\",\n          \\"city\\",\n          \\"state\\",\n          \\"zip\\",\n          \\"country\\"\n        ],\n        \\"properties\\": {\n          \\"firstName\\": {\n            \\"type\\": \\"string\\"\n          },\n          \\"lastName\\": {\n            \\"type\\": \\"string\\"\n          },\n          \\"nickName\\": {\n            \\"type\\": \\"string\\"\n          },\n          \\"address1\\": {\n            \\"type\\": \\"string\\"\n          },\n          \\"address2\\": {\n            \\"type\\": \\"string\\"\n          },\n          \\"address3\\": {\n            \\"type\\": \\"string\\"\n          },\n          \\"city\\": {\n            \\"type\\": \\"string\\"\n          },\n          \\"state\\": {\n            \\"type\\": \\"string\\"\n          },\n          \\"zip\\": {\n            \\"type\\": \\"string\\"\n          },\n          \\"country\\": {\n            \\"type\\": \\"string\\"\n          },\n          \\"phoneNumber\\": {\n            \\"type\\": \\"string\\"\n          }\n        }\n      },\n      \\"recipientAddressSource\\": {\n        \\"oneOf\\": [\n          {\n            \\"$ref\\": \\"#/components/schemas/recipientAddress\\"\n          },\n          {\n            \\"type\\": \\"object\\",\n            \\"required\\": [\n              \\"addressListId\\"\n            ],\n            \\"properties\\": {\n              \\"addressListId\\": {\n                \\"type\\": \\"string\\"\n              }\n            }\n          },\n          {\n            \\"type\\": \\"object\\",\n            \\"required\\": [\n              \\"addressId\\"\n            ],\n            \\"properties\\": {\n              \\"addressId\\": {\n                \\"type\\": \\"string\\"\n              }\n            }\n          }\n        ]\n      },\n      \\"jobOptions\\": {\n        \\"type\\": \\"object\\",\n        \\"required\\": [\n          \\"documentClass\\",\n          \\"layout\\",\n          \\"mailclass\\",\n          \\"paperType\\",\n          \\"printOption\\",\n          \\"envelope\\"\n        ],\n        \\"properties\\": {\n          \\"documentClass\\": {\n            \\"type\\": \\"string\\",\n            \\"enum\\": [\n              \\"businessLetter\\",\n              \\"personalLetter\\"\n            ]\n          },\n          \\"layout\\": {\n            \\"type\\": \\"string\\",\n            \\"enum\\": [\n              \\"portrait\\",\n              \\"landscape\\"\n            ]\n          },\n          \\"mailclass\\": {\n            \\"type\\": \\"string\\",\n            \\"enum\\": [\n              \\"firstClassMail\\",\n              \\"priorityMail\\",\n              \\"largeEnvelope\\"\n            ]\n          },\n          \\"paperType\\": {\n            \\"type\\": \\"string\\",\n            \\"enum\\": [\n              \\"letter\\",\n              \\"legal\\",\n              \\"postcard\\"\n            ]\n          },\n          \\"printOption\\": {\n            \\"type\\": \\"string\\",\n            \\"enum\\": [\n              \\"none\\",\n              \\"color\\",\n              \\"grayscale\\"\n            ]\n          },\n          \\"envelope\\": {\n            \\"type\\": \\"string\\",\n            \\"enum\\": [\n              \\"flat\\",\n              \\"windowedFlat\\",\n              \\"letter\\",\n              \\"legal\\",\n              \\"postcard\\"\n            ]\n          }\n        }\n      },\n      \\"creditCardDetails\\": {\n        \\"type\\": \\"object\\",\n        \\"required\\": [\n          \\"cardType\\",\n          \\"cardNumber\\",\n          \\"expirationDate\\",\n          \\"cvv\\"\n        ],\n        \\"properties\\": {\n          \\"cardType\\": {\n            \\"type\\": \\"string\\",\n            \\"enum\\": [\n              \\"visa\\",\n              \\"mastercard\\",\n              \\"discover\\",\n              \\"americanExpress\\"\n            ]\n          },\n          \\"cardNumber\\": {\n            \\"type\\": \\"string\\"\n          },\n          \\"expirationDate\\": {\n            \\"type\\": \\"object\\",\n            \\"required\\": [\n              \\"month\\",\n              \\"year\\"\n            ],\n            \\"properties\\": {\n              \\"month\\": {\n                \\"type\\": \\"integer\\",\n                \\"minimum\\": 1,\n                \\"maximum\\": 12\n              },\n              \\"year\\": {\n                \\"type\\": \\"integer\\",\n                \\"minimum\\": 2000\n              }\n            }\n          },\n          \\"cvv\\": {\n            \\"type\\": \\"integer\\"\n          }\n        }\n      },\n      \\"achDetails\\": {\n        \\"type\\": \\"object\\",\n        \\"required\\": [\n          \\"routingNumber\\",\n          \\"accountNumber\\",\n          \\"checkDigit\\"\n        ],\n        \\"properties\\": {\n          \\"routingNumber\\": {\n            \\"type\\": \\"string\\"\n          },\n          \\"accountNumber\\": {\n            \\"type\\": \\"string\\"\n          },\n          \\"checkDigit\\": {\n            \\"type\\": \\"integer\\"\n          }\n        }\n      },\n      \\"creditAmount\\": {\n        \\"type\\": \\"object\\",\n        \\"required\\": [\n          \\"amount\\",\n          \\"currency\\"\n        ],\n        \\"properties\\": {\n          \\"amount\\": {\n            \\"type\\": \\"number\\"\n          },\n          \\"currency\\": {\n            \\"type\\": \\"string\\",\n            \\"enum\\": [\n              \\"USD\\",\n              \\"EUR\\",\n              \\"GBP\\",\n              \\"CAD\\",\n              \\"AUD\\"\n            ]\n          }\n        }\n      },\n      \\"paymentDetails\\": {\n        \\"type\\": \\"object\\",\n        \\"required\\": [\n          \\"billingType\\"\n        ],\n        \\"properties\\": {\n          \\"billingType\\": {\n            \\"type\\": \\"string\\",\n            \\"enum\\": [\n              \\"creditCard\\",\n              \\"invoice\\",\n              \\"ach\\",\n              \\"userCredit\\"\n            ]\n          },\n          \\"creditCardDetails\\": {\n            \\"$ref\\": \\"#/components/schemas/creditCardDetails\\"\n          },\n          \\"invoiceDetails\\": {\n            \\"type\\": \\"object\\",\n            \\"properties\\": {\n              \\"invoiceNumber\\": {\n                \\"type\\": \\"string\\"\n              },\n              \\"amountDue\\": {\n                \\"type\\": \\"number\\"\n              }\n            }\n          },\n          \\"achDetails\\": {\n            \\"$ref\\": \\"#/components/schemas/achDetails\\"\n          },\n          \\"creditAmount\\": {\n            \\"$ref\\": \\"#/components/schemas/creditAmount\\"\n          }\n        }\n      },\n      \\"StandardResponse\\": {\n        \\"type\\": \\"object\\",\n        \\"properties\\": {\n          \\"status\\": {\n            \\"type\\": \\"string\\"\n          },\n          \\"message\\": {\n            \\"type\\": \\"string\\"\n          },\n          \\"jobId\\": {\n            \\"type\\": \\"string\\"\n          }\n        }\n      }\n    },\n    \\"parameters\\": {\n      \\"Authorization\\": {\n        \\"name\\": \\"Authorization\\",\n        \\"in\\": \\"header\\",\n        \\"required\\": true,\n        \\"schema\\": {\n          \\"type\\": \\"string\\",\n          \\"example\\": \\"Bearer <your-jwt-token>\\"\n        },\n        \\"description\\": \\"JWT Bearer token for authorization\\"\n      },\n      \\"Content-Type\\": {\n        \\"name\\": \\"Content-Type\\",\n        \\"in\\": \\"header\\",\n        \\"required\\": true,\n        \\"schema\\": {\n          \\"type\\": \\"string\\",\n          \\"example\\": \\"application/json\\"\n        }\n      }\n    }\n  },\n  \\"security\\": [\n    {\n      \\"bearerAuth\\": []\n    }\n  ],\n  \\"paths\\": {\n    \\"/jobs/submit/single/doc\\": {\n      \\"post\\": {\n        \\"summary\\": \\"Submit a single document to multiple recipients\\",\n        \\"operationId\\": \\"submitSingleDoc\\",\n        \\"requestBody\\": {\n          \\"required\\": true,\n          \\"content\\": {\n            \\"application/json\\": {\n              \\"schema\\": {\n                \\"type\\": \\"object\\",\n                \\"required\\": [\n                  \\"documentSourceIdentifier\\",\n                  \\"jobOptions\\"\n                ],\n                \\"properties\\": {\n                  \\"documentSourceIdentifier\\": {\n                    \\"$ref\\": \\"#/components/schemas/documentSourceIdentifier\\"\n                  },\n                  \\"recipientAddresses\\": {\n                    \\"type\\": \\"array\\",\n                    \\"items\\": {\n                      \\"$ref\\": \\"#/components/schemas/recipientAddressSource\\"\n                    }\n                  },\n                  \\"jobOptions\\": {\n                    \\"$ref\\": \\"#/components/schemas/jobOptions\\"\n                  },\n                  \\"paymentDetails\\": {\n                    \\"$ref\\": \\"#/components/schemas/paymentDetails\\"\n                  },\n                  \\"tags\\": {\n                    \\"type\\": \\"array\\",\n                    \\"items\\": {\n                      \\"type\\": \\"string\\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \\"responses\\": {\n          \\"200\\": {\n            \\"description\\": \\"Job submission accepted\\",\n            \\"content\\": {\n              \\"application/json\\": {\n                \\"schema\\": {\n                  \\"type\\": \\"object\\",\n                  \\"properties\\": {\n                    \\"jobId\\": {\n                      \\"type\\": \\"string\\"\n                    },\n                    \\"status\\": {\n                      \\"type\\": \\"string\\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \\"400\\": {\n            \\"description\\": \\"Invalid request\\"\n          },\n          \\"401\\": {\n            \\"description\\": \\"Unauthorized\\"\n          }\n        }\n      }\n    },\n    \\"/jobs/submit/multi/doc\\": {\n      \\"post\\": {\n        \\"summary\\": \\"Submit multiple documents, each to a different recipient\\",\n        \\"operationId\\": \\"submitMultiDoc\\",\n        \\"requestBody\\": {\n          \\"required\\": true,\n          \\"content\\": {\n            \\"application/json\\": {\n              \\"schema\\": {\n                \\"type\\": \\"object\\",\n                \\"required\\": [\n                  \\"documentRecipientPairs\\",\n                  \\"jobOptions\\"\n                ],\n                \\"properties\\": {\n                  \\"documentRecipientPairs\\": {\n                    \\"type\\": \\"array\\",\n                    \\"items\\": {\n                      \\"type\\": \\"object\\",\n                      \\"required\\": [\n                        \\"documentSourceIdentifier\\",\n                        \\"recipientAddressSource\\"\n                      ],\n                      \\"properties\\": {\n                        \\"documentSourceIdentifier\\": {\n                          \\"$ref\\": \\"#/components/schemas/documentSourceIdentifier\\"\n                        },\n                        \\"recipientAddressSource\\": {\n                          \\"$ref\\": \\"#/components/schemas/recipientAddressSource\\"\n                        }\n                      }\n                    }\n                  },\n                  \\"jobOptions\\": {\n                    \\"$ref\\": \\"#/components/schemas/jobOptions\\"\n                  },\n                  \\"paymentDetails\\": {\n                    \\"$ref\\": \\"#/components/schemas/paymentDetails\\"\n                  },\n                  \\"tags\\": {\n                    \\"type\\": \\"array\\",\n                    \\"items\\": {\n                      \\"type\\": \\"string\\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \\"responses\\": {\n          \\"200\\": {\n            \\"description\\": \\"OK\\"\n          },\n          \\"400\\": {\n            \\"description\\": \\"Invalid request\\"\n          },\n          \\"401\\": {\n            \\"description\\": \\"Unauthorized\\"\n          }\n        }\n      }\n    },\n    \\"/jobs/submit/multi/doc/merge\\": {\n      \\"post\\": {\n        \\"summary\\": \\"Merge multiple documents and send to a single recipient\\",\n        \\"operationId\\": \\"submitMultiDocMerge\\",\n        \\"requestBody\\": {\n          \\"required\\": true,\n          \\"content\\": {\n            \\"application/json\\": {\n              \\"schema\\": {\n                \\"type\\": \\"object\\",\n                \\"required\\": [\n                  \\"documentsToMerge\\",\n                  \\"recipientAddressSource\\"\n                ],\n                \\"properties\\": {\n                  \\"documentsToMerge\\": {\n                    \\"type\\": \\"array\\",\n                    \\"items\\": {\n                      \\"$ref\\": \\"#/components/schemas/documentSourceIdentifier\\"\n                    }\n                  },\n                  \\"recipientAddressSource\\": {\n                    \\"$ref\\": \\"#/components/schemas/recipientAddressSource\\"\n                  },\n                  \\"tags\\": {\n                    \\"type\\": \\"array\\",\n                    \\"items\\": {\n                      \\"type\\": \\"string\\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \\"responses\\": {\n          \\"200\\": {\n            \\"description\\": \\"OK\\"\n          },\n          \\"400\\": {\n            \\"description\\": \\"Invalid request\\"\n          },\n          \\"401\\": {\n            \\"description\\": \\"Unauthorized\\"\n          }\n        }\n      }\n    },\n    \\"/jobs/submit/single/doc/jobTemplate\\": {\n      \\"post\\": {\n        \\"summary\\": \\"Submit a document using a job template\\",\n        \\"operationId\\": \\"submitSingleDocJobTemplate\\",\n        \\"requestBody\\": {\n          \\"required\\": true,\n          \\"content\\": {\n            \\"application/json\\": {\n              \\"schema\\": {\n                \\"type\\": \\"object\\",\n                \\"required\\": [\n                  \\"documentSourceIdentifier\\",\n                  \\"jobTemplate\\"\n                ],\n                \\"properties\\": {\n                  \\"documentSourceIdentifier\\": {\n                    \\"$ref\\": \\"#/components/schemas/documentSourceIdentifier\\"\n                  },\n                  \\"recipientAddresses\\": {\n                    \\"type\\": \\"array\\",\n                    \\"items\\": {\n                      \\"$ref\\": \\"#/components/schemas/recipientAddressSource\\"\n                    }\n                  },\n                  \\"jobTemplate\\": {\n                    \\"type\\": \\"string\\"\n                  },\n                  \\"jobOptions\\": {\n                    \\"$ref\\": \\"#/components/schemas/jobOptions\\"\n                  },\n                  \\"paymentDetails\\": {\n                    \\"$ref\\": \\"#/components/schemas/paymentDetails\\"\n                  },\n                  \\"tags\\": {\n                    \\"type\\": \\"array\\",\n                    \\"items\\": {\n                      \\"type\\": \\"string\\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \\"responses\\": {\n          \\"200\\": {\n            \\"description\\": \\"OK\\"\n          },\n          \\"400\\": {\n            \\"description\\": \\"Invalid request\\"\n          },\n          \\"401\\": {\n            \\"description\\": \\"Unauthorized\\"\n          }\n        }\n      }\n    },\n    \\"/jobs/submit/multi/docs/jobtemplate\\": {\n      \\"post\\": {\n        \\"summary\\": \\"Submit multiple documents with recipient addresses and job template\\",\n        \\"operationId\\": \\"submitMultiDocsJobTemplate\\",\n        \\"requestBody\\": {\n          \\"required\\": true,\n          \\"content\\": {\n            \\"application/json\\": {\n              \\"schema\\": {\n                \\"type\\": \\"object\\",\n                \\"required\\": [\n                  \\"documentRecipientPairs\\",\n                  \\"jobTemplate\\",\n                  \\"paymentDetails\\"\n                ],\n                \\"properties\\": {\n                  \\"documentRecipientPairs\\": {\n                    \\"type\\": \\"array\\",\n                    \\"items\\": {\n                      \\"type\\": \\"object\\",\n                      \\"required\\": [\n                        \\"documentSourceIdentifier\\",\n                        \\"recipientAddressSource\\"\n                      ],\n                      \\"properties\\": {\n                        \\"documentSourceIdentifier\\": {\n                          \\"$ref\\": \\"#/components/schemas/documentSourceIdentifier\\"\n                        },\n                        \\"recipientAddressSource\\": {\n                          \\"$ref\\": \\"#/components/schemas/recipientAddressSource\\"\n                        }\n                      }\n                    }\n                  },\n                  \\"jobTemplate\\": {\n                    \\"type\\": \\"string\\"\n                  },\n                  \\"paymentDetails\\": {\n                    \\"$ref\\": \\"#/components/schemas/paymentDetails\\"\n                  },\n                  \\"tags\\": {\n                    \\"type\\": \\"array\\",\n                    \\"items\\": {\n                      \\"type\\": \\"string\\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \\"responses\\": {\n          \\"200\\": {\n            \\"description\\": \\"OK\\"\n          },\n          \\"400\\": {\n            \\"description\\": \\"Invalid request\\"\n          },\n          \\"401\\": {\n            \\"description\\": \\"Unauthorized\\"\n          }\n        }\n      }\n    },\n    \\"/jobs/submit/multi/doc/merge/jobTemplate\\": {\n      \\"post\\": {\n        \\"summary\\": \\"Merge documents, send to recipient using job template\\",\n        \\"operationId\\": \\"submitMultiDocMergeJobTemplate\\",\n        \\"requestBody\\": {\n          \\"required\\": true,\n          \\"content\\": {\n            \\"application/json\\": {\n              \\"schema\\": {\n                \\"type\\": \\"object\\",\n                \\"required\\": [\n                  \\"documentsToMerge\\",\n                  \\"recipientAddressSource\\",\n                  \\"jobTemplate\\"\n                ],\n                \\"properties\\": {\n                  \\"documentsToMerge\\": {\n                    \\"type\\": \\"array\\",\n                    \\"items\\": {\n                      \\"$ref\\": \\"#/components/schemas/documentSourceIdentifier\\"\n                    }\n                  },\n                  \\"recipientAddressSource\\": {\n                    \\"$ref\\": \\"#/components/schemas/recipientAddressSource\\"\n                  },\n                  \\"jobTemplate\\": {\n                    \\"type\\": \\"string\\"\n                  },\n                  \\"paymentDetails\\": {\n                    \\"$ref\\": \\"#/components/schemas/paymentDetails\\"\n                  },\n                  \\"tags\\": {\n                    \\"type\\": \\"array\\",\n                    \\"items\\": {\n                      \\"type\\": \\"string\\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \\"responses\\": {\n          \\"200\\": {\n            \\"description\\": \\"OK\\"\n          },\n          \\"400\\": {\n            \\"description\\": \\"Invalid request\\"\n          },\n          \\"401\\": {\n            \\"description\\": \\"Unauthorized\\"\n          }\n        }\n      }\n    },\n    \\"/jobs/submit/single/pdf/split\\": {\n      \\"post\\": {\n        \\"summary\\": \\"Split a PDF into page ranges and send to different recipients\\",\n        \\"operationId\\": \\"submitSinglePdfSplit\\",\n        \\"requestBody\\": {\n          \\"required\\": true,\n          \\"content\\": {\n            \\"application/json\\": {\n              \\"schema\\": {\n                \\"type\\": \\"object\\",\n                \\"required\\": [\n                  \\"documentSourceIdentifier\\",\n                  \\"pageRanges\\"\n                ],\n                \\"properties\\": {\n                  \\"documentSourceIdentifier\\": {\n                    \\"$ref\\": \\"#/components/schemas/documentSourceIdentifier\\"\n                  },\n                  \\"pageRanges\\": {\n                    \\"type\\": \\"array\\",\n                    \\"items\\": {\n                      \\"type\\": \\"object\\",\n                      \\"required\\": [\n                        \\"startPage\\",\n                        \\"endPage\\",\n                        \\"recipientAddressSource\\"\n                      ],\n                      \\"properties\\": {\n                        \\"startPage\\": {\n                          \\"type\\": \\"integer\\"\n                        },\n                        \\"endPage\\": {\n                          \\"type\\": \\"integer\\"\n                        },\n                        \\"recipientAddressSource\\": {\n                          \\"$ref\\": \\"#/components/schemas/recipientAddressSource\\"\n                        }\n                      }\n                    }\n                  },\n                  \\"paymentDetails\\": {\n                    \\"$ref\\": \\"#/components/schemas/paymentDetails\\"\n                  },\n                  \\"tags\\": {\n                    \\"type\\": \\"array\\",\n                    \\"items\\": {\n                      \\"type\\": \\"string\\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \\"responses\\": {\n          \\"200\\": {\n            \\"description\\": \\"OK\\"\n          },\n          \\"400\\": {\n            \\"description\\": \\"Invalid request\\"\n          },\n          \\"401\\": {\n            \\"description\\": \\"Unauthorized\\"\n          }\n        }\n      }\n    },\n    \\"/jobs/submit/single/pdf/split/addressCapture\\": {\n      \\"post\\": {\n        \\"summary\\": \\"Split PDF and extract embedded recipient addresses\\",\n        \\"operationId\\": \\"submitSinglePdfSplitAddressCapture\\",\n        \\"requestBody\\": {\n          \\"required\\": true,\n          \\"content\\": {\n            \\"application/json\\": {\n              \\"schema\\": {\n                \\"type\\": \\"object\\",\n                \\"required\\": [\n                  \\"documentSourceIdentifier\\",\n                  \\"embeddedExtractionSpecs\\"\n                ],\n                \\"properties\\": {\n                  \\"documentSourceIdentifier\\": {\n                    \\"$ref\\": \\"#/components/schemas/documentSourceIdentifier\\"\n                  },\n                  \\"embeddedExtractionSpecs\\": {\n                    \\"type\\": \\"array\\",\n                    \\"items\\": {\n                      \\"type\\": \\"object\\",\n                      \\"required\\": [\n                        \\"startPage\\",\n                        \\"endPage\\",\n                        \\"addressRegion\\"\n                      ],\n                      \\"properties\\": {\n                        \\"startPage\\": {\n                          \\"type\\": \\"integer\\"\n                        },\n                        \\"endPage\\": {\n                          \\"type\\": \\"integer\\"\n                        },\n                        \\"addressRegion\\": {\n                          \\"type\\": \\"object\\",\n                          \\"required\\": [\n                            \\"x\\",\n                            \\"y\\",\n                            \\"width\\",\n                            \\"height\\",\n                            \\"pageOffset\\"\n                          ],\n                          \\"properties\\": {\n                            \\"x\\": {\n                              \\"type\\": \\"number\\"\n                            },\n                            \\"y\\": {\n                              \\"type\\": \\"number\\"\n                            },\n                            \\"width\\": {\n                              \\"type\\": \\"number\\"\n                            },\n                            \\"height\\": {\n                              \\"type\\": \\"number\\"\n                            },\n                            \\"pageOffset\\": {\n                              \\"type\\": \\"integer\\"\n                            }\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \\"paymentDetails\\": {\n                    \\"$ref\\": \\"#/components/schemas/paymentDetails\\"\n                  },\n                  \\"tags\\": {\n                    \\"type\\": \\"array\\",\n                    \\"items\\": {\n                      \\"type\\": \\"string\\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \\"responses\\": {\n          \\"200\\": {\n            \\"description\\": \\"OK\\"\n          },\n          \\"400\\": {\n            \\"description\\": \\"Invalid request\\"\n          },\n          \\"401\\": {\n            \\"description\\": \\"Unauthorized\\"\n          }\n        }\n      }\n    },\n    \\"/jobs/submit/multi/pdf/addressCapture\\": {\n      \\"post\\": {\n        \\"summary\\": \\"Submit multiple PDFs with embedded address regions\\",\n        \\"operationId\\": \\"submitMultiPdfAddressCapture\\",\n        \\"requestBody\\": {\n          \\"required\\": true,\n          \\"content\\": {\n            \\"application/json\\": {\n              \\"schema\\": {\n                \\"type\\": \\"object\\",\n                \\"required\\": [\n                  \\"addressCapturePdfs\\",\n                  \\"jobTemplate\\"\n                ],\n                \\"properties\\": {\n                  \\"addressCapturePdfs\\": {\n                    \\"type\\": \\"array\\",\n                    \\"items\\": {\n                      \\"type\\": \\"object\\",\n                      \\"required\\": [\n                        \\"documentSourceIdentifier\\",\n                        \\"addressListRegion\\"\n                      ],\n                      \\"properties\\": {\n                        \\"documentSourceIdentifier\\": {\n                          \\"$ref\\": \\"#/components/schemas/documentSourceIdentifier\\"\n                        },\n                        \\"addressListRegion\\": {\n                          \\"type\\": \\"object\\",\n                          \\"required\\": [\n                            \\"x\\",\n                            \\"y\\",\n                            \\"width\\",\n                            \\"height\\",\n                            \\"pageOffset\\"\n                          ],\n                          \\"properties\\": {\n                            \\"x\\": {\n                              \\"type\\": \\"number\\"\n                            },\n                            \\"y\\": {\n                              \\"type\\": \\"number\\"\n                            },\n                            \\"width\\": {\n                              \\"type\\": \\"number\\"\n                            },\n                            \\"height\\": {\n                              \\"type\\": \\"number\\"\n                            },\n                            \\"pageOffset\\": {\n                              \\"type\\": \\"integer\\"\n                            }\n                          }\n                        },\n                        \\"delimiter\\": {\n                          \\"type\\": \\"string\\"\n                        },\n                        \\"tags\\": {\n                          \\"type\\": \\"array\\",\n                          \\"items\\": {\n                            \\"type\\": \\"string\\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \\"jobTemplate\\": {\n                    \\"type\\": \\"string\\"\n                  },\n                  \\"paymentDetails\\": {\n                    \\"$ref\\": \\"#/components/schemas/paymentDetails\\"\n                  },\n                  \\"tags\\": {\n                    \\"type\\": \\"array\\",\n                    \\"items\\": {\n                      \\"type\\": \\"string\\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \\"responses\\": {\n          \\"200\\": {\n            \\"description\\": \\"OK\\"\n          },\n          \\"400\\": {\n            \\"description\\": \\"Invalid request\\"\n          },\n          \\"401\\": {\n            \\"description\\": \\"Unauthorized\\"\n          }\n        }\n      }\n    },\n    \\"/webhooks/jobStatusUpdate\\": {\n      \\"post\\": {\n        \\"summary\\": \\"Webhook endpoint to receive job status updates\\",\n        \\"operationId\\": \\"webhookJobStatusUpdate\\",\n        \\"requestBody\\": {\n          \\"required\\": true,\n          \\"content\\": {\n            \\"application/json\\": {\n              \\"schema\\": {\n                \\"type\\": \\"object\\",\n                \\"required\\": [\n                  \\"jobId\\",\n                  \\"status\\",\n                  \\"timestamp\\"\n                ],\n                \\"properties\\": {\n                  \\"jobId\\": {\n                    \\"type\\": \\"string\\",\n                    \\"example\\": \\"job_123456789\\"\n                  },\n                  \\"status\\": {\n                    \\"type\\": \\"string\\",\n                    \\"enum\\": [\n                      \\"queued\\",\n                      \\"processing\\",\n                      \\"completed\\",\n                      \\"failed\\"\n                    ],\n                    \\"example\\": \\"completed\\"\n                  },\n                  \\"timestamp\\": {\n                    \\"type\\": \\"string\\",\n                    \\"format\\": \\"date-time\\",\n                    \\"example\\": \\"2025-07-07T12:34:56Z\\"\n                  },\n                  \\"metadata\\": {\n                    \\"type\\": \\"object\\",\n                    \\"additionalProperties\\": {\n                      \\"type\\": \\"string\\"\n                    },\n                    \\"example\\": {\n                      \\"source\\": \\"PrintCenterA\\",\n                      \\"batch\\": \\"B20250707\\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \\"responses\\": {\n          \\"200\\": {\n            \\"description\\": \\"Webhook received successfully\\",\n            \\"content\\": {\n              \\"application/json\\": {\n                \\"schema\\": {\n                  \\"$ref\\": \\"#/components/schemas/StandardResponse\\"\n                }\n              }\n            }\n          },\n          \\"400\\": {\n            \\"description\\": \\"Invalid payload\\"\n          },\n          \\"401\\": {\n            \\"description\\": \\"Unauthorized\\"\n          }\n        }\n      }\n    }\n  }\n}\n\""
    }
  ]
}
