{
  "info": {
    "name": "C2mApiV2TestCollection",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "item": []
  },
  "item": [
    {
      "id": "2f5fe637-6e38-4d71-bf6d-f21adf3e7996",
      "name": "POST /auth/tokens/short",
      "request": {
        "name": "Issue a short-term access token",
        "description": {
          "content": "Exchange a valid long-term token for a short-lived JWT (e.g., 15 minutes).\nThe long-term token must be sent in the Authorization header as `Bearer <long_token>`.\n",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "auth",
            "tokens",
            "short"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": [],
          "raw": "{{baseUrl}}/auth/tokens/short"
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "body": {
          "mode": "raw",
          "raw": "{\n  \"scopes\": [\n    \"jobs:submit\",\n    \"jobs:read\",\n    \"templates:read\"\n  ]\n}",
          "options": {
            "raw": {
              "headerFamily": "json",
              "language": "json"
            }
          }
        },
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{bearerToken}}"
            }
          ]
        },
        "item": []
      },
      "response": [
        {
          "id": "d5b4e12e-062e-45c0-b0a6-b97b50150a38",
          "name": "Short-term token issued",
          "originalRequest": {
            "url": {
              "path": [
                "auth",
                "tokens",
                "short"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/auth/tokens/short"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"long_token\": \"baiulus\",\n  \"scopes\": [\n    \"creo\",\n    \"angelus\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"token_type\": \"Bearer\",\n  \"access_token\": \"talus\",\n  \"expires_in\": 788,\n  \"expires_at\": \"<dateTime>\",\n  \"scopes\": [\n    \"totam\",\n    \"cariosus\"\n  ],\n  \"token_id\": \"QKmjafk6Qo\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json",
          "item": []
        },
        {
          "id": "ef9771fd-25bc-4fff-8e40-7020f50b88da",
          "name": "Bad request",
          "originalRequest": {
            "url": {
              "path": [
                "auth",
                "tokens",
                "short"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/auth/tokens/short"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"long_token\": \"bellum\",\n  \"scopes\": [\n    \"coerceo\",\n    \"sed\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"code\": \"cursim\",\n  \"message\": 70,\n  \"details\": {}\n}",
          "cookie": [],
          "_postman_previewlanguage": "json",
          "item": []
        },
        {
          "id": "66f39328-1f41-4648-8481-37367c3c2bbd",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "auth",
                "tokens",
                "short"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/auth/tokens/short"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"long_token\": \"a\",\n  \"scopes\": [\n    \"coaegresco\",\n    \"curiositas\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"code\": \"complectus\",\n  \"message\": 21,\n  \"details\": {}\n}",
          "cookie": [],
          "_postman_previewlanguage": "json",
          "item": []
        },
        {
          "id": "c28e6ca1-918f-4049-9f36-ef39a79d8a27",
          "name": "Too Many Requests",
          "originalRequest": {
            "url": {
              "path": [
                "auth",
                "tokens",
                "short"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/auth/tokens/short"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"long_token\": \"summopere\",\n  \"scopes\": [\n    \"soluta\",\n    \"repudiandae\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"code\": \"soluta\",\n  \"message\": 56,\n  \"details\": {}\n}",
          "cookie": [],
          "_postman_previewlanguage": "json",
          "item": []
        }
      ],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
              "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
            ]
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      }
    },
    {
      "id": "9aa1ec68-0735-498a-bb48-5d6893c52c63",
      "name": "POST /auth/tokens/long",
      "request": {
        "name": "Issue or rotate a long-term token",
        "description": {
          "content": "Issues a long-term token (e.g., 30-90 days) for automation or server-to-server use.\nRequires step-up authentication. Choose one of the supported grant types:\n\n- `client_credentials` + `client_secret`\n- `client_credentials` + one-time `otp_code`\n- `assertion` (e.g., signed JWT by your private key)\n- Or an existing short-term token with the `tokens:write` scope\n\nOnly one mechanism is required per call.\n",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "auth",
            "tokens",
            "long"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": [],
          "raw": "{{baseUrl}}/auth/tokens/long"
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "body": {
          "mode": "raw",
          "raw": "{\n  \"grant_type\": \"client_credentials\",\n  \"client_id\": \"{{clientId}}\",\n  \"client_secret\": \"{{clientSecret}}\",\n  \"scopes\": [\n    \"jobs:submit\",\n    \"jobs:read\",\n    \"jobs:update\",\n    \"templates:read\",\n    \"account:read\"\n  ],\n  \"ttl_seconds\": 7776000\n}",
          "options": {
            "raw": {
              "headerFamily": "json",
              "language": "json"
            }
          }
        },
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{bearerToken}}"
            }
          ]
        },
        "item": []
      },
      "response": [
        {
          "id": "a5d5ad26-dc9c-4993-b616-3e78454392b0",
          "name": "Long-term token issued",
          "originalRequest": {
            "url": {
              "path": [
                "auth",
                "tokens",
                "long"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/auth/tokens/long"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"grant_type\": \"client_credentials\",\n  \"client_id\": \"EQOY9u8RH1\",\n  \"client_secret\": \"caterva\",\n  \"otp_code\": \"conculco\",\n  \"assertion_type\": \"cilicium\",\n  \"assertion\": \"depono\",\n  \"scopes\": [\n    \"creator\",\n    \"stipes\"\n  ],\n  \"ttl_seconds\": 955\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "disabled": false,
              "description": {
                "content": "Server-generated identifier for revocation and audit",
                "type": "text/plain"
              },
              "key": "X-Token-Id",
              "value": "<string>"
            }
          ],
          "body": "{\n  \"token_type\": \"Bearer\",\n  \"access_token\": \"defendo\",\n  \"expires_in\": 508,\n  \"expires_at\": \"<dateTime>\",\n  \"scopes\": [\n    \"adduco\",\n    \"auxilium\"\n  ],\n  \"token_id\": \"aNmFzOO6NB\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json",
          "item": []
        },
        {
          "id": "ec13af35-f94a-4ddb-b38f-c345ee93eec8",
          "name": "Bad request",
          "originalRequest": {
            "url": {
              "path": [
                "auth",
                "tokens",
                "long"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/auth/tokens/long"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"grant_type\": \"client_credentials\",\n  \"client_id\": \"R8Wpha0DDp\",\n  \"client_secret\": \"recusandae\",\n  \"otp_code\": \"voluptatem\",\n  \"assertion_type\": \"capillus\",\n  \"assertion\": \"eveniet\",\n  \"scopes\": [\n    \"pecus\",\n    \"cohibeo\"\n  ],\n  \"ttl_seconds\": 842\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"code\": \"cohibeo\",\n  \"message\": 66,\n  \"details\": {}\n}",
          "cookie": [],
          "_postman_previewlanguage": "json",
          "item": []
        },
        {
          "id": "1dbf8a5c-3826-4705-8e95-b3c5eb4b04d2",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "auth",
                "tokens",
                "long"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/auth/tokens/long"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"grant_type\": \"client_credentials\",\n  \"client_id\": \"osj3s1Dhp7\",\n  \"client_secret\": \"vaco\",\n  \"otp_code\": \"vel\",\n  \"assertion_type\": \"vulgus\",\n  \"assertion\": \"aliquid\",\n  \"scopes\": [\n    \"adfero\",\n    \"sponte\"\n  ],\n  \"ttl_seconds\": 357\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"code\": \"modi\",\n  \"message\": 32,\n  \"details\": {}\n}",
          "cookie": [],
          "_postman_previewlanguage": "json",
          "item": []
        },
        {
          "id": "546da392-d118-4e53-983a-55010fdae2f0",
          "name": "Forbidden",
          "originalRequest": {
            "url": {
              "path": [
                "auth",
                "tokens",
                "long"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/auth/tokens/long"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"grant_type\": \"client_credentials\",\n  \"client_id\": \"l0X4LRCKaU\",\n  \"client_secret\": \"vomica\",\n  \"otp_code\": \"cito\",\n  \"assertion_type\": \"crapula\",\n  \"assertion\": \"considero\",\n  \"scopes\": [\n    \"pax\",\n    \"animus\"\n  ],\n  \"ttl_seconds\": 116\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"code\": \"sophismata\",\n  \"message\": 64,\n  \"details\": {}\n}",
          "cookie": [],
          "_postman_previewlanguage": "json",
          "item": []
        },
        {
          "id": "99c778b0-8cd9-4e4e-b617-a24bbc3b1680",
          "name": "Too Many Requests",
          "originalRequest": {
            "url": {
              "path": [
                "auth",
                "tokens",
                "long"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/auth/tokens/long"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"grant_type\": \"client_credentials\",\n  \"client_id\": \"8Wrokduv0B\",\n  \"client_secret\": \"crastinus\",\n  \"otp_code\": \"subito\",\n  \"assertion_type\": \"claustrum\",\n  \"assertion\": \"eum\",\n  \"scopes\": [\n    \"compello\",\n    \"cibo\"\n  ],\n  \"ttl_seconds\": 619\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "Too Many Requests",
          "code": 429,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"code\": \"tabella\",\n  \"message\": 20,\n  \"details\": {}\n}",
          "cookie": [],
          "_postman_previewlanguage": "json",
          "item": []
        }
      ],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
              "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
            ]
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      }
    },
    {
      "id": "6e3930d4-213e-4fe7-b8b3-5dc507af95e1",
      "name": "POST /auth/tokens/:tokenId/revoke",
      "request": {
        "name": "Revoke a token",
        "description": {
          "content": "Revokes a short- or long-term token by its `tokenId`. Idempotent.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "auth",
            "tokens",
            ":tokenId",
            "revoke"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": [
            {
              "type": "any",
              "value": "<string>",
              "key": "tokenId",
              "disabled": false,
              "description": {
                "content": "(Required) The token ID to revoke",
                "type": "text/plain"
              }
            }
          ],
          "raw": "{{baseUrl}}/auth/tokens/:tokenId/revoke"
        },
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "body": {
          "mode": "raw",
          "raw": "{\n  \"reason\": \"Compromised key\",\n  \"revoke_all_related\": false\n}"
        },
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{bearerToken}}"
            }
          ]
        },
        "item": []
      },
      "response": [
        {
          "id": "73fdacd8-3b96-49cf-aef4-cc0e112d3fe9",
          "name": "Revoked (idempotent)",
          "originalRequest": {
            "url": {
              "path": [
                "auth",
                "tokens",
                ":tokenId",
                "revoke"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/auth/tokens/:tokenId/revoke"
            },
            "header": [
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {}
          },
          "status": "No Content",
          "code": 204,
          "header": [],
          "cookie": [],
          "_postman_previewlanguage": "text",
          "item": []
        },
        {
          "id": "7d42e41d-a8f1-41d6-87ec-e7b5bd81bc35",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "auth",
                "tokens",
                ":tokenId",
                "revoke"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/auth/tokens/:tokenId/revoke"
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {}
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"code\": \"constans\",\n  \"message\": 51,\n  \"details\": {}\n}",
          "cookie": [],
          "_postman_previewlanguage": "json",
          "item": []
        },
        {
          "id": "37d8ccb3-eaed-4741-b367-50f6d32fe31c",
          "name": "Not found",
          "originalRequest": {
            "url": {
              "path": [
                "auth",
                "tokens",
                ":tokenId",
                "revoke"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/auth/tokens/:tokenId/revoke"
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {}
          },
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"code\": \"decimus\",\n  \"message\": 25,\n  \"details\": {}\n}",
          "cookie": [],
          "_postman_previewlanguage": "json",
          "item": []
        }
      ],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
              "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
            ]
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      }
    },
    {
      "id": "ae70a851-43ab-44d7-82af-29d62dcb0bff",
      "name": "POST /jobs/single-doc-job-template",
      "request": {
        "name": "Operation for /jobs/single-doc-job-template",
        "description": {},
        "url": {
          "path": [
            "jobs",
            "single-doc-job-template"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": [],
          "raw": "{{baseUrl}}/jobs/single-doc-job-template"
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "body": {
          "mode": "raw",
          "raw": "{\n  \"jobTemplate\": \"sol\",\n  \"documentSourceIdentifier\": \"sfq55xzmYe\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"ceno\",\n      \"expirationDate\": {\n        \"month\": 694,\n        \"year\": 2014\n      },\n      \"cvv\": 54\n    }\n  },\n  \"tags\": [\n    \"callide\",\n    \"combibo\"\n  ]\n}",
          "options": {
            "raw": {
              "headerFamily": "json",
              "language": "json"
            }
          }
        },
        "auth": null,
        "item": []
      },
      "response": [
        {
          "id": "5a976a65-e5bb-4ac5-afcd-cc49a9d2c917",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                "single-doc-job-template"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/jobs/single-doc-job-template"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"jobTemplate\": \"balbus\",\n  \"documentSourceIdentifier\": \"2a2WSj76gA\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"circumvenio\",\n      \"expirationDate\": {\n        \"month\": 769,\n        \"year\": 2021\n      },\n      \"cvv\": 717\n    }\n  },\n  \"tags\": [\n    \"vado\",\n    \"quaerat\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"status\": \"caveo\",\n  \"message\": 32,\n  \"jobId\": \"VVwQfpbfo7\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json",
          "item": []
        },
        {
          "id": "f645e5d0-5d9f-45de-9334-445269abbb3c",
          "name": "Invalid request",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                "single-doc-job-template"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/jobs/single-doc-job-template"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"jobTemplate\": \"cervus\",\n  \"documentSourceIdentifier\": \"S8PWBfdbzf\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"infit\",\n      \"expirationDate\": {\n        \"month\": 894,\n        \"year\": 2009\n      },\n      \"cvv\": 915\n    }\n  },\n  \"tags\": [\n    \"clam\",\n    \"incidunt\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [],
          "cookie": [],
          "_postman_previewlanguage": "text",
          "item": []
        },
        {
          "id": "c2fb0b41-e031-4aca-a5b5-6d49b6e61b01",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                "single-doc-job-template"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/jobs/single-doc-job-template"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"jobTemplate\": \"copia\",\n  \"documentSourceIdentifier\": \"FasxOVqXyb\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"synagoga\",\n      \"expirationDate\": {\n        \"month\": 654,\n        \"year\": 2018\n      },\n      \"cvv\": 912\n    }\n  },\n  \"tags\": [\n    \"supra\",\n    \"sui\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [],
          "cookie": [],
          "_postman_previewlanguage": "text",
          "item": []
        }
      ],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
              "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
            ]
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      }
    },
    {
      "id": "7ffe1193-dffe-457a-9f2d-f53e145119b5",
      "name": "POST /jobs/multi-docs-job-template",
      "request": {
        "name": "Operation for /jobs/multi-docs-job-template",
        "description": {},
        "url": {
          "path": [
            "jobs",
            "multi-docs-job-template"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": [],
          "raw": "{{baseUrl}}/jobs/multi-docs-job-template"
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "body": {
          "mode": "raw",
          "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": \"rcf4MIhuJK\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Logan\",\n        \"lastName\": \"Mertz\",\n        \"address1\": \"8330 Jayden Alley\",\n        \"city\": \"East Melvin\",\n        \"state\": \"Texas\",\n        \"zip\": \"47205-2713\",\n        \"country\": \"United Arab Emirates\",\n        \"nickName\": \"Mrs. Lori Willms\",\n        \"address2\": \"247 Jones Field\",\n        \"address3\": \"5870 Dedrick Flat\",\n        \"phoneNumber\": \"540-267-2639 x666\"\n      }\n    },\n    {\n      \"documentSourceIdentifier\": \"KghKnbs6pC\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Hadley\",\n        \"lastName\": \"O'Kon\",\n        \"address1\": \"287 Kuhic Springs\",\n        \"city\": \"Port George\",\n        \"state\": \"Arizona\",\n        \"zip\": \"89592-5653\",\n        \"country\": \"Uruguay\",\n        \"nickName\": \"Mr. Laurence Rowe\",\n        \"address2\": \"71520 Izabella Unions\",\n        \"address3\": \"52852 Herzog Gardens\",\n        \"phoneNumber\": \"547-269-2080 x6128\"\n      }\n    }\n  ],\n  \"jobTemplate\": \"cunctatio\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"mastercard\",\n      \"cardNumber\": \"color\",\n      \"expirationDate\": {\n        \"month\": 226,\n        \"year\": 2004\n      },\n      \"cvv\": 561\n    }\n  },\n  \"tags\": [\n    \"auctus\",\n    \"curriculum\"\n  ]\n}",
          "options": {
            "raw": {
              "headerFamily": "json",
              "language": "json"
            }
          }
        },
        "auth": null,
        "item": []
      },
      "response": [
        {
          "id": "887933b2-07f3-4746-95b6-74eff912da1a",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                "multi-docs-job-template"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/jobs/multi-docs-job-template"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": \"dREJAVcrXV\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Cleta\",\n        \"lastName\": \"Bayer-Haag\",\n        \"address1\": \"3999 Rylan Divide\",\n        \"city\": \"Roselyntown\",\n        \"state\": \"Maine\",\n        \"zip\": \"24335\",\n        \"country\": \"North Macedonia\",\n        \"nickName\": \"Jo Fay\",\n        \"address2\": \"5866 O'Keefe Crossing\",\n        \"address3\": \"95933 Ryleigh Creek\",\n        \"phoneNumber\": \"1-507-867-2604 x38382\"\n      }\n    },\n    {\n      \"documentSourceIdentifier\": \"nKOj2EMP7l\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Hillard\",\n        \"lastName\": \"Harvey\",\n        \"address1\": \"613 Highfield Close\",\n        \"city\": \"Jacobsonberg\",\n        \"state\": \"North Carolina\",\n        \"zip\": \"67691\",\n        \"country\": \"El Salvador\",\n        \"nickName\": \"Annette Farrell\",\n        \"address2\": \"3871 Windsor Drive\",\n        \"address3\": \"534 Casimir Ferry\",\n        \"phoneNumber\": \"276.368.2123 x03597\"\n      }\n    }\n  ],\n  \"jobTemplate\": \"combibo\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"mastercard\",\n      \"cardNumber\": \"speculum\",\n      \"expirationDate\": {\n        \"month\": 368,\n        \"year\": 2014\n      },\n      \"cvv\": 982\n    }\n  },\n  \"tags\": [\n    \"deleniti\",\n    \"utroque\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"status\": \"tantillus\",\n  \"message\": 59,\n  \"jobId\": \"lqg3bRIwg0\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json",
          "item": []
        },
        {
          "id": "e4274278-1d14-4d2c-8fab-9d152b181dd8",
          "name": "Invalid request",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                "multi-docs-job-template"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/jobs/multi-docs-job-template"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": \"wB6jhSunpl\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Rosalee\",\n        \"lastName\": \"Nitzsche-Mayert\",\n        \"address1\": \"6205 Eldora Road\",\n        \"city\": \"Cristalboro\",\n        \"state\": \"Missouri\",\n        \"zip\": \"12197\",\n        \"country\": \"Nicaragua\",\n        \"nickName\": \"Lawrence Jacobs\",\n        \"address2\": \"1532 Edd Pass\",\n        \"address3\": \"9115 Alfreda Port\",\n        \"phoneNumber\": \"290.463.7868 x0197\"\n      }\n    },\n    {\n      \"documentSourceIdentifier\": \"vnqh674FKw\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Desiree\",\n        \"lastName\": \"Goodwin\",\n        \"address1\": \"340 Estefania Ville\",\n        \"city\": \"Hyattshire\",\n        \"state\": \"Minnesota\",\n        \"zip\": \"81750\",\n        \"country\": \"United Arab Emirates\",\n        \"nickName\": \"Guadalupe Mante\",\n        \"address2\": \"856 Malcolm Dale\",\n        \"address3\": \"24468 Hawthorn Close\",\n        \"phoneNumber\": \"719.271.3175 x92109\"\n      }\n    }\n  ],\n  \"jobTemplate\": \"claudeo\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"mastercard\",\n      \"cardNumber\": \"advoco\",\n      \"expirationDate\": {\n        \"month\": 131,\n        \"year\": 2009\n      },\n      \"cvv\": 787\n    }\n  },\n  \"tags\": [\n    \"maxime\",\n    \"patior\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [],
          "cookie": [],
          "_postman_previewlanguage": "text",
          "item": []
        },
        {
          "id": "6353fb9e-8c2c-4974-a2b6-98daea906753",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                "multi-docs-job-template"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/jobs/multi-docs-job-template"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": \"x084JrBBMo\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Dawson\",\n        \"lastName\": \"Adams\",\n        \"address1\": \"4574 Tyrique Via\",\n        \"city\": \"North Adriana\",\n        \"state\": \"New Jersey\",\n        \"zip\": \"64222-4405\",\n        \"country\": \"Syrian Arab Republic\",\n        \"nickName\": \"Jonathon Lowe\",\n        \"address2\": \"285 Juniper Close\",\n        \"address3\": \"8886 Laurie Loaf\",\n        \"phoneNumber\": \"(520) 746-4485 x892\"\n      }\n    },\n    {\n      \"documentSourceIdentifier\": \"l4M2zOnEJB\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Keshaun\",\n        \"lastName\": \"Langosh\",\n        \"address1\": \"91287 Buckridge Cape\",\n        \"city\": \"West Aleenboro\",\n        \"state\": \"New Jersey\",\n        \"zip\": \"01804-4783\",\n        \"country\": \"Pakistan\",\n        \"nickName\": \"Bryan Harber\",\n        \"address2\": \"73265 N Oak Street\",\n        \"address3\": \"918 Parker Cape\",\n        \"phoneNumber\": \"819.540.7270 x68122\"\n      }\n    }\n  ],\n  \"jobTemplate\": \"tollo\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"mastercard\",\n      \"cardNumber\": \"comprehendo\",\n      \"expirationDate\": {\n        \"month\": 593,\n        \"year\": 2008\n      },\n      \"cvv\": 51\n    }\n  },\n  \"tags\": [\n    \"ea\",\n    \"qui\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [],
          "cookie": [],
          "_postman_previewlanguage": "text",
          "item": []
        }
      ],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
              "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
            ]
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      }
    },
    {
      "id": "f2673d62-98c0-4d98-bf1a-8054e3157623",
      "name": "POST /jobs/multi-doc-merge-job-template",
      "request": {
        "name": "Operation for /jobs/multi-doc-merge-job-template",
        "description": {},
        "url": {
          "path": [
            "jobs",
            "multi-doc-merge-job-template"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": [],
          "raw": "{{baseUrl}}/jobs/multi-doc-merge-job-template"
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "body": {
          "mode": "raw",
          "raw": "{\n  \"documentsToMerge\": [\n    584,\n    15\n  ],\n  \"jobTemplate\": \"sufficio\",\n  \"recipientAddressSource\": {\n    \"firstName\": \"Rickie\",\n    \"lastName\": \"Mosciski\",\n    \"address1\": \"39400 Schimmel Trafficway\",\n    \"city\": \"Krajcikfield\",\n    \"state\": \"Nevada\",\n    \"zip\": \"29693\",\n    \"country\": \"Namibia\",\n    \"nickName\": \"Mr. Orville O'Hara\",\n    \"address2\": \"4249 Charlotte Valley\",\n    \"address3\": \"41850 E 6th Avenue\",\n    \"phoneNumber\": \"(838) 398-6769 x0064\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"mastercard\",\n      \"cardNumber\": \"pax\",\n      \"expirationDate\": {\n        \"month\": 987,\n        \"year\": 2010\n      },\n      \"cvv\": 275\n    }\n  },\n  \"tags\": [\n    \"magnam\",\n    \"dapifer\"\n  ]\n}",
          "options": {
            "raw": {
              "headerFamily": "json",
              "language": "json"
            }
          }
        },
        "auth": null,
        "item": []
      },
      "response": [
        {
          "id": "523625b6-0dd0-4cb7-a811-eb59f2558e14",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                "multi-doc-merge-job-template"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/jobs/multi-doc-merge-job-template"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"documentsToMerge\": [\n    649,\n    340\n  ],\n  \"jobTemplate\": \"calcar\",\n  \"recipientAddressSource\": {\n    \"firstName\": \"Kiley\",\n    \"lastName\": \"Yost\",\n    \"address1\": \"5972 Warren Close\",\n    \"city\": \"North Arnaldoland\",\n    \"state\": \"California\",\n    \"zip\": \"20286-7569\",\n    \"country\": \"Lesotho\",\n    \"nickName\": \"Kristine Tillman\",\n    \"address2\": \"175 E River Road\",\n    \"address3\": \"21689 7th Street\",\n    \"phoneNumber\": \"810-659-2461\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"mastercard\",\n      \"cardNumber\": \"caute\",\n      \"expirationDate\": {\n        \"month\": 722,\n        \"year\": 2011\n      },\n      \"cvv\": 800\n    }\n  },\n  \"tags\": [\n    \"patrocinor\",\n    \"turbo\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"status\": \"viduo\",\n  \"message\": 65,\n  \"jobId\": \"IAhkgb2hes\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json",
          "item": []
        },
        {
          "id": "2696f3c6-e344-4a73-bb1b-2af0f557d378",
          "name": "Invalid request",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                "multi-doc-merge-job-template"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/jobs/multi-doc-merge-job-template"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"documentsToMerge\": [\n    732,\n    653\n  ],\n  \"jobTemplate\": \"civis\",\n  \"recipientAddressSource\": {\n    \"firstName\": \"Aleen\",\n    \"lastName\": \"Schuster\",\n    \"address1\": \"128 Bartell Gateway\",\n    \"city\": \"Handfield\",\n    \"state\": \"Oklahoma\",\n    \"zip\": \"00403\",\n    \"country\": \"Turkmenistan\",\n    \"nickName\": \"Clint Oberbrunner\",\n    \"address2\": \"40081 Holly Close\",\n    \"address3\": \"1235 Jacobson Drives\",\n    \"phoneNumber\": \"598.621.1216 x971\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"mastercard\",\n      \"cardNumber\": \"aurum\",\n      \"expirationDate\": {\n        \"month\": 434,\n        \"year\": 2017\n      },\n      \"cvv\": 667\n    }\n  },\n  \"tags\": [\n    \"absconditus\",\n    \"tergiversatio\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [],
          "cookie": [],
          "_postman_previewlanguage": "text",
          "item": []
        },
        {
          "id": "976a8c1e-9237-4520-8f94-bbfa93b97ade",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                "multi-doc-merge-job-template"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/jobs/multi-doc-merge-job-template"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"documentsToMerge\": [\n    82,\n    765\n  ],\n  \"jobTemplate\": \"cultura\",\n  \"recipientAddressSource\": {\n    \"firstName\": \"Eldred\",\n    \"lastName\": \"Batz\",\n    \"address1\": \"4415 Ridge Road\",\n    \"city\": \"Myrtlefield\",\n    \"state\": \"Nebraska\",\n    \"zip\": \"70242-3634\",\n    \"country\": \"Nepal\",\n    \"nickName\": \"Becky Kling\",\n    \"address2\": \"39246 Cavendish Road\",\n    \"address3\": \"5436 Opal Underpass\",\n    \"phoneNumber\": \"(488) 510-6782 x626\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"mastercard\",\n      \"cardNumber\": \"angustus\",\n      \"expirationDate\": {\n        \"month\": 603,\n        \"year\": 2021\n      },\n      \"cvv\": 849\n    }\n  },\n  \"tags\": [\n    \"voro\",\n    \"urbs\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [],
          "cookie": [],
          "_postman_previewlanguage": "text",
          "item": []
        }
      ],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
              "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
            ]
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      }
    },
    {
      "id": "e858ccdf-d4ca-4fd4-afd6-bfa4066d4a1e",
      "name": "POST /jobs/single-doc",
      "request": {
        "name": "Operation for /jobs/single-doc",
        "description": {},
        "url": {
          "path": [
            "jobs",
            "single-doc"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": [],
          "raw": "{{baseUrl}}/jobs/single-doc"
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "body": {
          "mode": "raw",
          "raw": "{\n  \"documentSourceIdentifier\": \"SalX9BimMh\",\n  \"recipientAddressSources\": [\n    {\n      \"firstName\": \"Maxwell\",\n      \"lastName\": \"McKenzie\",\n      \"address1\": \"450 Duke Street\",\n      \"city\": \"North Donnyfield\",\n      \"state\": \"Arkansas\",\n      \"zip\": \"54386\",\n      \"country\": \"Haiti\",\n      \"nickName\": \"Priscilla Grant\",\n      \"address2\": \"993 West Road\",\n      \"address3\": \"8197 Larissa Extensions\",\n      \"phoneNumber\": \"1-618-375-7564 x7987\"\n    },\n    {\n      \"firstName\": \"Blaise\",\n      \"lastName\": \"Boyer\",\n      \"address1\": \"539 Pound Lane\",\n      \"city\": \"Fort Colton\",\n      \"state\": \"Michigan\",\n      \"zip\": \"69510\",\n      \"country\": \"Benin\",\n      \"nickName\": \"Rosie Schinner\",\n      \"address2\": \"83445 Roscoe Circle\",\n      \"address3\": \"255 Moore Gardens\",\n      \"phoneNumber\": \"1-382-556-6128\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"largeEnvelope\",\n    \"paperType\": \"postcard\",\n    \"printOption\": \"color\",\n    \"envelope\": \"letter\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"approbo\",\n      \"expirationDate\": {\n        \"month\": 668,\n        \"year\": 2007\n      },\n      \"cvv\": 357\n    }\n  },\n  \"tags\": [\n    \"arbustum\",\n    \"votum\"\n  ]\n}",
          "options": {
            "raw": {
              "headerFamily": "json",
              "language": "json"
            }
          }
        },
        "auth": null,
        "item": []
      },
      "response": [
        {
          "id": "8398b318-70e3-44fb-8589-2e21dbfb3877",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                "single-doc"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/jobs/single-doc"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"documentSourceIdentifier\": \"HskUD8urlW\",\n  \"recipientAddressSources\": [\n    {\n      \"firstName\": \"Quinten\",\n      \"lastName\": \"White\",\n      \"address1\": \"536 N Court Street\",\n      \"city\": \"North Princessstead\",\n      \"state\": \"Utah\",\n      \"zip\": \"47916-7981\",\n      \"country\": \"Argentina\",\n      \"nickName\": \"Mr. Ray Blanda\",\n      \"address2\": \"9615 Tiana Inlet\",\n      \"address3\": \"397 Prudence Falls\",\n      \"phoneNumber\": \"1-553-621-3183\"\n    },\n    {\n      \"firstName\": \"Moshe\",\n      \"lastName\": \"Marvin\",\n      \"address1\": \"8570 Darren Ridge\",\n      \"city\": \"Lake Raymondhaven\",\n      \"state\": \"West Virginia\",\n      \"zip\": \"78786\",\n      \"country\": \"French Guiana\",\n      \"nickName\": \"Nichole Swaniawski\",\n      \"address2\": \"6630 Corwin Neck\",\n      \"address3\": \"3075 Oaklands\",\n      \"phoneNumber\": \"(624) 763-2168 x47157\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"largeEnvelope\",\n    \"paperType\": \"postcard\",\n    \"printOption\": \"color\",\n    \"envelope\": \"letter\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"qui\",\n      \"expirationDate\": {\n        \"month\": 875,\n        \"year\": 2015\n      },\n      \"cvv\": 147\n    }\n  },\n  \"tags\": [\n    \"ubi\",\n    \"spectaculum\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"status\": \"spes\",\n  \"message\": 46,\n  \"jobId\": \"gDepbAaINU\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json",
          "item": []
        },
        {
          "id": "e7ccabbf-d870-4252-b3a2-4902083beb70",
          "name": "Invalid request",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                "single-doc"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/jobs/single-doc"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"documentSourceIdentifier\": \"CpD0VFkGN1\",\n  \"recipientAddressSources\": [\n    {\n      \"firstName\": \"Maximillian\",\n      \"lastName\": \"Berge\",\n      \"address1\": \"784 Laron Pine\",\n      \"city\": \"Medford\",\n      \"state\": \"Virginia\",\n      \"zip\": \"48545-6541\",\n      \"country\": \"Saint Kitts and Nevis\",\n      \"nickName\": \"Maxine Crist\",\n      \"address2\": \"8226 Von Branch\",\n      \"address3\": \"4823 Hyatt Union\",\n      \"phoneNumber\": \"1-761-586-9561 x7515\"\n    },\n    {\n      \"firstName\": \"Natalie\",\n      \"lastName\": \"Jast\",\n      \"address1\": \"28438 Augusta Streets\",\n      \"city\": \"Lysannefield\",\n      \"state\": \"Alabama\",\n      \"zip\": \"82688-5410\",\n      \"country\": \"Japan\",\n      \"nickName\": \"Mr. Matt Stroman Jr.\",\n      \"address2\": \"27801 W High Street\",\n      \"address3\": \"17572 Klein Spring\",\n      \"phoneNumber\": \"(582) 546-7180 x20610\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"largeEnvelope\",\n    \"paperType\": \"postcard\",\n    \"printOption\": \"color\",\n    \"envelope\": \"letter\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"arma\",\n      \"expirationDate\": {\n        \"month\": 148,\n        \"year\": 2013\n      },\n      \"cvv\": 155\n    }\n  },\n  \"tags\": [\n    \"uredo\",\n    \"tibi\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [],
          "cookie": [],
          "_postman_previewlanguage": "text",
          "item": []
        },
        {
          "id": "224a625b-3f7c-4227-8420-f4ed9398d6ba",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                "single-doc"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/jobs/single-doc"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"documentSourceIdentifier\": \"74zxRjPOWQ\",\n  \"recipientAddressSources\": [\n    {\n      \"firstName\": \"Parker\",\n      \"lastName\": \"Sawayn\",\n      \"address1\": \"80789 N 2nd Street\",\n      \"city\": \"Altenwerthfurt\",\n      \"state\": \"Montana\",\n      \"zip\": \"67906\",\n      \"country\": \"Malta\",\n      \"nickName\": \"Bridget Tromp\",\n      \"address2\": \"725 Horacio Forks\",\n      \"address3\": \"88625 Mireille Estate\",\n      \"phoneNumber\": \"1-536-236-7640 x82589\"\n    },\n    {\n      \"firstName\": \"Lance\",\n      \"lastName\": \"Stamm\",\n      \"address1\": \"673 Camren Light\",\n      \"city\": \"Lake Maurice\",\n      \"state\": \"Wyoming\",\n      \"zip\": \"10622-1557\",\n      \"country\": \"United States Minor Outlying Islands\",\n      \"nickName\": \"Wm Grant-Legros\",\n      \"address2\": \"5206 Mill Road\",\n      \"address3\": \"5757 Lowell Views\",\n      \"phoneNumber\": \"(301) 850-5662 x046\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"largeEnvelope\",\n    \"paperType\": \"postcard\",\n    \"printOption\": \"color\",\n    \"envelope\": \"letter\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"attero\",\n      \"expirationDate\": {\n        \"month\": 492,\n        \"year\": 2008\n      },\n      \"cvv\": 179\n    }\n  },\n  \"tags\": [\n    \"bibo\",\n    \"versus\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [],
          "cookie": [],
          "_postman_previewlanguage": "text",
          "item": []
        }
      ],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
              "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
            ]
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      }
    },
    {
      "id": "43cefb53-38a4-4129-a5ed-a300163186a2",
      "name": "POST /jobs/multi-doc",
      "request": {
        "name": "Operation for /jobs/multi-doc",
        "description": {},
        "url": {
          "path": [
            "jobs",
            "multi-doc"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": [],
          "raw": "{{baseUrl}}/jobs/multi-doc"
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "body": {
          "mode": "raw",
          "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": \"xcDZnf9rgI\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Merlin\",\n        \"lastName\": \"Rosenbaum\",\n        \"address1\": \"53386 Gleason Camp\",\n        \"city\": \"Boynton Beach\",\n        \"state\": \"Virginia\",\n        \"zip\": \"50398-4278\",\n        \"country\": \"Palestine\",\n        \"nickName\": \"Curtis Morissette V\",\n        \"address2\": \"233 Crescent Road\",\n        \"address3\": \"5752 Adelbert Spring\",\n        \"phoneNumber\": \"1-237-997-4352 x4033\"\n      }\n    },\n    {\n      \"documentSourceIdentifier\": \"Y1M8j45TEi\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Nellie\",\n        \"lastName\": \"Smitham\",\n        \"address1\": \"91793 Flatley Coves\",\n        \"city\": \"Lake Cleo\",\n        \"state\": \"Michigan\",\n        \"zip\": \"47275\",\n        \"country\": \"Heard Island and McDonald Islands\",\n        \"nickName\": \"Clinton Reichel\",\n        \"address2\": \"45305 Grady Highway\",\n        \"address3\": \"26819 Nya Manors\",\n        \"phoneNumber\": \"1-876-213-2090 x72509\"\n      }\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"personalLetter\",\n    \"layout\": \"landscape\",\n    \"mailclass\": \"firstClassMail\",\n    \"paperType\": \"postcard\",\n    \"printOption\": \"color\",\n    \"envelope\": \"flat\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"americanExpress\",\n      \"cardNumber\": \"tibi\",\n      \"expirationDate\": {\n        \"month\": 310,\n        \"year\": 2009\n      },\n      \"cvv\": 27\n    }\n  },\n  \"tags\": [\n    \"vere\",\n    \"bonus\"\n  ]\n}",
          "options": {
            "raw": {
              "headerFamily": "json",
              "language": "json"
            }
          }
        },
        "auth": null,
        "item": []
      },
      "response": [
        {
          "id": "c9ab97f9-0835-4b6a-9d88-88ca5c635395",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                "multi-doc"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/jobs/multi-doc"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": \"hUsk9jXcHS\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Deondre\",\n        \"lastName\": \"Romaguera\",\n        \"address1\": \"771 Eli Forges\",\n        \"city\": \"New Clare\",\n        \"state\": \"Colorado\",\n        \"zip\": \"87089-4372\",\n        \"country\": \"Western Sahara\",\n        \"nickName\": \"Desiree Price\",\n        \"address2\": \"682 Waverley Road\",\n        \"address3\": \"4845 Field Lane\",\n        \"phoneNumber\": \"1-413-362-5516 x39459\"\n      }\n    },\n    {\n      \"documentSourceIdentifier\": \"UchC8nxHPv\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Brent\",\n        \"lastName\": \"Boehm\",\n        \"address1\": \"98384 Norene Crossing\",\n        \"city\": \"Vonfort\",\n        \"state\": \"Alaska\",\n        \"zip\": \"19497-7246\",\n        \"country\": \"Namibia\",\n        \"nickName\": \"Virginia Berge\",\n        \"address2\": \"51575 Lafayette Street\",\n        \"address3\": \"1371 Wunsch Throughway\",\n        \"phoneNumber\": \"924-377-5613 x9333\"\n      }\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"personalLetter\",\n    \"layout\": \"landscape\",\n    \"mailclass\": \"firstClassMail\",\n    \"paperType\": \"postcard\",\n    \"printOption\": \"color\",\n    \"envelope\": \"flat\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"americanExpress\",\n      \"cardNumber\": \"curis\",\n      \"expirationDate\": {\n        \"month\": 326,\n        \"year\": 2001\n      },\n      \"cvv\": 315\n    }\n  },\n  \"tags\": [\n    \"textus\",\n    \"studio\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"status\": \"causa\",\n  \"message\": 80,\n  \"jobId\": \"CbjJFw7vCY\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json",
          "item": []
        },
        {
          "id": "de0d3ee3-1c50-49c0-8aab-63e2678181f2",
          "name": "Invalid request",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                "multi-doc"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/jobs/multi-doc"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": \"dBGt0LE3hz\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Oral\",\n        \"lastName\": \"Johnson\",\n        \"address1\": \"7063 11th Street\",\n        \"city\": \"East Marjoriefort\",\n        \"state\": \"Michigan\",\n        \"zip\": \"75043\",\n        \"country\": \"Chile\",\n        \"nickName\": \"Dr. Jeremy Kautzer\",\n        \"address2\": \"951 Dach Ville\",\n        \"address3\": \"26743 Walnut Street\",\n        \"phoneNumber\": \"(214) 816-1242\"\n      }\n    },\n    {\n      \"documentSourceIdentifier\": \"SuQ5ZNds3i\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Polly\",\n        \"lastName\": \"Yost\",\n        \"address1\": \"9669 Kunde Crescent\",\n        \"city\": \"North Miami Beach\",\n        \"state\": \"Pennsylvania\",\n        \"zip\": \"34964-1336\",\n        \"country\": \"Georgia\",\n        \"nickName\": \"Dr. Edgar Conroy Jr.\",\n        \"address2\": \"5217 Camila Trafficway\",\n        \"address3\": \"978 S 1st Street\",\n        \"phoneNumber\": \"(382) 409-5240 x9548\"\n      }\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"personalLetter\",\n    \"layout\": \"landscape\",\n    \"mailclass\": \"firstClassMail\",\n    \"paperType\": \"postcard\",\n    \"printOption\": \"color\",\n    \"envelope\": \"flat\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"americanExpress\",\n      \"cardNumber\": \"consectetur\",\n      \"expirationDate\": {\n        \"month\": 562,\n        \"year\": 2015\n      },\n      \"cvv\": 208\n    }\n  },\n  \"tags\": [\n    \"viduo\",\n    \"altus\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [],
          "cookie": [],
          "_postman_previewlanguage": "text",
          "item": []
        },
        {
          "id": "927c0714-c88f-47e4-a52d-b17a00c0401b",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                "multi-doc"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/jobs/multi-doc"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": \"Ta71T1jjh1\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Amina\",\n        \"lastName\": \"Stracke\",\n        \"address1\": \"83582 Sipes Light\",\n        \"city\": \"East Bettyeport\",\n        \"state\": \"Maine\",\n        \"zip\": \"37038-2082\",\n        \"country\": \"Puerto Rico\",\n        \"nickName\": \"Ginger Orn-Wuckert\",\n        \"address2\": \"157 East Street\",\n        \"address3\": \"71475 W 8th Street\",\n        \"phoneNumber\": \"737.403.2357 x530\"\n      }\n    },\n    {\n      \"documentSourceIdentifier\": \"e5uDXtB0g0\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Lesly\",\n        \"lastName\": \"Hickle\",\n        \"address1\": \"3269 Tyson Springs\",\n        \"city\": \"Nikofort\",\n        \"state\": \"Connecticut\",\n        \"zip\": \"85166-2535\",\n        \"country\": \"Albania\",\n        \"nickName\": \"Carroll Lesch\",\n        \"address2\": \"8225 Pearl Street\",\n        \"address3\": \"343 Julio Vista\",\n        \"phoneNumber\": \"291-420-9465\"\n      }\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"personalLetter\",\n    \"layout\": \"landscape\",\n    \"mailclass\": \"firstClassMail\",\n    \"paperType\": \"postcard\",\n    \"printOption\": \"color\",\n    \"envelope\": \"flat\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"americanExpress\",\n      \"cardNumber\": \"tardus\",\n      \"expirationDate\": {\n        \"month\": 598,\n        \"year\": 2001\n      },\n      \"cvv\": 83\n    }\n  },\n  \"tags\": [\n    \"viriliter\",\n    \"vaco\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [],
          "cookie": [],
          "_postman_previewlanguage": "text",
          "item": []
        }
      ],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
              "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
            ]
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      }
    },
    {
      "id": "43dfa3b4-0a6b-45fb-b3b0-c98cd3dca0da",
      "name": "POST /jobs/multi-doc-merge",
      "request": {
        "name": "Operation for /jobs/multi-doc-merge",
        "description": {},
        "url": {
          "path": [
            "jobs",
            "multi-doc-merge"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": [],
          "raw": "{{baseUrl}}/jobs/multi-doc-merge"
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "body": {
          "mode": "raw",
          "raw": "{\n  \"documentsToMerge\": [\n    755,\n    626\n  ],\n  \"recipientAddressSource\": {\n    \"firstName\": \"Luna\",\n    \"lastName\": \"Effertz\",\n    \"address1\": \"2649 Kihn Run\",\n    \"city\": \"Lemkehaven\",\n    \"state\": \"Michigan\",\n    \"zip\": \"08441-3201\",\n    \"country\": \"Burundi\",\n    \"nickName\": \"Ellis Heathcote\",\n    \"address2\": \"2330 Douglas Stravenue\",\n    \"address3\": \"3980 Witting Burgs\",\n    \"phoneNumber\": \"711.876.8187 x8324\"\n  },\n  \"tags\": [\n    \"abduco\",\n    \"adsum\"\n  ]\n}",
          "options": {
            "raw": {
              "headerFamily": "json",
              "language": "json"
            }
          }
        },
        "auth": null,
        "item": []
      },
      "response": [
        {
          "id": "2446e82a-4064-43f6-b017-5b2713ea2295",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                "multi-doc-merge"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/jobs/multi-doc-merge"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"documentsToMerge\": [\n    838,\n    479\n  ],\n  \"recipientAddressSource\": {\n    \"firstName\": \"Maude\",\n    \"lastName\": \"Bayer-Haag\",\n    \"address1\": \"533 Liliana Turnpike\",\n    \"city\": \"Fort Ines\",\n    \"state\": \"Texas\",\n    \"zip\": \"83068-9662\",\n    \"country\": \"Antigua and Barbuda\",\n    \"nickName\": \"Joshua Durgan\",\n    \"address2\": \"95007 Green Street\",\n    \"address3\": \"4730 Greenfelder Point\",\n    \"phoneNumber\": \"338-482-9174 x3779\"\n  },\n  \"tags\": [\n    \"deserunt\",\n    \"adfectus\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"status\": \"adamo\",\n  \"message\": 23,\n  \"jobId\": \"DiZWzXXi8o\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json",
          "item": []
        },
        {
          "id": "718c1552-9c4b-40b8-a42f-672960a2aeb5",
          "name": "Invalid request",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                "multi-doc-merge"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/jobs/multi-doc-merge"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"documentsToMerge\": [\n    570,\n    530\n  ],\n  \"recipientAddressSource\": {\n    \"firstName\": \"Patricia\",\n    \"lastName\": \"Stamm\",\n    \"address1\": \"95059 Kunze Throughway\",\n    \"city\": \"Odaton\",\n    \"state\": \"Maryland\",\n    \"zip\": \"87255-2808\",\n    \"country\": \"Liberia\",\n    \"nickName\": \"Mrs. Krystal Ortiz III\",\n    \"address2\": \"363 Spinka Ferry\",\n    \"address3\": \"1687 N Main Street\",\n    \"phoneNumber\": \"311.243.1750 x825\"\n  },\n  \"tags\": [\n    \"utrum\",\n    \"amaritudo\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [],
          "cookie": [],
          "_postman_previewlanguage": "text",
          "item": []
        },
        {
          "id": "30682968-ae36-4182-8c4a-1ae95d5b15f3",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                "multi-doc-merge"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/jobs/multi-doc-merge"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"documentsToMerge\": [\n    868,\n    523\n  ],\n  \"recipientAddressSource\": {\n    \"firstName\": \"Maymie\",\n    \"lastName\": \"Miller\",\n    \"address1\": \"3913 Lilly Ford\",\n    \"city\": \"Gennaroboro\",\n    \"state\": \"Maryland\",\n    \"zip\": \"67751-6058\",\n    \"country\": \"Grenada\",\n    \"nickName\": \"Mrs. Kay Keeling\",\n    \"address2\": \"8339 Weissnat Walks\",\n    \"address3\": \"4490 Clemens Divide\",\n    \"phoneNumber\": \"786-978-2076 x286\"\n  },\n  \"tags\": [\n    \"quia\",\n    \"volva\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [],
          "cookie": [],
          "_postman_previewlanguage": "text",
          "item": []
        }
      ],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
              "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
            ]
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      }
    },
    {
      "id": "e6e7ad7d-b758-46fc-a595-49dc3a2ac72e",
      "name": "POST /jobs/single-pdf-split",
      "request": {
        "name": "Operation for /jobs/single-pdf-split",
        "description": {},
        "url": {
          "path": [
            "jobs",
            "single-pdf-split"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": [],
          "raw": "{{baseUrl}}/jobs/single-pdf-split"
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "body": {
          "mode": "raw",
          "raw": "{\n  \"documentSourceIdentifier\": \"2DOarnz3B5\",\n  \"items\": [\n    {\n      \"pageRange\": {\n        \"startPage\": 57,\n        \"endPage\": 59\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"Rosemary\",\n          \"lastName\": \"Nolan\",\n          \"address1\": \"9336 W South Street\",\n          \"city\": \"East Auroreboro\",\n          \"state\": \"Arizona\",\n          \"zip\": \"76113\",\n          \"country\": \"El Salvador\",\n          \"nickName\": \"Jenny Turner\",\n          \"address2\": \"6214 Walnut Street\",\n          \"address3\": \"68885 Conn Overpass\",\n          \"phoneNumber\": \"(920) 578-0000\"\n        },\n        {\n          \"firstName\": \"Morton\",\n          \"lastName\": \"Strosin\",\n          \"address1\": \"619 Wiegand Path\",\n          \"city\": \"East Jarrod\",\n          \"state\": \"New Jersey\",\n          \"zip\": \"51835-7282\",\n          \"country\": \"Morocco\",\n          \"nickName\": \"Aaron Haag\",\n          \"address2\": \"58317 W Church Street\",\n          \"address3\": \"21389 Johnson Dale\",\n          \"phoneNumber\": \"662.986.3579 x148\"\n        }\n      ]\n    },\n    {\n      \"pageRange\": {\n        \"startPage\": 66,\n        \"endPage\": 76\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"Brant\",\n          \"lastName\": \"Mante\",\n          \"address1\": \"805 Windmill Close\",\n          \"city\": \"Olafville\",\n          \"state\": \"South Carolina\",\n          \"zip\": \"90457-8601\",\n          \"country\": \"Palestine\",\n          \"nickName\": \"Dr. Mathew Nitzsche\",\n          \"address2\": \"957 Ruecker Via\",\n          \"address3\": \"10330 Doyle Via\",\n          \"phoneNumber\": \"819.524.8864 x0856\"\n        },\n        {\n          \"firstName\": \"Dena\",\n          \"lastName\": \"Hilpert\",\n          \"address1\": \"268 Highfield Road\",\n          \"city\": \"Port Demetrismouth\",\n          \"state\": \"Alaska\",\n          \"zip\": \"11905-2438\",\n          \"country\": \"South Africa\",\n          \"nickName\": \"Rosa Schneider\",\n          \"address2\": \"163 South Street\",\n          \"address3\": \"788 Sammy Corner\",\n          \"phoneNumber\": \"1-491-458-0386 x282\"\n        }\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"usque\",\n      \"expirationDate\": {\n        \"month\": 435,\n        \"year\": 2022\n      },\n      \"cvv\": 743\n    }\n  },\n  \"tags\": [\n    \"sol\",\n    \"deduco\"\n  ]\n}",
          "options": {
            "raw": {
              "headerFamily": "json",
              "language": "json"
            }
          }
        },
        "auth": null,
        "item": []
      },
      "response": [
        {
          "id": "d890dd9d-e7f6-4c07-9ad4-b45af28623fc",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                "single-pdf-split"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/jobs/single-pdf-split"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"documentSourceIdentifier\": \"5uWWf7s1a3\",\n  \"items\": [\n    {\n      \"pageRange\": {\n        \"startPage\": 48,\n        \"endPage\": 23\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"Derick\",\n          \"lastName\": \"Vandervort\",\n          \"address1\": \"5000 Feest Route\",\n          \"city\": \"Townecester\",\n          \"state\": \"New Mexico\",\n          \"zip\": \"55040\",\n          \"country\": \"Pitcairn Islands\",\n          \"nickName\": \"Gwen Keeling\",\n          \"address2\": \"4601 Nicole Shoals\",\n          \"address3\": \"66891 Aufderhar Lake\",\n          \"phoneNumber\": \"532-597-1683 x087\"\n        },\n        {\n          \"firstName\": \"Anne\",\n          \"lastName\": \"Lockman\",\n          \"address1\": \"4096 Bruen Locks\",\n          \"city\": \"Huntsville\",\n          \"state\": \"Montana\",\n          \"zip\": \"77736\",\n          \"country\": \"Chad\",\n          \"nickName\": \"Chelsea Altenwerth\",\n          \"address2\": \"9926 Lafayette Street\",\n          \"address3\": \"1735 White Ranch\",\n          \"phoneNumber\": \"652-694-9128\"\n        }\n      ]\n    },\n    {\n      \"pageRange\": {\n        \"startPage\": 68,\n        \"endPage\": 35\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"Kariane\",\n          \"lastName\": \"Bednar\",\n          \"address1\": \"63388 Dale Street\",\n          \"city\": \"East Amelia\",\n          \"state\": \"South Carolina\",\n          \"zip\": \"93186-7937\",\n          \"country\": \"Kazakhstan\",\n          \"nickName\": \"Alice Kuphal\",\n          \"address2\": \"691 Christopher Haven\",\n          \"address3\": \"3279 Schroeder Ridges\",\n          \"phoneNumber\": \"(692) 725-8624\"\n        },\n        {\n          \"firstName\": \"Mallie\",\n          \"lastName\": \"Purdy\",\n          \"address1\": \"792 Kim Knolls\",\n          \"city\": \"Emardton\",\n          \"state\": \"Maine\",\n          \"zip\": \"85809-0559\",\n          \"country\": \"Iran\",\n          \"nickName\": \"Karl Grant IV\",\n          \"address2\": \"122 W 7th Street\",\n          \"address3\": \"375 London Mews\",\n          \"phoneNumber\": \"904.227.1353 x568\"\n        }\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"sub\",\n      \"expirationDate\": {\n        \"month\": 762,\n        \"year\": 2017\n      },\n      \"cvv\": 303\n    }\n  },\n  \"tags\": [\n    \"tempora\",\n    \"spero\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"status\": \"nostrum\",\n  \"message\": 33,\n  \"jobId\": \"mrNysN7Ffz\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json",
          "item": []
        },
        {
          "id": "55c45fc4-7337-40c1-ab56-0bc9ed7d4ab2",
          "name": "Invalid request",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                "single-pdf-split"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/jobs/single-pdf-split"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"documentSourceIdentifier\": \"K7T5oyVanH\",\n  \"items\": [\n    {\n      \"pageRange\": {\n        \"startPage\": 70,\n        \"endPage\": 24\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"Grover\",\n          \"lastName\": \"Baumbach\",\n          \"address1\": \"754 Trinity Road\",\n          \"city\": \"Lake Haylie\",\n          \"state\": \"Nebraska\",\n          \"zip\": \"93592-8982\",\n          \"country\": \"Gabon\",\n          \"nickName\": \"Angelica Schuppe\",\n          \"address2\": \"46436 Chase Park\",\n          \"address3\": \"151 Hagenes Mount\",\n          \"phoneNumber\": \"(728) 521-9912 x04548\"\n        },\n        {\n          \"firstName\": \"Murray\",\n          \"lastName\": \"Hartmann\",\n          \"address1\": \"313 June Avenue\",\n          \"city\": \"New Soledad\",\n          \"state\": \"Alaska\",\n          \"zip\": \"57228\",\n          \"country\": \"Jordan\",\n          \"nickName\": \"Sheldon Littel\",\n          \"address2\": \"330 Water Street\",\n          \"address3\": \"485 Melvin Via\",\n          \"phoneNumber\": \"1-430-850-1492\"\n        }\n      ]\n    },\n    {\n      \"pageRange\": {\n        \"startPage\": 20,\n        \"endPage\": 56\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"Suzanne\",\n          \"lastName\": \"Jakubowski\",\n          \"address1\": \"820 S Oak Street\",\n          \"city\": \"Rexberg\",\n          \"state\": \"Louisiana\",\n          \"zip\": \"98671\",\n          \"country\": \"San Marino\",\n          \"nickName\": \"Bryant Rippin\",\n          \"address2\": \"595 Victoria Place\",\n          \"address3\": \"27065 Emard Common\",\n          \"phoneNumber\": \"1-638-690-0540 x99483\"\n        },\n        {\n          \"firstName\": \"Niko\",\n          \"lastName\": \"Armstrong\",\n          \"address1\": \"3297 Jones Turnpike\",\n          \"city\": \"Parma\",\n          \"state\": \"Missouri\",\n          \"zip\": \"31462\",\n          \"country\": \"Cameroon\",\n          \"nickName\": \"Candace Labadie\",\n          \"address2\": \"68209 Eldon Spring\",\n          \"address3\": \"3963 Maggio Gateway\",\n          \"phoneNumber\": \"1-575-446-0059 x1401\"\n        }\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"acer\",\n      \"expirationDate\": {\n        \"month\": 20,\n        \"year\": 2023\n      },\n      \"cvv\": 951\n    }\n  },\n  \"tags\": [\n    \"nemo\",\n    \"aedificium\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [],
          "cookie": [],
          "_postman_previewlanguage": "text",
          "item": []
        },
        {
          "id": "2c2603b1-0b18-4aa2-9e34-07e2b1125f32",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                "single-pdf-split"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/jobs/single-pdf-split"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"documentSourceIdentifier\": \"3KgKA5wZSr\",\n  \"items\": [\n    {\n      \"pageRange\": {\n        \"startPage\": 53,\n        \"endPage\": 37\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"Antone\",\n          \"lastName\": \"Barrows\",\n          \"address1\": \"2537 Evan Haven\",\n          \"city\": \"Ankeny\",\n          \"state\": \"Rhode Island\",\n          \"zip\": \"04511-1369\",\n          \"country\": \"Tonga\",\n          \"nickName\": \"Arnold Rice\",\n          \"address2\": \"2142 N 7th Street\",\n          \"address3\": \"584 Mraz Fields\",\n          \"phoneNumber\": \"1-713-266-5046 x6102\"\n        },\n        {\n          \"firstName\": \"Tyra\",\n          \"lastName\": \"Langosh\",\n          \"address1\": \"247 Martin Luther King Drive\",\n          \"city\": \"Bowling Green\",\n          \"state\": \"Massachusetts\",\n          \"zip\": \"41385-7260\",\n          \"country\": \"Dominican Republic\",\n          \"nickName\": \"Jessie Anderson\",\n          \"address2\": \"371 Bramley Close\",\n          \"address3\": \"87161 Johnston Highway\",\n          \"phoneNumber\": \"239-956-2673 x883\"\n        }\n      ]\n    },\n    {\n      \"pageRange\": {\n        \"startPage\": 70,\n        \"endPage\": 75\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"Cleveland\",\n          \"lastName\": \"Bartell\",\n          \"address1\": \"20052 Eugenia Mount\",\n          \"city\": \"Macejkovicland\",\n          \"state\": \"Alaska\",\n          \"zip\": \"94985\",\n          \"country\": \"Sierra Leone\",\n          \"nickName\": \"Johnathan Gleason\",\n          \"address2\": \"4033 S 6th Street\",\n          \"address3\": \"1881 Juniper Close\",\n          \"phoneNumber\": \"(680) 479-3416 x23792\"\n        },\n        {\n          \"firstName\": \"Lamont\",\n          \"lastName\": \"Hegmann\",\n          \"address1\": \"335 York Road\",\n          \"city\": \"East Zitaburgh\",\n          \"state\": \"Illinois\",\n          \"zip\": \"01684\",\n          \"country\": \"United Arab Emirates\",\n          \"nickName\": \"Dr. Damon Labadie\",\n          \"address2\": \"6569 Hortense Parkway\",\n          \"address3\": \"6299 Baumbach Spring\",\n          \"phoneNumber\": \"1-643-616-3709\"\n        }\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"victoria\",\n      \"expirationDate\": {\n        \"month\": 408,\n        \"year\": 2012\n      },\n      \"cvv\": 168\n    }\n  },\n  \"tags\": [\n    \"crux\",\n    \"tot\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [],
          "cookie": [],
          "_postman_previewlanguage": "text",
          "item": []
        }
      ],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
              "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
            ]
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      }
    },
    {
      "id": "25bdf8dc-54cf-42fd-ae8e-6719ba2c129a",
      "name": "POST /jobs/single-pdf-split-addressCapture",
      "request": {
        "name": "Operation for /jobs/single-pdf-split-addressCapture",
        "description": {},
        "url": {
          "path": [
            "jobs",
            "single-pdf-split-addressCapture"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": [],
          "raw": "{{baseUrl}}/jobs/single-pdf-split-addressCapture"
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "body": {
          "mode": "raw",
          "raw": "{\n  \"documentSourceIdentifier\": \"iHgquuZ7ut\",\n  \"embeddedExtractionSpecs\": [\n    {\n      \"startPage\": 63,\n      \"endPage\": 23,\n      \"addressRegion\": {\n        \"x\": 770.74,\n        \"y\": 793.55,\n        \"width\": \"qmeP4TJoP3\",\n        \"height\": 66.56,\n        \"pageOffset\": 38\n      }\n    },\n    {\n      \"startPage\": 29,\n      \"endPage\": 71,\n      \"addressRegion\": {\n        \"x\": 116.31,\n        \"y\": 212.76,\n        \"width\": \"GgZjqhvxfV\",\n        \"height\": 358.64,\n        \"pageOffset\": 20\n      }\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"vehemens\",\n      \"expirationDate\": {\n        \"month\": 181,\n        \"year\": 2004\n      },\n      \"cvv\": 720\n    }\n  },\n  \"tags\": [\n    \"voluptates\",\n    \"curo\"\n  ]\n}",
          "options": {
            "raw": {
              "headerFamily": "json",
              "language": "json"
            }
          }
        },
        "auth": null,
        "item": []
      },
      "response": [
        {
          "id": "f6083402-39e6-41de-8bce-0e759aa3b761",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                "single-pdf-split-addressCapture"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/jobs/single-pdf-split-addressCapture"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"documentSourceIdentifier\": \"5HGvTeYxRw\",\n  \"embeddedExtractionSpecs\": [\n    {\n      \"startPage\": 51,\n      \"endPage\": 32,\n      \"addressRegion\": {\n        \"x\": 160.4,\n        \"y\": 118.67,\n        \"width\": \"k43V9Nj8Q3\",\n        \"height\": 746.18,\n        \"pageOffset\": 74\n      }\n    },\n    {\n      \"startPage\": 70,\n      \"endPage\": 28,\n      \"addressRegion\": {\n        \"x\": 590.89,\n        \"y\": 995.83,\n        \"width\": \"E03qN7VmWp\",\n        \"height\": 980.18,\n        \"pageOffset\": 78\n      }\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"adicio\",\n      \"expirationDate\": {\n        \"month\": 290,\n        \"year\": 2023\n      },\n      \"cvv\": 980\n    }\n  },\n  \"tags\": [\n    \"fugiat\",\n    \"admoneo\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"status\": \"denego\",\n  \"message\": 68,\n  \"jobId\": \"FUArc3IFou\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json",
          "item": []
        },
        {
          "id": "db7bebef-27af-47f4-9171-874c542ab4d4",
          "name": "Invalid request",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                "single-pdf-split-addressCapture"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/jobs/single-pdf-split-addressCapture"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"documentSourceIdentifier\": \"lG40Roxb9d\",\n  \"embeddedExtractionSpecs\": [\n    {\n      \"startPage\": 40,\n      \"endPage\": 52,\n      \"addressRegion\": {\n        \"x\": 675.58,\n        \"y\": 584.47,\n        \"width\": \"JFl4YXS8Ji\",\n        \"height\": 573.67,\n        \"pageOffset\": 62\n      }\n    },\n    {\n      \"startPage\": 48,\n      \"endPage\": 23,\n      \"addressRegion\": {\n        \"x\": 7.03,\n        \"y\": 567.87,\n        \"width\": \"HswnZws4HJ\",\n        \"height\": 906.87,\n        \"pageOffset\": 22\n      }\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"stips\",\n      \"expirationDate\": {\n        \"month\": 670,\n        \"year\": 2023\n      },\n      \"cvv\": 222\n    }\n  },\n  \"tags\": [\n    \"apud\",\n    \"via\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [],
          "cookie": [],
          "_postman_previewlanguage": "text",
          "item": []
        },
        {
          "id": "9325f34f-34ab-457d-b2a5-9c10f29c2836",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                "single-pdf-split-addressCapture"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/jobs/single-pdf-split-addressCapture"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"documentSourceIdentifier\": \"rwbDH41Ky7\",\n  \"embeddedExtractionSpecs\": [\n    {\n      \"startPage\": 48,\n      \"endPage\": 35,\n      \"addressRegion\": {\n        \"x\": 910.71,\n        \"y\": 271.42,\n        \"width\": \"mcLMvqPAV8\",\n        \"height\": 6.08,\n        \"pageOffset\": 80\n      }\n    },\n    {\n      \"startPage\": 55,\n      \"endPage\": 73,\n      \"addressRegion\": {\n        \"x\": 293.88,\n        \"y\": 777.29,\n        \"width\": \"8MowRUWQ3C\",\n        \"height\": 876.67,\n        \"pageOffset\": 33\n      }\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"culpa\",\n      \"expirationDate\": {\n        \"month\": 706,\n        \"year\": 2004\n      },\n      \"cvv\": 137\n    }\n  },\n  \"tags\": [\n    \"nostrum\",\n    \"atque\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [],
          "cookie": [],
          "_postman_previewlanguage": "text",
          "item": []
        }
      ],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
              "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
            ]
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      }
    },
    {
      "id": "37077a47-5522-43b9-9bde-747726c0c87c",
      "name": "POST /jobs/multi-pdf-address-capture",
      "request": {
        "name": "Operation for /jobs/multi-pdf-address-capture",
        "description": {},
        "url": {
          "path": [
            "jobs",
            "multi-pdf-address-capture"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": [],
          "raw": "{{baseUrl}}/jobs/multi-pdf-address-capture"
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "body": {
          "mode": "raw",
          "raw": "{\n  \"addressCapturePdfs\": [\n    {\n      \"documentSourceIdentifier\": \"QMr2QZufDC\",\n      \"addressListRegion\": \"56749 Adams Skyway\",\n      \"delimiter\": \"corrumpo\",\n      \"tags\": [\n        \"somniculosus\",\n        \"appono\"\n      ]\n    },\n    {\n      \"documentSourceIdentifier\": \"q6kJCmbnLB\",\n      \"addressListRegion\": \"98081 E High Street\",\n      \"delimiter\": \"textus\",\n      \"tags\": [\n        \"comitatus\",\n        \"animi\"\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"confugo\",\n      \"expirationDate\": {\n        \"month\": 448,\n        \"year\": 2011\n      },\n      \"cvv\": 472\n    }\n  },\n  \"tags\": [\n    \"ventosus\",\n    \"trans\"\n  ]\n}",
          "options": {
            "raw": {
              "headerFamily": "json",
              "language": "json"
            }
          }
        },
        "auth": null,
        "item": []
      },
      "response": [
        {
          "id": "7e304cb8-9560-4bb4-a783-17946a357e80",
          "name": "Success",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                "multi-pdf-address-capture"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/jobs/multi-pdf-address-capture"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"addressCapturePdfs\": [\n    {\n      \"documentSourceIdentifier\": \"9eRs7lUxj5\",\n      \"addressListRegion\": \"122 Spring Street\",\n      \"delimiter\": \"doloribus\",\n      \"tags\": [\n        \"sub\",\n        \"solvo\"\n      ]\n    },\n    {\n      \"documentSourceIdentifier\": \"6PGSDattRq\",\n      \"addressListRegion\": \"9118 Hagenes Fort\",\n      \"delimiter\": \"spargo\",\n      \"tags\": [\n        \"cogo\",\n        \"thymbra\"\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"modi\",\n      \"expirationDate\": {\n        \"month\": 642,\n        \"year\": 2004\n      },\n      \"cvv\": 722\n    }\n  },\n  \"tags\": [\n    \"culpa\",\n    \"uterque\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"status\": \"expedita\",\n  \"message\": 28,\n  \"jobId\": \"rRyCLSMVkK\"\n}",
          "cookie": [],
          "_postman_previewlanguage": "json",
          "item": []
        },
        {
          "id": "690234fe-52a1-42ec-8535-c6e04225a1ef",
          "name": "Invalid request",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                "multi-pdf-address-capture"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/jobs/multi-pdf-address-capture"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"addressCapturePdfs\": [\n    {\n      \"documentSourceIdentifier\": \"XwazNeYuuJ\",\n      \"addressListRegion\": \"409 Bins Brooks\",\n      \"delimiter\": \"paulatim\",\n      \"tags\": [\n        \"stips\",\n        \"arcesso\"\n      ]\n    },\n    {\n      \"documentSourceIdentifier\": \"5jp5Og0WpV\",\n      \"addressListRegion\": \"2770 Consuelo Lakes\",\n      \"delimiter\": \"coniuratio\",\n      \"tags\": [\n        \"ara\",\n        \"comedo\"\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"benevolentia\",\n      \"expirationDate\": {\n        \"month\": 367,\n        \"year\": 2004\n      },\n      \"cvv\": 219\n    }\n  },\n  \"tags\": [\n    \"cursim\",\n    \"vorago\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "Bad Request",
          "code": 400,
          "header": [],
          "cookie": [],
          "_postman_previewlanguage": "text",
          "item": []
        },
        {
          "id": "56540146-4df2-4753-b4ba-8710665fe020",
          "name": "Unauthorized",
          "originalRequest": {
            "url": {
              "path": [
                "jobs",
                "multi-pdf-address-capture"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [],
              "raw": "{{baseUrl}}/jobs/multi-pdf-address-capture"
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "Added as a part of security scheme: bearer",
                  "type": "text/plain"
                },
                "key": "Authorization",
                "value": "Bearer <token>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"addressCapturePdfs\": [\n    {\n      \"documentSourceIdentifier\": \"hIuTcJwtaB\",\n      \"addressListRegion\": \"9188 Rippin Lakes\",\n      \"delimiter\": \"culpa\",\n      \"tags\": [\n        \"allatus\",\n        \"careo\"\n      ]\n    },\n    {\n      \"documentSourceIdentifier\": \"3xftGMtAE7\",\n      \"addressListRegion\": \"41515 Lansdowne Road\",\n      \"delimiter\": \"ipsa\",\n      \"tags\": [\n        \"velociter\",\n        \"triumphus\"\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"vestigium\",\n      \"expirationDate\": {\n        \"month\": 181,\n        \"year\": 2009\n      },\n      \"cvv\": 8\n    }\n  },\n  \"tags\": [\n    \"sui\",\n    \"amicitia\"\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [],
          "cookie": [],
          "_postman_previewlanguage": "text",
          "item": []
        }
      ],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
              "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
            ]
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      }
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// JWT Authentication Provider for C2M API",
          "// Provider: JWT Two-Token System (Long-term + Short-term)",
          "// This script automatically manages token refresh for C2M API requests",
          "",
          "// Configuration - Set these in your Postman environment",
          "const config = {",
          "    baseUrl: pm.environment.get('baseUrl') || 'http://localhost:4010',",
          "    authUrl: pm.environment.get('authUrl') || pm.environment.get('baseUrl') || 'http://localhost:4010',",
          "    clientId: pm.environment.get('clientId'),",
          "    clientSecret: pm.environment.get('clientSecret'),",
          "    longTokenVar: 'longTermToken',",
          "    shortTokenVar: 'shortTermToken',",
          "    tokenExpiryVar: 'tokenExpiry',",
          "    tokenIdVar: 'currentTokenId'",
          "};",
          "",
          "// Helper function to check if token is expired",
          "function isTokenExpired(expiryTime) {",
          "    if (!expiryTime) return true;",
          "    const now = new Date().getTime();",
          "    const expiry = new Date(expiryTime).getTime();",
          "    const bufferTime = 60 * 1000; // 1 minute buffer",
          "    return (expiry - now) <= bufferTime;",
          "}",
          "",
          "// Helper function to get long-term token",
          "async function getLongTermToken() {",
          "    console.log('Obtaining new long-term token...');",
          "    ",
          "    const request = {",
          "        url: `${config.authUrl}/auth/tokens/long`,",
          "        method: 'POST',",
          "        header: {",
          "            'Content-Type': 'application/json',",
          "            'X-Client-Id': config.clientId",
          "        },",
          "        body: {",
          "            mode: 'raw',",
          "            raw: JSON.stringify({",
          "                grant_type: 'client_credentials',",
          "                client_id: config.clientId,",
          "                client_secret: config.clientSecret,",
          "                scopes: ['jobs:submit', 'templates:read', 'tokens:revoke'],",
          "                ttl_seconds: 2592000 // 30 days",
          "            })",
          "        }",
          "    };",
          "    ",
          "    return new Promise((resolve, reject) => {",
          "        pm.sendRequest(request, (err, response) => {",
          "            if (err) {",
          "                console.error('Failed to get long-term token:', err);",
          "                reject(err);",
          "                return;",
          "            }",
          "            ",
          "            if (response.code === 200 || response.code === 201) {",
          "                const data = response.json();",
          "                pm.environment.set(config.longTokenVar, data.access_token);",
          "                pm.environment.set('longTokenId', data.token_id);",
          "                pm.environment.set('longTokenExpiry', data.expires_at);",
          "                console.log(`Long-term token obtained: ${data.token_id}`);",
          "                resolve(data.access_token);",
          "            } else {",
          "                console.error('Failed to get long-term token:', response.text());",
          "                reject(new Error(`HTTP ${response.code}: ${response.text()}`));",
          "            }",
          "        });",
          "    });",
          "}",
          "",
          "// Helper function to get short-term token",
          "async function getShortTermToken(longTermToken) {",
          "    console.log('Exchanging for short-term token...');",
          "    ",
          "    const request = {",
          "        url: `${config.authUrl}/auth/tokens/short`,",
          "        method: 'POST',",
          "        header: {",
          "            'Authorization': `Bearer ${longTermToken}`,",
          "            'Content-Type': 'application/json'",
          "        },",
          "        body: {",
          "            mode: 'raw',",
          "            raw: JSON.stringify({",
          "                scopes: ['jobs:submit'] // Narrow scope for actual API calls",
          "            })",
          "        }",
          "    };",
          "    ",
          "    return new Promise((resolve, reject) => {",
          "        pm.sendRequest(request, (err, response) => {",
          "            if (err) {",
          "                console.error('Failed to get short-term token:', err);",
          "                reject(err);",
          "                return;",
          "            }",
          "            ",
          "            if (response.code === 200 || response.code === 201) {",
          "                const data = response.json();",
          "                pm.environment.set(config.shortTokenVar, data.access_token);",
          "                pm.environment.set(config.tokenExpiryVar, data.expires_at);",
          "                pm.environment.set(config.tokenIdVar, data.token_id);",
          "                console.log(`Short-term token obtained: ${data.token_id}, expires: ${data.expires_at}`);",
          "                resolve(data.access_token);",
          "            } else {",
          "                console.error('Failed to get short-term token:', response.text());",
          "                reject(new Error(`HTTP ${response.code}: ${response.text()}`));",
          "            }",
          "        });",
          "    });",
          "}",
          "",
          "// Main authentication flow",
          "async function authenticate() {",
          "    try {",
          "        // Skip auth for token endpoints",
          "        const currentPath = pm.request.url.getPath();",
          "        if (currentPath.includes('/auth/tokens/')) {",
          "            console.log('Skipping auth for token endpoint');",
          "            return;",
          "        }",
          "        ",
          "        // Check if we need client credentials",
          "        if (!config.clientId || !config.clientSecret) {",
          "            console.warn('Client credentials not configured. Set clientId and clientSecret in environment.');",
          "            return;",
          "        }",
          "        ",
          "        // Get current tokens from environment",
          "        let longTermToken = pm.environment.get(config.longTokenVar);",
          "        const shortTermToken = pm.environment.get(config.shortTokenVar);",
          "        const tokenExpiry = pm.environment.get(config.tokenExpiryVar);",
          "        ",
          "        // Check if we need to refresh tokens",
          "        if (!longTermToken) {",
          "            // No long-term token, get one",
          "            longTermToken = await getLongTermToken();",
          "        }",
          "        ",
          "        if (!shortTermToken || isTokenExpired(tokenExpiry)) {",
          "            // No short-term token or it's expired, get a new one",
          "            await getShortTermToken(longTermToken);",
          "        } else {",
          "            console.log('Using existing valid short-term token');",
          "        }",
          "        ",
          "        // Set the Authorization header with the short-term token",
          "        const currentShortToken = pm.environment.get(config.shortTokenVar);",
          "        pm.request.headers.add({",
          "            key: 'Authorization',",
          "            value: `Bearer ${currentShortToken}`",
          "        });",
          "        ",
          "        console.log('Authentication complete, Authorization header set');",
          "        ",
          "    } catch (error) {",
          "        console.error('Authentication failed:', error);",
          "        throw error;",
          "    }",
          "}",
          "",
          "// Execute authentication",
          "authenticate().catch(error => {",
          "    // Set an error variable that tests can check",
          "    pm.environment.set('authError', error.toString());",
          "    console.error('Pre-request script failed:', error);",
          "});",
          "",
          "// Utility functions for manual token management (can be called from Tests tab)",
          "pm.globals.set('revokeCurrentToken', async function() {",
          "    const tokenId = pm.environment.get(config.tokenIdVar);",
          "    const token = pm.environment.get(config.shortTokenVar);",
          "    ",
          "    if (!tokenId || !token) {",
          "        console.log('No token to revoke');",
          "        return;",
          "    }",
          "    ",
          "    const request = {",
          "        url: `${config.authUrl}/auth/tokens/${tokenId}/revoke`,",
          "        method: 'POST',",
          "        header: {",
          "            'Authorization': `Bearer ${token}`",
          "        }",
          "    };",
          "    ",
          "    pm.sendRequest(request, (err, response) => {",
          "        if (err) {",
          "            console.error('Failed to revoke token:', err);",
          "        } else if (response.code === 200 || response.code === 204) {",
          "            console.log(`Token ${tokenId} revoked successfully`);",
          "            pm.environment.unset(config.shortTokenVar);",
          "            pm.environment.unset(config.tokenExpiryVar);",
          "            pm.environment.unset(config.tokenIdVar);",
          "        } else {",
          "            console.error('Failed to revoke token:', response.text());",
          "        }",
          "    });",
          "});",
          "",
          "pm.globals.set('refreshTokens', async function() {",
          "    try {",
          "        const longTermToken = pm.environment.get(config.longTokenVar) || await getLongTermToken();",
          "        await getShortTermToken(longTermToken);",
          "        console.log('Tokens refreshed successfully');",
          "    } catch (error) {",
          "        console.error('Failed to refresh tokens:', error);",
          "    }",
          "});"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "token",
      "value": "eyJhbGciOiJub25lIn0.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlhdCI6MTczNjI5MjEyNH0.",
      "type": "string"
    },
    {
      "key": "baseUrl",
      "value": "{{baseUrl}}",
      "type": "string"
    }
  ]
}