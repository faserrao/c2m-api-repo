{
  "info": {
    "name": "C2mApiV2TestCollection",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "auth",
      "description": "",
      "item": [
        {
          "name": "tokens",
          "description": "",
          "item": [
            {
              "name": "short",
              "description": "",
              "item": [
                {
                  "id": "8c54dd3b-0196-47fa-9518-4856f98eb2ef",
                  "name": "Issue a short-term access token",
                  "request": {
                    "name": "Issue a short-term access token",
                    "description": {
                      "content": "Exchange a valid long-term token for a short-lived JWT (e.g., 15 minutes).\nThe long-term token must be sent in the Authorization header as `Bearer <long_token>`.\n",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "auth",
                        "tokens",
                        "short"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"long_token\": \"maxime\",\n  \"scopes\": [\n    \"tamquam\",\n    \"apud\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{bearerToken}}"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "id": "c2bab80b-5065-4ad6-be76-bffc2d110ced",
                      "name": "Short-term token issued",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "auth",
                            "tokens",
                            "short"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": {
                              "content": "Added as a part of security scheme: bearer",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"long_token\": \"conatus\",\n  \"scopes\": [\n    \"aiunt\",\n    \"demitto\"\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"token_type\": \"Bearer\",\n  \"access_token\": \"atrox\",\n  \"expires_in\": 356,\n  \"expires_at\": \"<dateTime>\",\n  \"scopes\": [\n    \"advoco\",\n    \"atavus\"\n  ],\n  \"token_id\": \"FIIARSTotf\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "821902c5-e487-4700-a587-f6db5d0a41d6",
                      "name": "Bad request",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "auth",
                            "tokens",
                            "short"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": {
                              "content": "Added as a part of security scheme: bearer",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"long_token\": \"culpa\",\n  \"scopes\": [\n    \"sustineo\",\n    \"alter\"\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"code\": \"colligo\",\n  \"message\": 69,\n  \"details\": {}\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "3ea13fcb-37f1-4d68-910f-a3d40d0bc43b",
                      "name": "Unauthorized",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "auth",
                            "tokens",
                            "short"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": {
                              "content": "Added as a part of security scheme: bearer",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"long_token\": \"tergo\",\n  \"scopes\": [\n    \"consequuntur\",\n    \"peior\"\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"code\": \"blandior\",\n  \"message\": 54,\n  \"details\": {}\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "6372a131-94d2-4d39-8f35-e6c4ea973904",
                      "name": "Too Many Requests",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "auth",
                            "tokens",
                            "short"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": {
                              "content": "Added as a part of security scheme: bearer",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"long_token\": \"stipes\",\n  \"scopes\": [\n    \"viridis\",\n    \"suppono\"\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Too Many Requests",
                      "code": 429,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"code\": \"succurro\",\n  \"message\": 76,\n  \"details\": {}\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                          "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                        ]
                      }
                    }
                  ],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                }
              ]
            },
            {
              "name": "long",
              "description": "",
              "item": [
                {
                  "id": "4bbaf88e-2a0a-4a62-be1a-fad38c6837a0",
                  "name": "Issue or rotate a long-term token",
                  "request": {
                    "name": "Issue or rotate a long-term token",
                    "description": {
                      "content": "Issues a long-term token (e.g., 30-90 days) for automation or server-to-server use.\nRequires step-up authentication. Choose one of the supported grant types:\n\n- `client_credentials` + `client_secret`\n- `client_credentials` + one-time `otp_code`\n- `assertion` (e.g., signed JWT by your private key)\n- Or an existing short-term token with the `tokens:write` scope\n\nOnly one mechanism is required per call.\n",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "auth",
                        "tokens",
                        "long"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"grant_type\": \"client_credentials\",\n  \"client_id\": \"1pc4efIkHX\",\n  \"client_secret\": \"aufero\",\n  \"otp_code\": \"vehemens\",\n  \"assertion_type\": \"curvo\",\n  \"assertion\": \"tersus\",\n  \"scopes\": [\n    \"asporto\",\n    \"corrigo\"\n  ],\n  \"ttl_seconds\": 954\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{bearerToken}}"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "id": "2c9fb746-02ba-4ab5-9a84-469880ae174d",
                      "name": "Long-term token issued",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "auth",
                            "tokens",
                            "long"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": {
                              "content": "Added as a part of security scheme: bearer",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"grant_type\": \"client_credentials\",\n  \"client_id\": \"INHdcPI1zV\",\n  \"client_secret\": \"vilis\",\n  \"otp_code\": \"crux\",\n  \"assertion_type\": \"colo\",\n  \"assertion\": \"viridis\",\n  \"scopes\": [\n    \"nemo\",\n    \"cibus\"\n  ],\n  \"ttl_seconds\": 916\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "Server-generated identifier for revocation and audit",
                            "type": "text/plain"
                          },
                          "key": "X-Token-Id",
                          "value": "<string>"
                        }
                      ],
                      "body": "{\n  \"token_type\": \"Bearer\",\n  \"access_token\": \"sodalitas\",\n  \"expires_in\": 43,\n  \"expires_at\": \"<dateTime>\",\n  \"scopes\": [\n    \"crustulum\",\n    \"aequus\"\n  ],\n  \"token_id\": \"yeeA3KPuPp\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "8bec102c-70f1-4003-82b8-5005aa89dc8c",
                      "name": "Bad request",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "auth",
                            "tokens",
                            "long"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": {
                              "content": "Added as a part of security scheme: bearer",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"grant_type\": \"client_credentials\",\n  \"client_id\": \"xMjfakkE6o\",\n  \"client_secret\": \"unus\",\n  \"otp_code\": \"cado\",\n  \"assertion_type\": \"cimentarius\",\n  \"assertion\": \"dolores\",\n  \"scopes\": [\n    \"toties\",\n    \"tui\"\n  ],\n  \"ttl_seconds\": 581\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"code\": \"facilis\",\n  \"message\": 19,\n  \"details\": {}\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "42d2d3f5-823e-4fab-ad01-0b16b249ce64",
                      "name": "Unauthorized",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "auth",
                            "tokens",
                            "long"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": {
                              "content": "Added as a part of security scheme: bearer",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"grant_type\": \"client_credentials\",\n  \"client_id\": \"e86nychG4R\",\n  \"client_secret\": \"virtus\",\n  \"otp_code\": \"veritatis\",\n  \"assertion_type\": \"vinco\",\n  \"assertion\": \"tondeo\",\n  \"scopes\": [\n    \"undique\",\n    \"tollo\"\n  ],\n  \"ttl_seconds\": 696\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"code\": \"defungo\",\n  \"message\": 67,\n  \"details\": {}\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "3ce2fe29-21bd-4f79-8cc1-a51005d31d8a",
                      "name": "Forbidden",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "auth",
                            "tokens",
                            "long"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": {
                              "content": "Added as a part of security scheme: bearer",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"grant_type\": \"client_credentials\",\n  \"client_id\": \"SRXb6uMyM1\",\n  \"client_secret\": \"dolorem\",\n  \"otp_code\": \"magni\",\n  \"assertion_type\": \"bardus\",\n  \"assertion\": \"arcesso\",\n  \"scopes\": [\n    \"videlicet\",\n    \"soluta\"\n  ],\n  \"ttl_seconds\": 584\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"code\": \"venia\",\n  \"message\": 51,\n  \"details\": {}\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "3d6bfe7f-389a-4d85-b477-400d826cf170",
                      "name": "Too Many Requests",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "auth",
                            "tokens",
                            "long"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": {
                              "content": "Added as a part of security scheme: bearer",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"grant_type\": \"client_credentials\",\n  \"client_id\": \"zEIXnxPLN8\",\n  \"client_secret\": \"video\",\n  \"otp_code\": \"virga\",\n  \"assertion_type\": \"tactus\",\n  \"assertion\": \"auditor\",\n  \"scopes\": [\n    \"amaritudo\",\n    \"consequatur\"\n  ],\n  \"ttl_seconds\": 175\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Too Many Requests",
                      "code": 429,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"code\": \"excepturi\",\n  \"message\": 45,\n  \"details\": {}\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                          "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                        ]
                      }
                    }
                  ],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                }
              ]
            },
            {
              "name": "{tokenId}",
              "description": "",
              "item": [
                {
                  "name": "revoke",
                  "description": "",
                  "item": [
                    {
                      "id": "d9ca69d8-66a4-455f-a245-e3bb93c21d96",
                      "name": "Revoke a token",
                      "request": {
                        "name": "Revoke a token",
                        "description": {
                          "content": "Revokes a short- or long-term token by its `tokenId`. Idempotent.",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "auth",
                            "tokens",
                            ":tokenId",
                            "revoke"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "value": "<string>",
                              "key": "tokenId",
                              "disabled": false,
                              "description": {
                                "content": "(Required) The token ID to revoke",
                                "type": "text/plain"
                              }
                            }
                          ]
                        },
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {},
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{bearerToken}}"
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "id": "5e8372f9-0619-42df-ae3a-ec484a9c0ae7",
                          "name": "Revoked (idempotent)",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "auth",
                                "tokens",
                                ":tokenId",
                                "revoke"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": []
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: bearer",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "method": "POST",
                            "body": {}
                          },
                          "status": "No Content",
                          "code": 204,
                          "header": [],
                          "cookie": [],
                          "_postman_previewlanguage": "text"
                        },
                        {
                          "id": "7075dc3c-94b1-4d2f-a841-f13de9fcfb93",
                          "name": "Unauthorized",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "auth",
                                "tokens",
                                ":tokenId",
                                "revoke"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": []
                            },
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: bearer",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "method": "POST",
                            "body": {}
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"code\": \"solutio\",\n  \"message\": 26,\n  \"details\": {}\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "edd965e6-f4e0-45dd-bcb3-27445585a88e",
                          "name": "Not found",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "auth",
                                "tokens",
                                ":tokenId",
                                "revoke"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": []
                            },
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: bearer",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "method": "POST",
                            "body": {}
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"code\": \"alioqui\",\n  \"message\": 37,\n  \"details\": {}\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                              "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                            ]
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "jobs",
      "description": "",
      "item": [
        {
          "name": "single-doc-job-template",
          "description": "",
          "item": [
            {
              "id": "825f8aa4-2abe-483f-ad2e-bf40b99baf25",
              "name": "Operation for /jobs/single-doc-job-template",
              "request": {
                "name": "Operation for /jobs/single-doc-job-template",
                "description": {},
                "url": {
                  "path": [
                    "jobs",
                    "single-doc-job-template"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"jobTemplate\": \"voco\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"ustulo\",\n      \"expirationDate\": {\n        \"month\": 163,\n        \"year\": 2022\n      },\n      \"cvv\": 825\n    }\n  },\n  \"tags\": [\n    \"civis\",\n    \"cupio\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "auth": null
              },
              "response": [
                {
                  "id": "eeb839b5-6c39-42cb-9217-a93794f2b39f",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-doc-job-template"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"jobTemplate\": \"acquiro\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"tardus\",\n      \"expirationDate\": {\n        \"month\": 290,\n        \"year\": 2001\n      },\n      \"cvv\": 113\n    }\n  },\n  \"tags\": [\n    \"cedo\",\n    \"delectatio\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"status\": \"ater\",\n  \"message\": 58,\n  \"jobId\": \"R369arwYkb\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "4db32c5a-f8e4-422d-973b-81de6e632ecf",
                  "name": "Invalid request",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-doc-job-template"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"jobTemplate\": \"coaegresco\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"cornu\",\n      \"expirationDate\": {\n        \"month\": 640,\n        \"year\": 2016\n      },\n      \"cvv\": 249\n    }\n  },\n  \"tags\": [\n    \"quis\",\n    \"cohaero\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                },
                {
                  "id": "204432ec-1aa9-46e3-b8a0-18fc083ceb05",
                  "name": "Unauthorized",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-doc-job-template"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"jobTemplate\": \"vetus\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"cilicium\",\n      \"expirationDate\": {\n        \"month\": 417,\n        \"year\": 2015\n      },\n      \"cvv\": 434\n    }\n  },\n  \"tags\": [\n    \"terga\",\n    \"toties\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                      "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                    ]
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ]
        },
        {
          "name": "multi-docs-job-template",
          "description": "",
          "item": [
            {
              "id": "cd17628f-8258-47d6-ad50-48fde69a2220",
              "name": "Operation for /jobs/multi-docs-job-template",
              "request": {
                "name": "Operation for /jobs/multi-docs-job-template",
                "description": {},
                "url": {
                  "path": [
                    "jobs",
                    "multi-docs-job-template"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": \"bo6g9QzVnD\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Alfreda\",\n        \"lastName\": \"McKenzie\",\n        \"address1\": \"52321 E Central Avenue\",\n        \"city\": \"North Asia\",\n        \"state\": \"New Mexico\",\n        \"zip\": \"28004\",\n        \"country\": \"Nicaragua\",\n        \"nickName\": \"Ms. Peggy D'Amore\",\n        \"address2\": \"10300 S East Street\",\n        \"address3\": \"50178 8th Street\",\n        \"phoneNumber\": \"1-945-984-9811\"\n      }\n    },\n    {\n      \"documentSourceIdentifier\": \"mvKRZpsZSv\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Domenic\",\n        \"lastName\": \"Pagac\",\n        \"address1\": \"902 Elliot Pass\",\n        \"city\": \"Carterton\",\n        \"state\": \"Texas\",\n        \"zip\": \"11203-1990\",\n        \"country\": \"Grenada\",\n        \"nickName\": \"Ed Wiza\",\n        \"address2\": \"847 Concepcion Cliff\",\n        \"address3\": \"27760 Haley Course\",\n        \"phoneNumber\": \"(424) 575-5870 x8493\"\n      }\n    }\n  ],\n  \"jobTemplate\": \"utroque\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"tantum\",\n      \"expirationDate\": {\n        \"month\": 165,\n        \"year\": 2010\n      },\n      \"cvv\": 942\n    }\n  },\n  \"tags\": [\n    \"civitas\",\n    \"blanditiis\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "auth": null
              },
              "response": [
                {
                  "id": "e3721df7-7cbb-4b48-afa5-b6aee92e03cf",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-docs-job-template"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": \"iv7EDKikbA\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Carmel\",\n        \"lastName\": \"Anderson\",\n        \"address1\": \"344 Eladio Drives\",\n        \"city\": \"Bernitafield\",\n        \"state\": \"Colorado\",\n        \"zip\": \"88209-1294\",\n        \"country\": \"Solomon Islands\",\n        \"nickName\": \"Blanca Hilll DDS\",\n        \"address2\": \"332 Cherry Street\",\n        \"address3\": \"709 Barton Road\",\n        \"phoneNumber\": \"(200) 825-0658\"\n      }\n    },\n    {\n      \"documentSourceIdentifier\": \"JtpyMiCEq1\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Otho\",\n        \"lastName\": \"Sauer\",\n        \"address1\": \"4778 Zakary Inlet\",\n        \"city\": \"Ceres\",\n        \"state\": \"Utah\",\n        \"zip\": \"08317-5383\",\n        \"country\": \"Cambodia\",\n        \"nickName\": \"Neal Weimann\",\n        \"address2\": \"4211 W 4th Avenue\",\n        \"address3\": \"3213 Berneice Ports\",\n        \"phoneNumber\": \"529-659-0640 x438\"\n      }\n    }\n  ],\n  \"jobTemplate\": \"strenuus\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"canonicus\",\n      \"expirationDate\": {\n        \"month\": 566,\n        \"year\": 2012\n      },\n      \"cvv\": 304\n    }\n  },\n  \"tags\": [\n    \"cupiditate\",\n    \"subito\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"status\": \"cervus\",\n  \"message\": 66,\n  \"jobId\": \"U24ocZnplc\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "78cf5685-cc7d-4ca9-870d-0cd407701378",
                  "name": "Invalid request",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-docs-job-template"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": \"htFmefLJJ6\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Leonardo\",\n        \"lastName\": \"Stanton-Kling\",\n        \"address1\": \"7680 Helmer Skyway\",\n        \"city\": \"Chicopee\",\n        \"state\": \"Nevada\",\n        \"zip\": \"11740-0665\",\n        \"country\": \"Micronesia\",\n        \"nickName\": \"Dave Muller DDS\",\n        \"address2\": \"7188 N Cedar Street\",\n        \"address3\": \"1418 Connelly Rapid\",\n        \"phoneNumber\": \"271-303-3345 x264\"\n      }\n    },\n    {\n      \"documentSourceIdentifier\": \"IObOmcaUZ3\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Demond\",\n        \"lastName\": \"Sanford\",\n        \"address1\": \"70111 Grove Road\",\n        \"city\": \"Hesperia\",\n        \"state\": \"Idaho\",\n        \"zip\": \"66439-0481\",\n        \"country\": \"Egypt\",\n        \"nickName\": \"Eric Reilly\",\n        \"address2\": \"768 Bins Alley\",\n        \"address3\": \"5055 Cherry Tree Close\",\n        \"phoneNumber\": \"716-656-4950 x9510\"\n      }\n    }\n  ],\n  \"jobTemplate\": \"suppono\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"catena\",\n      \"expirationDate\": {\n        \"month\": 332,\n        \"year\": 2008\n      },\n      \"cvv\": 60\n    }\n  },\n  \"tags\": [\n    \"aggero\",\n    \"texo\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                },
                {
                  "id": "deadc37b-fff0-405b-acd0-c0c1d8345c10",
                  "name": "Unauthorized",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-docs-job-template"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": \"EGsMkeQAPq\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Otho\",\n        \"lastName\": \"Schroeder\",\n        \"address1\": \"58721 Gonzalo Harbors\",\n        \"city\": \"Boise City\",\n        \"state\": \"Connecticut\",\n        \"zip\": \"22913-6876\",\n        \"country\": \"Samoa\",\n        \"nickName\": \"Jimmie Christiansen\",\n        \"address2\": \"6735 Stoltenberg Club\",\n        \"address3\": \"231 Sycamore Street\",\n        \"phoneNumber\": \"(979) 627-4295 x880\"\n      }\n    },\n    {\n      \"documentSourceIdentifier\": \"EVlfUSLrhI\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Wilfred\",\n        \"lastName\": \"Abshire\",\n        \"address1\": \"481 Angel Streets\",\n        \"city\": \"Kleinstead\",\n        \"state\": \"Utah\",\n        \"zip\": \"65801-0705\",\n        \"country\": \"India\",\n        \"nickName\": \"Gregg Pfeffer DDS\",\n        \"address2\": \"12339 Durgan Tunnel\",\n        \"address3\": \"709 Jakubowski Turnpike\",\n        \"phoneNumber\": \"1-812-550-2628 x78296\"\n      }\n    }\n  ],\n  \"jobTemplate\": \"natus\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"conspergo\",\n      \"expirationDate\": {\n        \"month\": 81,\n        \"year\": 2005\n      },\n      \"cvv\": 791\n    }\n  },\n  \"tags\": [\n    \"bellicus\",\n    \"eum\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                      "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                    ]
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ]
        },
        {
          "name": "multi-doc-merge-job-template",
          "description": "",
          "item": [
            {
              "id": "4f1eb078-f4ae-4b30-8208-dab43f45a00d",
              "name": "Operation for /jobs/multi-doc-merge-job-template",
              "request": {
                "name": "Operation for /jobs/multi-doc-merge-job-template",
                "description": {},
                "url": {
                  "path": [
                    "jobs",
                    "multi-doc-merge-job-template"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentsToMerge\": [\n    376,\n    329\n  ],\n  \"recipientAddressSource\": {\n    \"firstName\": \"Michel\",\n    \"lastName\": \"Rau\",\n    \"address1\": \"568 Lurline Vista\",\n    \"city\": \"South Pearlie\",\n    \"state\": \"Florida\",\n    \"zip\": \"49802-2175\",\n    \"country\": \"Russian Federation\",\n    \"nickName\": \"Juanita Stiedemann\",\n    \"address2\": \"58535 Valley Road\",\n    \"address3\": \"85869 S 4th Street\",\n    \"phoneNumber\": \"304-959-7043 x55115\"\n  },\n  \"jobTemplate\": \"decumbo\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"sperno\",\n      \"expirationDate\": {\n        \"month\": 961,\n        \"year\": 2000\n      },\n      \"cvv\": 392\n    }\n  },\n  \"tags\": [\n    \"conqueror\",\n    \"maiores\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "auth": null
              },
              "response": [
                {
                  "id": "f8340a4e-429a-44ce-92e6-06e270f369e7",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-doc-merge-job-template"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentsToMerge\": [\n    500,\n    905\n  ],\n  \"recipientAddressSource\": {\n    \"firstName\": \"Elouise\",\n    \"lastName\": \"Wehner\",\n    \"address1\": \"89249 Caden Rapid\",\n    \"city\": \"Mrazstead\",\n    \"state\": \"Texas\",\n    \"zip\": \"58518\",\n    \"country\": \"Croatia\",\n    \"nickName\": \"Dr. Edmond Brakus\",\n    \"address2\": \"3484 Fairfield Road\",\n    \"address3\": \"28191 Hintz Fork\",\n    \"phoneNumber\": \"(528) 844-5323 x001\"\n  },\n  \"jobTemplate\": \"audacia\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"quidem\",\n      \"expirationDate\": {\n        \"month\": 33,\n        \"year\": 2023\n      },\n      \"cvv\": 262\n    }\n  },\n  \"tags\": [\n    \"sit\",\n    \"uredo\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"status\": \"tamdiu\",\n  \"message\": 80,\n  \"jobId\": \"ZMs8ySbPNt\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "cf1f6f97-9551-49cb-a5d5-ea6d37c32740",
                  "name": "Invalid request",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-doc-merge-job-template"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentsToMerge\": [\n    947,\n    868\n  ],\n  \"recipientAddressSource\": {\n    \"firstName\": \"Felton\",\n    \"lastName\": \"Haag\",\n    \"address1\": \"464 S Monroe Street\",\n    \"city\": \"Frisco\",\n    \"state\": \"Kansas\",\n    \"zip\": \"36128\",\n    \"country\": \"Burundi\",\n    \"nickName\": \"Ben Ritchie\",\n    \"address2\": \"762 Ernser Fort\",\n    \"address3\": \"7663 Prospect Road\",\n    \"phoneNumber\": \"(737) 912-7651 x0192\"\n  },\n  \"jobTemplate\": \"vetus\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"sumo\",\n      \"expirationDate\": {\n        \"month\": 793,\n        \"year\": 2013\n      },\n      \"cvv\": 443\n    }\n  },\n  \"tags\": [\n    \"adopto\",\n    \"tero\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                },
                {
                  "id": "771b92fc-62f9-494a-b531-0eb3a77a327b",
                  "name": "Unauthorized",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-doc-merge-job-template"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentsToMerge\": [\n    622,\n    807\n  ],\n  \"recipientAddressSource\": {\n    \"firstName\": \"Ignatius\",\n    \"lastName\": \"Schimmel\",\n    \"address1\": \"21450 Gutmann Lakes\",\n    \"city\": \"Lake Jedtown\",\n    \"state\": \"Virginia\",\n    \"zip\": \"02431-5010\",\n    \"country\": \"Mexico\",\n    \"nickName\": \"Dave Gibson\",\n    \"address2\": \"5041 S 9th Street\",\n    \"address3\": \"69634 Pouros Springs\",\n    \"phoneNumber\": \"870-770-3788\"\n  },\n  \"jobTemplate\": \"celebrer\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"titulus\",\n      \"expirationDate\": {\n        \"month\": 412,\n        \"year\": 2015\n      },\n      \"cvv\": 85\n    }\n  },\n  \"tags\": [\n    \"administratio\",\n    \"apto\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                      "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                    ]
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ]
        },
        {
          "name": "single-doc",
          "description": "",
          "item": [
            {
              "id": "8426e4d8-aa4a-4909-b274-577bdde7a7e1",
              "name": "Operation for /jobs/single-doc",
              "request": {
                "name": "Operation for /jobs/single-doc",
                "description": {},
                "url": {
                  "path": [
                    "jobs",
                    "single-doc"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": \"SVyymkStEX\",\n  \"recipientAddressSources\": [\n    {\n      \"firstName\": \"Ernie\",\n      \"lastName\": \"Larson\",\n      \"address1\": \"66817 Schulist Alley\",\n      \"city\": \"Durgancester\",\n      \"state\": \"Vermont\",\n      \"zip\": \"71899-9548\",\n      \"country\": \"Poland\",\n      \"nickName\": \"Woodrow Ruecker\",\n      \"address2\": \"21315 Buckingham Road\",\n      \"address3\": \"807 MacGyver Ports\",\n      \"phoneNumber\": \"(741) 547-3117 x51765\"\n    },\n    {\n      \"firstName\": \"Leta\",\n      \"lastName\": \"Schaefer\",\n      \"address1\": \"99182 Alfredo Forks\",\n      \"city\": \"West Maureen\",\n      \"state\": \"Wyoming\",\n      \"zip\": \"35610-8464\",\n      \"country\": \"El Salvador\",\n      \"nickName\": \"Pamela Rosenbaum II\",\n      \"address2\": \"8352 Adelbert Rue\",\n      \"address3\": \"579 Grange Avenue\",\n      \"phoneNumber\": \"497.718.0137\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"personalLetter\",\n    \"layout\": \"landscape\",\n    \"mailclass\": \"priorityMail\",\n    \"paperType\": \"legal\",\n    \"printOption\": \"grayscale\",\n    \"envelope\": \"flat\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"americanExpress\",\n      \"cardNumber\": \"cavus\",\n      \"expirationDate\": {\n        \"month\": 106,\n        \"year\": 2008\n      },\n      \"cvv\": 89\n    }\n  },\n  \"tags\": [\n    \"vel\",\n    \"thorax\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "auth": null
              },
              "response": [
                {
                  "id": "29bdf0bf-dece-4a21-802b-ac27ebe798a7",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-doc"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentSourceIdentifier\": \"uqZev2U0ch\",\n  \"recipientAddressSources\": [\n    {\n      \"firstName\": \"Rey\",\n      \"lastName\": \"Powlowski\",\n      \"address1\": \"149 Langworth Parkways\",\n      \"city\": \"Beierville\",\n      \"state\": \"Wyoming\",\n      \"zip\": \"58196\",\n      \"country\": \"Belgium\",\n      \"nickName\": \"Valerie Franecki\",\n      \"address2\": \"3117 Crona Island\",\n      \"address3\": \"4755 Hermiston Neck\",\n      \"phoneNumber\": \"(528) 360-0063\"\n    },\n    {\n      \"firstName\": \"Jamar\",\n      \"lastName\": \"Torphy\",\n      \"address1\": \"697 O'Hara Brook\",\n      \"city\": \"North Orie\",\n      \"state\": \"Montana\",\n      \"zip\": \"00714\",\n      \"country\": \"Costa Rica\",\n      \"nickName\": \"Cindy Braun\",\n      \"address2\": \"1514 N 6th Street\",\n      \"address3\": \"62083 Kiera Burgs\",\n      \"phoneNumber\": \"(920) 218-2838 x9333\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"personalLetter\",\n    \"layout\": \"landscape\",\n    \"mailclass\": \"priorityMail\",\n    \"paperType\": \"legal\",\n    \"printOption\": \"grayscale\",\n    \"envelope\": \"flat\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"americanExpress\",\n      \"cardNumber\": \"cura\",\n      \"expirationDate\": {\n        \"month\": 995,\n        \"year\": 2021\n      },\n      \"cvv\": 866\n    }\n  },\n  \"tags\": [\n    \"curo\",\n    \"cattus\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"status\": \"talus\",\n  \"message\": 18,\n  \"jobId\": \"lxR7XflxqF\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "e29b8959-b775-424c-ab85-2008c6fd8ad0",
                  "name": "Invalid request",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-doc"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentSourceIdentifier\": \"NZekNrFfyh\",\n  \"recipientAddressSources\": [\n    {\n      \"firstName\": \"Ima\",\n      \"lastName\": \"Marks\",\n      \"address1\": \"9799 Loren Plain\",\n      \"city\": \"Keller\",\n      \"state\": \"Vermont\",\n      \"zip\": \"68855\",\n      \"country\": \"Jordan\",\n      \"nickName\": \"Lynne Turner\",\n      \"address2\": \"791 Walker Path\",\n      \"address3\": \"1745 Reichert Run\",\n      \"phoneNumber\": \"460.440.7909 x07980\"\n    },\n    {\n      \"firstName\": \"Toy\",\n      \"lastName\": \"Jerde\",\n      \"address1\": \"840 The Grange\",\n      \"city\": \"Deltona\",\n      \"state\": \"South Dakota\",\n      \"zip\": \"81278\",\n      \"country\": \"San Marino\",\n      \"nickName\": \"Rosemary Romaguera\",\n      \"address2\": \"47276 Jimmie Greens\",\n      \"address3\": \"696 Padberg Keys\",\n      \"phoneNumber\": \"(757) 994-3480 x944\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"personalLetter\",\n    \"layout\": \"landscape\",\n    \"mailclass\": \"priorityMail\",\n    \"paperType\": \"legal\",\n    \"printOption\": \"grayscale\",\n    \"envelope\": \"flat\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"americanExpress\",\n      \"cardNumber\": \"aptus\",\n      \"expirationDate\": {\n        \"month\": 666,\n        \"year\": 2024\n      },\n      \"cvv\": 127\n    }\n  },\n  \"tags\": [\n    \"pariatur\",\n    \"amet\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                },
                {
                  "id": "af37d2ee-3af6-48c8-a878-bc89c9d3f40d",
                  "name": "Unauthorized",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-doc"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentSourceIdentifier\": \"sSkzIUW4qg\",\n  \"recipientAddressSources\": [\n    {\n      \"firstName\": \"Cristian\",\n      \"lastName\": \"Reichel\",\n      \"address1\": \"2386 Grange Avenue\",\n      \"city\": \"Franeckihaven\",\n      \"state\": \"Connecticut\",\n      \"zip\": \"24297\",\n      \"country\": \"Zimbabwe\",\n      \"nickName\": \"Natalie Tillman\",\n      \"address2\": \"5464 Earline Forks\",\n      \"address3\": \"1467 Waterside\",\n      \"phoneNumber\": \"(633) 236-3867 x4885\"\n    },\n    {\n      \"firstName\": \"Miller\",\n      \"lastName\": \"Gulgowski\",\n      \"address1\": \"278 Madisen Path\",\n      \"city\": \"Leuschketown\",\n      \"state\": \"New York\",\n      \"zip\": \"94921-6034\",\n      \"country\": \"United Kingdom\",\n      \"nickName\": \"Laurence Bartell\",\n      \"address2\": \"699 Elenora Rue\",\n      \"address3\": \"27243 Georgette Manors\",\n      \"phoneNumber\": \"286.754.1036\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"personalLetter\",\n    \"layout\": \"landscape\",\n    \"mailclass\": \"priorityMail\",\n    \"paperType\": \"legal\",\n    \"printOption\": \"grayscale\",\n    \"envelope\": \"flat\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"americanExpress\",\n      \"cardNumber\": \"vulgo\",\n      \"expirationDate\": {\n        \"month\": 282,\n        \"year\": 2008\n      },\n      \"cvv\": 429\n    }\n  },\n  \"tags\": [\n    \"dens\",\n    \"ager\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                      "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                    ]
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ]
        },
        {
          "name": "multi-doc",
          "description": "",
          "item": [
            {
              "id": "5509785c-711c-49d7-934c-dc472b9913c5",
              "name": "Operation for /jobs/multi-doc",
              "request": {
                "name": "Operation for /jobs/multi-doc",
                "description": {},
                "url": {
                  "path": [
                    "jobs",
                    "multi-doc"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": \"f3AjnMxmNr\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Anya\",\n        \"lastName\": \"Beier\",\n        \"address1\": \"310 Fisher Rue\",\n        \"city\": \"South Donnatown\",\n        \"state\": \"Pennsylvania\",\n        \"zip\": \"79907\",\n        \"country\": \"Bosnia and Herzegovina\",\n        \"nickName\": \"Christine Glover\",\n        \"address2\": \"9388 E 10th Street\",\n        \"address3\": \"1312 Honeysuckle Close\",\n        \"phoneNumber\": \"(963) 744-4632 x4244\"\n      }\n    },\n    {\n      \"documentSourceIdentifier\": \"YsIzLBCBiC\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Orie\",\n        \"lastName\": \"Cassin\",\n        \"address1\": \"4576 Roel Crossing\",\n        \"city\": \"Ryanstad\",\n        \"state\": \"Wyoming\",\n        \"zip\": \"59938-2993\",\n        \"country\": \"India\",\n        \"nickName\": \"Earnest Emard\",\n        \"address2\": \"5390 Georgiana Dam\",\n        \"address3\": \"7098 N Locust Street\",\n        \"phoneNumber\": \"798.957.6457 x3189\"\n      }\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"firstClassMail\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"color\",\n    \"envelope\": \"windowedFlat\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"maxime\",\n      \"expirationDate\": {\n        \"month\": 958,\n        \"year\": 2007\n      },\n      \"cvv\": 532\n    }\n  },\n  \"tags\": [\n    \"totus\",\n    \"totus\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "auth": null
              },
              "response": [
                {
                  "id": "804c5415-d6f3-4246-8af7-9e18e7366cc9",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-doc"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": \"ODhkYwRDDY\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Sylvester\",\n        \"lastName\": \"Zemlak\",\n        \"address1\": \"35917 Schuster Ports\",\n        \"city\": \"Lakeville\",\n        \"state\": \"Hawaii\",\n        \"zip\": \"77960-1536\",\n        \"country\": \"Yemen\",\n        \"nickName\": \"Hugo Smitham\",\n        \"address2\": \"73888 Wolf Lock\",\n        \"address3\": \"892 Vicky Dale\",\n        \"phoneNumber\": \"(420) 744-0571 x99667\"\n      }\n    },\n    {\n      \"documentSourceIdentifier\": \"wuV8ODvury\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Nolan\",\n        \"lastName\": \"Kulas\",\n        \"address1\": \"33292 Jayne Gardens\",\n        \"city\": \"South Christ\",\n        \"state\": \"Wyoming\",\n        \"zip\": \"11859-1028\",\n        \"country\": \"Cyprus\",\n        \"nickName\": \"Cristina Harris\",\n        \"address2\": \"99326 Oak Street\",\n        \"address3\": \"45083 Chelsie Burg\",\n        \"phoneNumber\": \"1-385-234-4712\"\n      }\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"firstClassMail\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"color\",\n    \"envelope\": \"windowedFlat\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"explicabo\",\n      \"expirationDate\": {\n        \"month\": 508,\n        \"year\": 2000\n      },\n      \"cvv\": 588\n    }\n  },\n  \"tags\": [\n    \"territo\",\n    \"barba\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"status\": \"aperio\",\n  \"message\": 33,\n  \"jobId\": \"GwT4RRLgNV\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "d6276052-6949-46bf-8298-8ac19315d96f",
                  "name": "Invalid request",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-doc"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": \"0nVwgHDQHT\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Camden\",\n        \"lastName\": \"Hansen\",\n        \"address1\": \"1416 South Road\",\n        \"city\": \"Little Rock\",\n        \"state\": \"Florida\",\n        \"zip\": \"17558-4239\",\n        \"country\": \"Guam\",\n        \"nickName\": \"Kirk McCullough\",\n        \"address2\": \"54575 Goldner Expressway\",\n        \"address3\": \"578 Clement Skyway\",\n        \"phoneNumber\": \"793-495-0579 x267\"\n      }\n    },\n    {\n      \"documentSourceIdentifier\": \"SZY98sOEsp\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Mervin\",\n        \"lastName\": \"Osinski\",\n        \"address1\": \"743 E Center Street\",\n        \"city\": \"South Philip\",\n        \"state\": \"New Jersey\",\n        \"zip\": \"18448\",\n        \"country\": \"Jamaica\",\n        \"nickName\": \"Grant Towne\",\n        \"address2\": \"71390 Vicarage Road\",\n        \"address3\": \"54168 Poplar Road\",\n        \"phoneNumber\": \"353.580.5717 x523\"\n      }\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"firstClassMail\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"color\",\n    \"envelope\": \"windowedFlat\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"celo\",\n      \"expirationDate\": {\n        \"month\": 810,\n        \"year\": 2024\n      },\n      \"cvv\": 169\n    }\n  },\n  \"tags\": [\n    \"tricesimus\",\n    \"acervus\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                },
                {
                  "id": "59a9f9f3-8104-45c7-98fb-4a46763e1986",
                  "name": "Unauthorized",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-doc"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": \"4NsC043Kdw\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Madelynn\",\n        \"lastName\": \"Bradtke\",\n        \"address1\": \"935 Elyssa Causeway\",\n        \"city\": \"Baldwin Park\",\n        \"state\": \"Washington\",\n        \"zip\": \"21663\",\n        \"country\": \"El Salvador\",\n        \"nickName\": \"Mr. Pete Dietrich\",\n        \"address2\": \"7312 Ward Streets\",\n        \"address3\": \"94338 Prospect Street\",\n        \"phoneNumber\": \"299-610-2671 x286\"\n      }\n    },\n    {\n      \"documentSourceIdentifier\": \"NVKQGqAXFz\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Jaunita\",\n        \"lastName\": \"Douglas\",\n        \"address1\": \"9529 Ruth Cape\",\n        \"city\": \"Leonelshire\",\n        \"state\": \"Virginia\",\n        \"zip\": \"90595\",\n        \"country\": \"Belgium\",\n        \"nickName\": \"Brandon Farrell\",\n        \"address2\": \"214 Osinski Spring\",\n        \"address3\": \"82621 Monahan Crest\",\n        \"phoneNumber\": \"689.591.4297 x10914\"\n      }\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"firstClassMail\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"color\",\n    \"envelope\": \"windowedFlat\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"demulceo\",\n      \"expirationDate\": {\n        \"month\": 808,\n        \"year\": 2017\n      },\n      \"cvv\": 325\n    }\n  },\n  \"tags\": [\n    \"aranea\",\n    \"causa\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                      "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                    ]
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ]
        },
        {
          "name": "multi-doc-merge",
          "description": "",
          "item": [
            {
              "id": "22f74952-d904-4b10-997f-ac2173b9e844",
              "name": "Operation for /jobs/multi-doc-merge",
              "request": {
                "name": "Operation for /jobs/multi-doc-merge",
                "description": {},
                "url": {
                  "path": [
                    "jobs",
                    "multi-doc-merge"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentsToMerge\": [\n    344,\n    810\n  ],\n  \"recipientAddressSource\": {\n    \"firstName\": \"Emiliano\",\n    \"lastName\": \"Hettinger\",\n    \"address1\": \"669 Schamberger Corners\",\n    \"city\": \"Marietta\",\n    \"state\": \"Montana\",\n    \"zip\": \"15801\",\n    \"country\": \"Madagascar\",\n    \"nickName\": \"Lester Nicolas\",\n    \"address2\": \"7803 Alfred Street\",\n    \"address3\": \"45101 Estella Highway\",\n    \"phoneNumber\": \"941-541-1684\"\n  },\n  \"tags\": [\n    \"tenetur\",\n    \"corporis\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "auth": null
              },
              "response": [
                {
                  "id": "df191b92-4952-411c-aa01-61439e425b9c",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-doc-merge"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentsToMerge\": [\n    666,\n    497\n  ],\n  \"recipientAddressSource\": {\n    \"firstName\": \"Archibald\",\n    \"lastName\": \"Koepp\",\n    \"address1\": \"37611 Dexter Parkways\",\n    \"city\": \"South Sadyeworth\",\n    \"state\": \"Connecticut\",\n    \"zip\": \"76554-7427\",\n    \"country\": \"Togo\",\n    \"nickName\": \"Terrance Weber\",\n    \"address2\": \"718 Kaden Groves\",\n    \"address3\": \"34801 Novella Orchard\",\n    \"phoneNumber\": \"566.715.5537 x4388\"\n  },\n  \"tags\": [\n    \"assumenda\",\n    \"aurum\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"status\": \"suasoria\",\n  \"message\": 51,\n  \"jobId\": \"bBooxaJBMe\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "48cf9132-9afe-487b-ba34-7e37398a5693",
                  "name": "Invalid request",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-doc-merge"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentsToMerge\": [\n    402,\n    372\n  ],\n  \"recipientAddressSource\": {\n    \"firstName\": \"Karson\",\n    \"lastName\": \"Reilly\",\n    \"address1\": \"6282 W South Street\",\n    \"city\": \"Hanetown\",\n    \"state\": \"Michigan\",\n    \"zip\": \"18895\",\n    \"country\": \"Tanzania\",\n    \"nickName\": \"Mrs. Karen Quigley\",\n    \"address2\": \"839 Bernhard Neck\",\n    \"address3\": \"2724 Kelton Mountains\",\n    \"phoneNumber\": \"520-222-7679\"\n  },\n  \"tags\": [\n    \"bibo\",\n    \"odit\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                },
                {
                  "id": "c7400fa2-8a93-4622-a065-b8d0d199ffd7",
                  "name": "Unauthorized",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-doc-merge"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentsToMerge\": [\n    176,\n    528\n  ],\n  \"recipientAddressSource\": {\n    \"firstName\": \"Alysa\",\n    \"lastName\": \"Davis\",\n    \"address1\": \"88833 Casey Estate\",\n    \"city\": \"Lake Jasperstead\",\n    \"state\": \"North Carolina\",\n    \"zip\": \"35370\",\n    \"country\": \"Palau\",\n    \"nickName\": \"Don Herman\",\n    \"address2\": \"31329 Dena Union\",\n    \"address3\": \"323 Michael Curve\",\n    \"phoneNumber\": \"(411) 945-2645\"\n  },\n  \"tags\": [\n    \"trepide\",\n    \"vulgo\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                      "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                    ]
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ]
        },
        {
          "name": "single-pdf-split",
          "description": "",
          "item": [
            {
              "id": "f8579818-bd64-4c8b-aaf6-c1abba213161",
              "name": "Operation for /jobs/single-pdf-split",
              "request": {
                "name": "Operation for /jobs/single-pdf-split",
                "description": {},
                "url": {
                  "path": [
                    "jobs",
                    "single-pdf-split"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": \"E6jbpbuV1G\",\n  \"items\": [\n    {\n      \"pageRange\": {\n        \"startPage\": 60,\n        \"endPage\": 57\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"Morgan\",\n          \"lastName\": \"Lesch\",\n          \"address1\": \"66887 Vicarage Close\",\n          \"city\": \"Port Jamesonbury\",\n          \"state\": \"Maryland\",\n          \"zip\": \"15400\",\n          \"country\": \"Eritrea\",\n          \"nickName\": \"Jorge Franecki\",\n          \"address2\": \"6022 N Jackson Street\",\n          \"address3\": \"6240 Kilback Ports\",\n          \"phoneNumber\": \"1-320-838-0259 x6944\"\n        },\n        {\n          \"firstName\": \"Gonzalo\",\n          \"lastName\": \"Nitzsche\",\n          \"address1\": \"350 Lindgren Rest\",\n          \"city\": \"Lake Marielamouth\",\n          \"state\": \"West Virginia\",\n          \"zip\": \"18687-4364\",\n          \"country\": \"Costa Rica\",\n          \"nickName\": \"Christina Mitchell\",\n          \"address2\": \"39075 Church Street\",\n          \"address3\": \"2333 D'Amore Track\",\n          \"phoneNumber\": \"(656) 941-1352 x6768\"\n        }\n      ]\n    },\n    {\n      \"pageRange\": {\n        \"startPage\": 71,\n        \"endPage\": 69\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"Sherman\",\n          \"lastName\": \"Dooley\",\n          \"address1\": \"6668 Queenie Ville\",\n          \"city\": \"Port Hulda\",\n          \"state\": \"Wyoming\",\n          \"zip\": \"13295-2014\",\n          \"country\": \"Antarctica\",\n          \"nickName\": \"Paulette Kreiger II\",\n          \"address2\": \"68369 Paolo Island\",\n          \"address3\": \"55260 Kuhlman Springs\",\n          \"phoneNumber\": \"(660) 854-5430 x457\"\n        },\n        {\n          \"firstName\": \"Katharina\",\n          \"lastName\": \"Wilkinson\",\n          \"address1\": \"2980 Weimann Street\",\n          \"city\": \"Robbiemouth\",\n          \"state\": \"Alaska\",\n          \"zip\": \"72801-3998\",\n          \"country\": \"Georgia\",\n          \"nickName\": \"Glenn Boyer\",\n          \"address2\": \"9641 Stefan Mountains\",\n          \"address3\": \"58044 Kuvalis Isle\",\n          \"phoneNumber\": \"949.606.9059 x67299\"\n        }\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"substantia\",\n      \"expirationDate\": {\n        \"month\": 24,\n        \"year\": 2024\n      },\n      \"cvv\": 210\n    }\n  },\n  \"tags\": [\n    \"audentia\",\n    \"conscendo\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "auth": null
              },
              "response": [
                {
                  "id": "0499a659-4165-4ddc-bf9d-458c78b48dcd",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-pdf-split"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentSourceIdentifier\": \"HUTbDyapvb\",\n  \"items\": [\n    {\n      \"pageRange\": {\n        \"startPage\": 25,\n        \"endPage\": 48\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"Elmira\",\n          \"lastName\": \"O'Keefe\",\n          \"address1\": \"1979 Schiller Spur\",\n          \"city\": \"Lake Destineechester\",\n          \"state\": \"Pennsylvania\",\n          \"zip\": \"95552\",\n          \"country\": \"Aruba\",\n          \"nickName\": \"Marianne Greenholt\",\n          \"address2\": \"9489 Sporer Underpass\",\n          \"address3\": \"5382 Zoie Throughway\",\n          \"phoneNumber\": \"(644) 353-5474 x357\"\n        },\n        {\n          \"firstName\": \"Jaquelin\",\n          \"lastName\": \"Purdy\",\n          \"address1\": \"28949 Runolfsdottir Freeway\",\n          \"city\": \"North Jada\",\n          \"state\": \"Idaho\",\n          \"zip\": \"82423\",\n          \"country\": \"Japan\",\n          \"nickName\": \"Angel Stroman\",\n          \"address2\": \"33149 Glebe Close\",\n          \"address3\": \"65103 Hoeger Hollow\",\n          \"phoneNumber\": \"(496) 818-2646 x217\"\n        }\n      ]\n    },\n    {\n      \"pageRange\": {\n        \"startPage\": 46,\n        \"endPage\": 30\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"Giovani\",\n          \"lastName\": \"Schoen\",\n          \"address1\": \"8744 S Mill Street\",\n          \"city\": \"Cieloworth\",\n          \"state\": \"South Dakota\",\n          \"zip\": \"13994\",\n          \"country\": \"Timor-Leste\",\n          \"nickName\": \"James Monahan\",\n          \"address2\": \"59126 N 6th Street\",\n          \"address3\": \"41073 Turcotte Trace\",\n          \"phoneNumber\": \"(811) 205-8447 x24032\"\n        },\n        {\n          \"firstName\": \"Rachelle\",\n          \"lastName\": \"Maggio\",\n          \"address1\": \"2632 Grant Street\",\n          \"city\": \"Fort Newton\",\n          \"state\": \"Utah\",\n          \"zip\": \"04247-7409\",\n          \"country\": \"Croatia\",\n          \"nickName\": \"Dr. Guadalupe Huel\",\n          \"address2\": \"8124 Freeda Path\",\n          \"address3\": \"47133 Stark Inlet\",\n          \"phoneNumber\": \"(603) 567-9563 x0089\"\n        }\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"appositus\",\n      \"expirationDate\": {\n        \"month\": 901,\n        \"year\": 2021\n      },\n      \"cvv\": 784\n    }\n  },\n  \"tags\": [\n    \"contabesco\",\n    \"vergo\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"status\": \"accusantium\",\n  \"message\": 23,\n  \"jobId\": \"7RHQqWoO04\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "6bacb76d-5410-41e9-91ed-f4e8c58abea0",
                  "name": "Invalid request",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-pdf-split"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentSourceIdentifier\": \"rNQPpZoHnk\",\n  \"items\": [\n    {\n      \"pageRange\": {\n        \"startPage\": 39,\n        \"endPage\": 26\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"Georgianna\",\n          \"lastName\": \"Breitenberg\",\n          \"address1\": \"92741 Darrell Drives\",\n          \"city\": \"Terryboro\",\n          \"state\": \"Oregon\",\n          \"zip\": \"74394-0132\",\n          \"country\": \"Puerto Rico\",\n          \"nickName\": \"Mr. Randal VonRueden\",\n          \"address2\": \"83446 Golden Shoal\",\n          \"address3\": \"17257 Marjorie Loaf\",\n          \"phoneNumber\": \"1-486-870-6027 x285\"\n        },\n        {\n          \"firstName\": \"Darrin\",\n          \"lastName\": \"Johnston\",\n          \"address1\": \"2287 Zetta Road\",\n          \"city\": \"Marvinstead\",\n          \"state\": \"California\",\n          \"zip\": \"02950\",\n          \"country\": \"Vanuatu\",\n          \"nickName\": \"Gloria Rogahn\",\n          \"address2\": \"32498 Park Lane\",\n          \"address3\": \"3002 Prosacco Mall\",\n          \"phoneNumber\": \"241-580-2749 x647\"\n        }\n      ]\n    },\n    {\n      \"pageRange\": {\n        \"startPage\": 42,\n        \"endPage\": 26\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"Bobby\",\n          \"lastName\": \"Langosh\",\n          \"address1\": \"136 Milton Road\",\n          \"city\": \"Fordmouth\",\n          \"state\": \"Alabama\",\n          \"zip\": \"74611\",\n          \"country\": \"Slovenia\",\n          \"nickName\": \"Georgia Pfannerstill IV\",\n          \"address2\": \"21389 Klocko Route\",\n          \"address3\": \"44901 Kohler Stream\",\n          \"phoneNumber\": \"1-265-782-6863 x4720\"\n        },\n        {\n          \"firstName\": \"Dion\",\n          \"lastName\": \"Klocko\",\n          \"address1\": \"432 Stehr Groves\",\n          \"city\": \"North Wellingtonberg\",\n          \"state\": \"Wyoming\",\n          \"zip\": \"93943-0982\",\n          \"country\": \"Saint Helena\",\n          \"nickName\": \"Mr. Marshall Anderson\",\n          \"address2\": \"70352 E North Street\",\n          \"address3\": \"410 Johnston Ford\",\n          \"phoneNumber\": \"(796) 889-3058\"\n        }\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"maiores\",\n      \"expirationDate\": {\n        \"month\": 363,\n        \"year\": 2012\n      },\n      \"cvv\": 538\n    }\n  },\n  \"tags\": [\n    \"recusandae\",\n    \"cursim\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                },
                {
                  "id": "302df0aa-2cc6-4f15-88c1-0467478991f2",
                  "name": "Unauthorized",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-pdf-split"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentSourceIdentifier\": \"QSiyd3VjXC\",\n  \"items\": [\n    {\n      \"pageRange\": {\n        \"startPage\": 58,\n        \"endPage\": 37\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"Madyson\",\n          \"lastName\": \"Tillman\",\n          \"address1\": \"7625 Kingfisher Close\",\n          \"city\": \"North Hankshire\",\n          \"state\": \"New Hampshire\",\n          \"zip\": \"23925-6020\",\n          \"country\": \"Ghana\",\n          \"nickName\": \"Eunice Hamill\",\n          \"address2\": \"7882 Liberty Street\",\n          \"address3\": \"352 W Center Street\",\n          \"phoneNumber\": \"655.712.5158 x01174\"\n        },\n        {\n          \"firstName\": \"Samson\",\n          \"lastName\": \"Barrows\",\n          \"address1\": \"118 Lisandro Circles\",\n          \"city\": \"Schinnerbury\",\n          \"state\": \"Washington\",\n          \"zip\": \"53006\",\n          \"country\": \"Czechia\",\n          \"nickName\": \"Mrs. Belinda Klein\",\n          \"address2\": \"258 Santiago Burg\",\n          \"address3\": \"59164 Treutel Expressway\",\n          \"phoneNumber\": \"970-885-0572 x57327\"\n        }\n      ]\n    },\n    {\n      \"pageRange\": {\n        \"startPage\": 34,\n        \"endPage\": 40\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"Paige\",\n          \"lastName\": \"Greenfelder-Windler\",\n          \"address1\": \"273 Williamson Island\",\n          \"city\": \"Port Teaganberg\",\n          \"state\": \"Ohio\",\n          \"zip\": \"10489\",\n          \"country\": \"Turkey\",\n          \"nickName\": \"Darin Nikolaus\",\n          \"address2\": \"98972 Skiles Dale\",\n          \"address3\": \"262 Homenick Trafficway\",\n          \"phoneNumber\": \"884-569-6918 x53895\"\n        },\n        {\n          \"firstName\": \"Sabina\",\n          \"lastName\": \"Zieme\",\n          \"address1\": \"8433 Jaron Inlet\",\n          \"city\": \"East Hunter\",\n          \"state\": \"Tennessee\",\n          \"zip\": \"89789-6678\",\n          \"country\": \"Bouvet Island\",\n          \"nickName\": \"Lori Shields II\",\n          \"address2\": \"2817 Watsica Fork\",\n          \"address3\": \"209 S Main Avenue\",\n          \"phoneNumber\": \"755-943-0285\"\n        }\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"thermae\",\n      \"expirationDate\": {\n        \"month\": 840,\n        \"year\": 2015\n      },\n      \"cvv\": 783\n    }\n  },\n  \"tags\": [\n    \"laudantium\",\n    \"ratione\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                      "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                    ]
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ]
        },
        {
          "name": "single-pdf-split-addressCapture",
          "description": "",
          "item": [
            {
              "id": "cb0501af-32b3-46a7-af60-366e8813a3a6",
              "name": "Operation for /jobs/single-pdf-split-addressCapture",
              "request": {
                "name": "Operation for /jobs/single-pdf-split-addressCapture",
                "description": {},
                "url": {
                  "path": [
                    "jobs",
                    "single-pdf-split-addressCapture"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": \"jiuUFylke4\",\n  \"embeddedExtractionSpecs\": [\n    {\n      \"startPage\": 76,\n      \"endPage\": 33,\n      \"addressRegion\": {\n        \"x\": 814.22,\n        \"y\": 982.46,\n        \"width\": \"cQ0Vvzb2u0\",\n        \"height\": 603.4,\n        \"pageOffset\": 42\n      }\n    },\n    {\n      \"startPage\": 48,\n      \"endPage\": 75,\n      \"addressRegion\": {\n        \"x\": 912.24,\n        \"y\": 279.36,\n        \"width\": \"hj44Svm1n6\",\n        \"height\": 450.83,\n        \"pageOffset\": 80\n      }\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"articulus\",\n      \"expirationDate\": {\n        \"month\": 989,\n        \"year\": 2020\n      },\n      \"cvv\": 354\n    }\n  },\n  \"tags\": [\n    \"trans\",\n    \"adinventitias\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "auth": null
              },
              "response": [
                {
                  "id": "3a2e528c-331c-4e03-bbd0-25b4389d54d4",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-pdf-split-addressCapture"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentSourceIdentifier\": \"OOO5PsCudx\",\n  \"embeddedExtractionSpecs\": [\n    {\n      \"startPage\": 50,\n      \"endPage\": 42,\n      \"addressRegion\": {\n        \"x\": 861.31,\n        \"y\": 7.53,\n        \"width\": \"oH1aMtRwgg\",\n        \"height\": 320.32,\n        \"pageOffset\": 67\n      }\n    },\n    {\n      \"startPage\": 73,\n      \"endPage\": 46,\n      \"addressRegion\": {\n        \"x\": 224.46,\n        \"y\": 493.91,\n        \"width\": \"V26hAcCwIz\",\n        \"height\": 837.18,\n        \"pageOffset\": 61\n      }\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"villa\",\n      \"expirationDate\": {\n        \"month\": 538,\n        \"year\": 2010\n      },\n      \"cvv\": 571\n    }\n  },\n  \"tags\": [\n    \"tenus\",\n    \"earum\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"status\": \"patior\",\n  \"message\": 50,\n  \"jobId\": \"VcstPQhY95\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "5e692c84-cc03-4b1e-b617-6362312278f0",
                  "name": "Invalid request",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-pdf-split-addressCapture"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentSourceIdentifier\": \"sO84RayHKZ\",\n  \"embeddedExtractionSpecs\": [\n    {\n      \"startPage\": 52,\n      \"endPage\": 78,\n      \"addressRegion\": {\n        \"x\": 765.01,\n        \"y\": 65.9,\n        \"width\": \"3zF8pqNiYC\",\n        \"height\": 352.96,\n        \"pageOffset\": 61\n      }\n    },\n    {\n      \"startPage\": 34,\n      \"endPage\": 79,\n      \"addressRegion\": {\n        \"x\": 278.57,\n        \"y\": 785.73,\n        \"width\": \"a3lkvXnloQ\",\n        \"height\": 36.28,\n        \"pageOffset\": 75\n      }\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"debitis\",\n      \"expirationDate\": {\n        \"month\": 315,\n        \"year\": 2000\n      },\n      \"cvv\": 200\n    }\n  },\n  \"tags\": [\n    \"corrigo\",\n    \"utroque\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                },
                {
                  "id": "a74e5b9c-d281-4393-bfd4-24b6dc887d20",
                  "name": "Unauthorized",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-pdf-split-addressCapture"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentSourceIdentifier\": \"omf9pPb6sB\",\n  \"embeddedExtractionSpecs\": [\n    {\n      \"startPage\": 18,\n      \"endPage\": 19,\n      \"addressRegion\": {\n        \"x\": 406.81,\n        \"y\": 837.6,\n        \"width\": \"hiYJcFQrfk\",\n        \"height\": 61,\n        \"pageOffset\": 55\n      }\n    },\n    {\n      \"startPage\": 19,\n      \"endPage\": 70,\n      \"addressRegion\": {\n        \"x\": 31.88,\n        \"y\": 272.37,\n        \"width\": \"eyLndDnaXg\",\n        \"height\": 780.72,\n        \"pageOffset\": 37\n      }\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"unde\",\n      \"expirationDate\": {\n        \"month\": 920,\n        \"year\": 2007\n      },\n      \"cvv\": 846\n    }\n  },\n  \"tags\": [\n    \"ducimus\",\n    \"stultus\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                      "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                    ]
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ]
        },
        {
          "name": "multi-pdf-address-capture",
          "description": "",
          "item": [
            {
              "id": "963a1483-f526-4b28-8a2e-405a25fde707",
              "name": "Operation for /jobs/multi-pdf-address-capture",
              "request": {
                "name": "Operation for /jobs/multi-pdf-address-capture",
                "description": {},
                "url": {
                  "path": [
                    "jobs",
                    "multi-pdf-address-capture"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"addressCapturePdfs\": [\n    {\n      \"documentSourceIdentifier\": \"lwdsQ2scfD\",\n      \"addressListRegion\": \"963 Bayer Gardens\",\n      \"delimiter\": \"cohors\",\n      \"tags\": [\n        \"caelestis\",\n        \"ante\"\n      ]\n    },\n    {\n      \"documentSourceIdentifier\": \"ihgPJ4fKIT\",\n      \"addressListRegion\": \"5149 Rosalee Villages\",\n      \"delimiter\": \"facilis\",\n      \"tags\": [\n        \"crebro\",\n        \"aliquid\"\n      ]\n    }\n  ],\n  \"jobTemplate\": \"vomito\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"anser\",\n      \"expirationDate\": {\n        \"month\": 67,\n        \"year\": 2007\n      },\n      \"cvv\": 213\n    }\n  },\n  \"tags\": [\n    \"ascit\",\n    \"dedecor\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "auth": null
              },
              "response": [
                {
                  "id": "8767e40c-989d-4ae5-98f5-28f410003a38",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-pdf-address-capture"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"addressCapturePdfs\": [\n    {\n      \"documentSourceIdentifier\": \"7SuU1WLorv\",\n      \"addressListRegion\": \"34582 Mireille Shores\",\n      \"delimiter\": \"creo\",\n      \"tags\": [\n        \"supellex\",\n        \"bos\"\n      ]\n    },\n    {\n      \"documentSourceIdentifier\": \"r8NhlbjPVN\",\n      \"addressListRegion\": \"9214 N 2nd Street\",\n      \"delimiter\": \"patria\",\n      \"tags\": [\n        \"ascisco\",\n        \"cimentarius\"\n      ]\n    }\n  ],\n  \"jobTemplate\": \"virgo\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"pecco\",\n      \"expirationDate\": {\n        \"month\": 80,\n        \"year\": 2005\n      },\n      \"cvv\": 213\n    }\n  },\n  \"tags\": [\n    \"sollers\",\n    \"solutio\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"status\": \"capillus\",\n  \"message\": 58,\n  \"jobId\": \"Ve6jzc073I\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "787f7236-9d07-4d83-8807-55e21a6e4953",
                  "name": "Invalid request",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-pdf-address-capture"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"addressCapturePdfs\": [\n    {\n      \"documentSourceIdentifier\": \"biumMDas0q\",\n      \"addressListRegion\": \"7296 Hills Cape\",\n      \"delimiter\": \"callide\",\n      \"tags\": [\n        \"ubi\",\n        \"sui\"\n      ]\n    },\n    {\n      \"documentSourceIdentifier\": \"LcIVMNZ0W4\",\n      \"addressListRegion\": \"86271 S 10th Street\",\n      \"delimiter\": \"titulus\",\n      \"tags\": [\n        \"ea\",\n        \"acer\"\n      ]\n    }\n  ],\n  \"jobTemplate\": \"contigo\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"validus\",\n      \"expirationDate\": {\n        \"month\": 323,\n        \"year\": 2020\n      },\n      \"cvv\": 386\n    }\n  },\n  \"tags\": [\n    \"provident\",\n    \"degusto\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                },
                {
                  "id": "72a91ef3-642c-4fdd-83c9-d69e32ccfab0",
                  "name": "Unauthorized",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-pdf-address-capture"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"addressCapturePdfs\": [\n    {\n      \"documentSourceIdentifier\": \"HiNpyjSecS\",\n      \"addressListRegion\": \"97665 W Park Street\",\n      \"delimiter\": \"tempus\",\n      \"tags\": [\n        \"cognomen\",\n        \"arcesso\"\n      ]\n    },\n    {\n      \"documentSourceIdentifier\": \"7gXtIZC3uz\",\n      \"addressListRegion\": \"37118 Rutherford Estate\",\n      \"delimiter\": \"bonus\",\n      \"tags\": [\n        \"abbas\",\n        \"ducimus\"\n      ]\n    }\n  ],\n  \"jobTemplate\": \"thesis\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"spargo\",\n      \"expirationDate\": {\n        \"month\": 404,\n        \"year\": 2018\n      },\n      \"cvv\": 182\n    }\n  },\n  \"tags\": [\n    \"atrox\",\n    \"aurum\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                      "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                    ]
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ]
        }
      ]
    },
    {
      "name": "auth",
      "item": [
        {
          "name": "tokens",
          "item": [
            {
              "name": "short",
              "item": [
                {
                  "name": "Issue a short-term access token",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "// JWT token creation returns 201 Created",
                          "pm.test('Status code is allowed (200,201,400,401)', function () { pm.expect([200, 201, 400, 401]).to.include(pm.response.code); });",
                          "pm.test('Response time < 1s', function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                        ]
                      }
                    }
                  ]
                }
              ]
            },
            {
              "name": "long",
              "item": [
                {
                  "name": "Issue or rotate a long-term token",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "// JWT endpoints have different allowed status codes",
                          "pm.test('Status code is allowed (200,201,400,401,429)', function () { pm.expect([200, 201, 400, 401, 429]).to.include(pm.response.code); });",
                          "pm.test('Response time < 1s', function () { pm.expect(pm.response.responseTime).to.be.below(1000); });",
                          "",
                          "// Handle rate limiting gracefully",
                          "if (pm.response.code === 429) {",
                          "  pm.test('Rate limit response has Retry-After header', function () {",
                          "    pm.response.to.have.header('Retry-After');",
                          "  });",
                          "}"
                        ]
                      }
                    }
                  ]
                }
              ]
            },
            {
              "name": "{tokenId}",
              "item": [
                {
                  "name": "revoke",
                  "item": [
                    {
                      "name": "Revoke a token",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "// JWT revoke endpoint returns 204 No Content on success, 404 for non-existent tokens",
                              "pm.test('Status code is allowed (200,204,400,401,404)', function () { pm.expect([200, 204, 400, 401, 404]).to.include(pm.response.code); });",
                              "pm.test('Response time < 1s', function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// JWT Authentication Provider for C2M API",
          "// Provider: JWT Two-Token System (Long-term + Short-term)",
          "// This script automatically manages token refresh for C2M API requests",
          "",
          "// Configuration - Set these in your Postman environment",
          "const config = {",
          "    baseUrl: pm.environment.get('baseUrl') || 'http://localhost:4010',",
          "    authUrl: pm.environment.get('authUrl') || pm.environment.get('baseUrl') || 'http://localhost:4010',",
          "    clientId: pm.environment.get('clientId'),",
          "    clientSecret: pm.environment.get('clientSecret'),",
          "    longTokenVar: 'longTermToken',",
          "    shortTokenVar: 'shortTermToken',",
          "    tokenExpiryVar: 'tokenExpiry',",
          "    tokenIdVar: 'currentTokenId'",
          "};",
          "",
          "// Helper function to check if token is expired",
          "function isTokenExpired(expiryTime) {",
          "    if (!expiryTime) return true;",
          "    const now = new Date().getTime();",
          "    const expiry = new Date(expiryTime).getTime();",
          "    const bufferTime = 60 * 1000; // 1 minute buffer",
          "    return (expiry - now) <= bufferTime;",
          "}",
          "",
          "// Helper function to get long-term token",
          "async function getLongTermToken() {",
          "    console.log('Obtaining new long-term token...');",
          "    ",
          "    const request = {",
          "        url: `${config.authUrl}/auth/tokens/long`,",
          "        method: 'POST',",
          "        header: {",
          "            'Content-Type': 'application/json',",
          "            'X-Client-Id': config.clientId",
          "        },",
          "        body: {",
          "            mode: 'raw',",
          "            raw: JSON.stringify({",
          "                grant_type: 'client_credentials',",
          "                client_id: config.clientId,",
          "                client_secret: config.clientSecret,",
          "                scopes: ['jobs:submit', 'templates:read', 'tokens:revoke'],",
          "                ttl_seconds: 2592000 // 30 days",
          "            })",
          "        }",
          "    };",
          "    ",
          "    return new Promise((resolve, reject) => {",
          "        pm.sendRequest(request, (err, response) => {",
          "            if (err) {",
          "                console.error('Failed to get long-term token:', err);",
          "                reject(err);",
          "                return;",
          "            }",
          "            ",
          "            if (response.code === 200 || response.code === 201) {",
          "                const data = response.json();",
          "                pm.environment.set(config.longTokenVar, data.access_token);",
          "                pm.environment.set('longTokenId', data.token_id);",
          "                pm.environment.set('longTokenExpiry', data.expires_at);",
          "                console.log(`Long-term token obtained: ${data.token_id}`);",
          "                resolve(data.access_token);",
          "            } else {",
          "                console.error('Failed to get long-term token:', response.text());",
          "                reject(new Error(`HTTP ${response.code}: ${response.text()}`));",
          "            }",
          "        });",
          "    });",
          "}",
          "",
          "// Helper function to get short-term token",
          "async function getShortTermToken(longTermToken) {",
          "    console.log('Exchanging for short-term token...');",
          "    ",
          "    const request = {",
          "        url: `${config.authUrl}/auth/tokens/short`,",
          "        method: 'POST',",
          "        header: {",
          "            'Authorization': `Bearer ${longTermToken}`,",
          "            'Content-Type': 'application/json'",
          "        },",
          "        body: {",
          "            mode: 'raw',",
          "            raw: JSON.stringify({",
          "                scopes: ['jobs:submit'] // Narrow scope for actual API calls",
          "            })",
          "        }",
          "    };",
          "    ",
          "    return new Promise((resolve, reject) => {",
          "        pm.sendRequest(request, (err, response) => {",
          "            if (err) {",
          "                console.error('Failed to get short-term token:', err);",
          "                reject(err);",
          "                return;",
          "            }",
          "            ",
          "            if (response.code === 200 || response.code === 201) {",
          "                const data = response.json();",
          "                pm.environment.set(config.shortTokenVar, data.access_token);",
          "                pm.environment.set(config.tokenExpiryVar, data.expires_at);",
          "                pm.environment.set(config.tokenIdVar, data.token_id);",
          "                console.log(`Short-term token obtained: ${data.token_id}, expires: ${data.expires_at}`);",
          "                resolve(data.access_token);",
          "            } else {",
          "                console.error('Failed to get short-term token:', response.text());",
          "                reject(new Error(`HTTP ${response.code}: ${response.text()}`));",
          "            }",
          "        });",
          "    });",
          "}",
          "",
          "// Main authentication flow",
          "async function authenticate() {",
          "    try {",
          "        // Skip auth for token endpoints",
          "        const currentPath = pm.request.url.getPath();",
          "        if (currentPath.includes('/auth/tokens/')) {",
          "            console.log('Skipping auth for token endpoint');",
          "            return;",
          "        }",
          "        ",
          "        // Check if we need client credentials",
          "        if (!config.clientId || !config.clientSecret) {",
          "            console.warn('Client credentials not configured. Set clientId and clientSecret in environment.');",
          "            return;",
          "        }",
          "        ",
          "        // Get current tokens from environment",
          "        let longTermToken = pm.environment.get(config.longTokenVar);",
          "        const shortTermToken = pm.environment.get(config.shortTokenVar);",
          "        const tokenExpiry = pm.environment.get(config.tokenExpiryVar);",
          "        ",
          "        // Check if we need to refresh tokens",
          "        if (!longTermToken) {",
          "            // No long-term token, get one",
          "            longTermToken = await getLongTermToken();",
          "        }",
          "        ",
          "        if (!shortTermToken || isTokenExpired(tokenExpiry)) {",
          "            // No short-term token or it's expired, get a new one",
          "            await getShortTermToken(longTermToken);",
          "        } else {",
          "            console.log('Using existing valid short-term token');",
          "        }",
          "        ",
          "        // Set the Authorization header with the short-term token",
          "        const currentShortToken = pm.environment.get(config.shortTokenVar);",
          "        pm.request.headers.add({",
          "            key: 'Authorization',",
          "            value: `Bearer ${currentShortToken}`",
          "        });",
          "        ",
          "        console.log('Authentication complete, Authorization header set');",
          "        ",
          "    } catch (error) {",
          "        console.error('Authentication failed:', error);",
          "        throw error;",
          "    }",
          "}",
          "",
          "// Execute authentication",
          "authenticate().catch(error => {",
          "    // Set an error variable that tests can check",
          "    pm.environment.set('authError', error.toString());",
          "    console.error('Pre-request script failed:', error);",
          "});",
          "",
          "// Utility functions for manual token management (can be called from Tests tab)",
          "pm.globals.set('revokeCurrentToken', async function() {",
          "    const tokenId = pm.environment.get(config.tokenIdVar);",
          "    const token = pm.environment.get(config.shortTokenVar);",
          "    ",
          "    if (!tokenId || !token) {",
          "        console.log('No token to revoke');",
          "        return;",
          "    }",
          "    ",
          "    const request = {",
          "        url: `${config.authUrl}/auth/tokens/${tokenId}/revoke`,",
          "        method: 'POST',",
          "        header: {",
          "            'Authorization': `Bearer ${token}`",
          "        }",
          "    };",
          "    ",
          "    pm.sendRequest(request, (err, response) => {",
          "        if (err) {",
          "            console.error('Failed to revoke token:', err);",
          "        } else if (response.code === 200 || response.code === 204) {",
          "            console.log(`Token ${tokenId} revoked successfully`);",
          "            pm.environment.unset(config.shortTokenVar);",
          "            pm.environment.unset(config.tokenExpiryVar);",
          "            pm.environment.unset(config.tokenIdVar);",
          "        } else {",
          "            console.error('Failed to revoke token:', response.text());",
          "        }",
          "    });",
          "});",
          "",
          "pm.globals.set('refreshTokens', async function() {",
          "    try {",
          "        const longTermToken = pm.environment.get(config.longTokenVar) || await getLongTermToken();",
          "        await getShortTermToken(longTermToken);",
          "        console.log('Tokens refreshed successfully');",
          "    } catch (error) {",
          "        console.error('Failed to refresh tokens:', error);",
          "    }",
          "});"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "token",
      "value": "eyJhbGciOiJub25lIn0.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlhdCI6MTczNjI5MjEyNH0.",
      "type": "string"
    },
    {
      "key": "baseUrl",
      "value": "{{baseUrl}}",
      "type": "string"
    }
  ]
}
