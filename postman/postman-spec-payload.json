{
  "schema": {
    "language": "yaml",
    "schema": "openapi: 3.0.3\ninfo:\n  title: LOB-Style Document Submission API\n  version: 1.0.0\n  description: API for submitting document jobs using LOB-style document and address\n    structures.\nservers:\n- url: https://api.example.com\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  schemas:\n    documentSourceIdentifier:\n      oneOf:\n      - type: object\n        required:\n        - documentId\n        properties:\n          documentId:\n            type: string\n      - type: object\n        required:\n        - externalUrl\n        properties:\n          externalUrl:\n            type: string\n            format: uri\n      - type: object\n        required:\n        - uploadRequestId\n        - documentName\n        properties:\n          uploadRequestId:\n            type: string\n          documentName:\n            type: string\n      - type: object\n        required:\n        - uploadRequestId\n        - zipId\n        - documentName\n        properties:\n          uploadRequestId:\n            type: string\n          zipId:\n            type: string\n          documentName:\n            type: string\n      - type: object\n        required:\n        - zipId\n        - documentName\n        properties:\n          zipId:\n            type: string\n          documentName:\n            type: string\n    recipientAddress:\n      type: object\n      required:\n      - firstName\n      - lastName\n      - address1\n      - city\n      - state\n      - zip\n      - country\n      properties:\n        firstName:\n          type: string\n        lastName:\n          type: string\n        nickName:\n          type: string\n        address1:\n          type: string\n        address2:\n          type: string\n        address3:\n          type: string\n        city:\n          type: string\n        state:\n          type: string\n        zip:\n          type: string\n        country:\n          type: string\n        phoneNumber:\n          type: string\n    recipientAddressSource:\n      oneOf:\n      - $ref: '#/components/schemas/recipientAddress'\n      - type: object\n        required:\n        - addressListId\n        properties:\n          addressListId:\n            type: string\n      - type: object\n        required:\n        - addressId\n        properties:\n          addressId:\n            type: string\n    jobOptions:\n      type: object\n      required:\n      - documentClass\n      - layout\n      - mailclass\n      - paperType\n      - printOption\n      - envelope\n      properties:\n        documentClass:\n          type: string\n          enum:\n          - businessLetter\n          - personalLetter\n        layout:\n          type: string\n          enum:\n          - portrait\n          - landscape\n        mailclass:\n          type: string\n          enum:\n          - firstClassMail\n          - priorityMail\n          - largeEnvelope\n        paperType:\n          type: string\n          enum:\n          - letter\n          - legal\n          - postcard\n        printOption:\n          type: string\n          enum:\n          - none\n          - color\n          - grayscale\n        envelope:\n          type: string\n          enum:\n          - flat\n          - windowedFlat\n          - letter\n          - legal\n          - postcard\n    creditCardDetails:\n      type: object\n      required:\n      - cardType\n      - cardNumber\n      - expirationDate\n      - cvv\n      properties:\n        cardType:\n          type: string\n          enum:\n          - visa\n          - mastercard\n          - discover\n          - americanExpress\n        cardNumber:\n          type: string\n        expirationDate:\n          type: object\n          required:\n          - month\n          - year\n          properties:\n            month:\n              type: integer\n              minimum: 1\n              maximum: 12\n            year:\n              type: integer\n              minimum: 2000\n        cvv:\n          type: integer\n    achDetails:\n      type: object\n      required:\n      - routingNumber\n      - accountNumber\n      - checkDigit\n      properties:\n        routingNumber:\n          type: string\n        accountNumber:\n          type: string\n        checkDigit:\n          type: integer\n    creditAmount:\n      type: object\n      required:\n      - amount\n      - currency\n      properties:\n        amount:\n          type: number\n        currency:\n          type: string\n          enum:\n          - USD\n          - EUR\n          - GBP\n          - CAD\n          - AUD\n    paymentDetails:\n      type: object\n      required:\n      - billingType\n      properties:\n        billingType:\n          type: string\n          enum:\n          - creditCard\n          - invoice\n          - ach\n          - userCredit\n        creditCardDetails:\n          $ref: '#/components/schemas/creditCardDetails'\n        invoiceDetails:\n          type: object\n          properties:\n            invoiceNumber:\n              type: string\n            amountDue:\n              type: number\n        achDetails:\n          $ref: '#/components/schemas/achDetails'\n        creditAmount:\n          $ref: '#/components/schemas/creditAmount'\n    StandardResponse:\n      type: object\n      properties:\n        status:\n          type: string\n        message:\n          type: string\n        jobId:\n          type: string\n  parameters:\n    Authorization:\n      name: Authorization\n      in: header\n      required: true\n      schema:\n        type: string\n        example: Bearer <your-jwt-token>\n      description: JWT Bearer token for authorization\n    Content-Type:\n      name: Content-Type\n      in: header\n      required: true\n      schema:\n        type: string\n        example: application/json\nsecurity:\n- bearerAuth: []\npaths:\n  /jobs/submit/single/doc:\n    post:\n      summary: Submit a single document to multiple recipients\n      operationId: submitSingleDoc\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n              - documentSourceIdentifier\n              - jobOptions\n              properties:\n                documentSourceIdentifier:\n                  $ref: '#/components/schemas/documentSourceIdentifier'\n                recipientAddresses:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/recipientAddressSource'\n                jobOptions:\n                  $ref: '#/components/schemas/jobOptions'\n                paymentDetails:\n                  $ref: '#/components/schemas/paymentDetails'\n                tags:\n                  type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: Job submission accepted\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  jobId:\n                    type: string\n                  status:\n                    type: string\n        '400':\n          description: Invalid request\n        '401':\n          description: Unauthorized\n  /jobs/submit/multi/doc:\n    post:\n      summary: Submit multiple documents, each to a different recipient\n      operationId: submitMultiDoc\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n              - documentRecipientPairs\n              - jobOptions\n              properties:\n                documentRecipientPairs:\n                  type: array\n                  items:\n                    type: object\n                    required:\n                    - documentSourceIdentifier\n                    - recipientAddressSource\n                    properties:\n                      documentSourceIdentifier:\n                        $ref: '#/components/schemas/documentSourceIdentifier'\n                      recipientAddressSource:\n                        $ref: '#/components/schemas/recipientAddressSource'\n                jobOptions:\n                  $ref: '#/components/schemas/jobOptions'\n                paymentDetails:\n                  $ref: '#/components/schemas/paymentDetails'\n                tags:\n                  type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Invalid request\n        '401':\n          description: Unauthorized\n  /jobs/submit/multi/doc/merge:\n    post:\n      summary: Merge multiple documents and send to a single recipient\n      operationId: submitMultiDocMerge\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n              - documentsToMerge\n              - recipientAddressSource\n              properties:\n                documentsToMerge:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/documentSourceIdentifier'\n                recipientAddressSource:\n                  $ref: '#/components/schemas/recipientAddressSource'\n                tags:\n                  type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Invalid request\n        '401':\n          description: Unauthorized\n  /jobs/submit/single/doc/jobTemplate:\n    post:\n      summary: Submit a document using a job template\n      operationId: submitSingleDocJobTemplate\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n              - documentSourceIdentifier\n              - jobTemplate\n              properties:\n                documentSourceIdentifier:\n                  $ref: '#/components/schemas/documentSourceIdentifier'\n                recipientAddresses:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/recipientAddressSource'\n                jobTemplate:\n                  type: string\n                jobOptions:\n                  $ref: '#/components/schemas/jobOptions'\n                paymentDetails:\n                  $ref: '#/components/schemas/paymentDetails'\n                tags:\n                  type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Invalid request\n        '401':\n          description: Unauthorized\n  /jobs/submit/multi/docs/jobtemplate:\n    post:\n      summary: Submit multiple documents with recipient addresses and job template\n      operationId: submitMultiDocsJobTemplate\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n              - documentRecipientPairs\n              - jobTemplate\n              - paymentDetails\n              properties:\n                documentRecipientPairs:\n                  type: array\n                  items:\n                    type: object\n                    required:\n                    - documentSourceIdentifier\n                    - recipientAddressSource\n                    properties:\n                      documentSourceIdentifier:\n                        $ref: '#/components/schemas/documentSourceIdentifier'\n                      recipientAddressSource:\n                        $ref: '#/components/schemas/recipientAddressSource'\n                jobTemplate:\n                  type: string\n                paymentDetails:\n                  $ref: '#/components/schemas/paymentDetails'\n                tags:\n                  type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Invalid request\n        '401':\n          description: Unauthorized\n  /jobs/submit/multi/doc/merge/jobTemplate:\n    post:\n      summary: Merge documents, send to recipient using job template\n      operationId: submitMultiDocMergeJobTemplate\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n              - documentsToMerge\n              - recipientAddressSource\n              - jobTemplate\n              properties:\n                documentsToMerge:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/documentSourceIdentifier'\n                recipientAddressSource:\n                  $ref: '#/components/schemas/recipientAddressSource'\n                jobTemplate:\n                  type: string\n                paymentDetails:\n                  $ref: '#/components/schemas/paymentDetails'\n                tags:\n                  type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Invalid request\n        '401':\n          description: Unauthorized\n  /jobs/submit/single/pdf/split:\n    post:\n      summary: Split a PDF into page ranges and send to different recipients\n      operationId: submitSinglePdfSplit\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n              - documentSourceIdentifier\n              - pageRanges\n              properties:\n                documentSourceIdentifier:\n                  $ref: '#/components/schemas/documentSourceIdentifier'\n                pageRanges:\n                  type: array\n                  items:\n                    type: object\n                    required:\n                    - startPage\n                    - endPage\n                    - recipientAddressSource\n                    properties:\n                      startPage:\n                        type: integer\n                      endPage:\n                        type: integer\n                      recipientAddressSource:\n                        $ref: '#/components/schemas/recipientAddressSource'\n                paymentDetails:\n                  $ref: '#/components/schemas/paymentDetails'\n                tags:\n                  type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Invalid request\n        '401':\n          description: Unauthorized\n  /jobs/submit/single/pdf/split/addressCapture:\n    post:\n      summary: Split PDF and extract embedded recipient addresses\n      operationId: submitSinglePdfSplitAddressCapture\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n              - documentSourceIdentifier\n              - embeddedExtractionSpecs\n              properties:\n                documentSourceIdentifier:\n                  $ref: '#/components/schemas/documentSourceIdentifier'\n                embeddedExtractionSpecs:\n                  type: array\n                  items:\n                    type: object\n                    required:\n                    - startPage\n                    - endPage\n                    - addressRegion\n                    properties:\n                      startPage:\n                        type: integer\n                      endPage:\n                        type: integer\n                      addressRegion:\n                        type: object\n                        required:\n                        - x\n                        - y\n                        - width\n                        - height\n                        - pageOffset\n                        properties:\n                          x:\n                            type: number\n                          y:\n                            type: number\n                          width:\n                            type: number\n                          height:\n                            type: number\n                          pageOffset:\n                            type: integer\n                paymentDetails:\n                  $ref: '#/components/schemas/paymentDetails'\n                tags:\n                  type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Invalid request\n        '401':\n          description: Unauthorized\n  /jobs/submit/multi/pdf/addressCapture:\n    post:\n      summary: Submit multiple PDFs with embedded address regions\n      operationId: submitMultiPdfAddressCapture\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n              - addressCapturePdfs\n              - jobTemplate\n              properties:\n                addressCapturePdfs:\n                  type: array\n                  items:\n                    type: object\n                    required:\n                    - documentSourceIdentifier\n                    - addressListRegion\n                    properties:\n                      documentSourceIdentifier:\n                        $ref: '#/components/schemas/documentSourceIdentifier'\n                      addressListRegion:\n                        type: object\n                        required:\n                        - x\n                        - y\n                        - width\n                        - height\n                        - pageOffset\n                        properties:\n                          x:\n                            type: number\n                          y:\n                            type: number\n                          width:\n                            type: number\n                          height:\n                            type: number\n                          pageOffset:\n                            type: integer\n                      delimiter:\n                        type: string\n                      tags:\n                        type: array\n                        items:\n                          type: string\n                jobTemplate:\n                  type: string\n                paymentDetails:\n                  $ref: '#/components/schemas/paymentDetails'\n                tags:\n                  type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Invalid request\n        '401':\n          description: Unauthorized\n  /webhooks/jobStatusUpdate:\n    post:\n      summary: Webhook endpoint to receive job status updates\n      operationId: webhookJobStatusUpdate\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n              - jobId\n              - status\n              - timestamp\n              properties:\n                jobId:\n                  type: string\n                  example: job_123456789\n                status:\n                  type: string\n                  enum:\n                  - queued\n                  - processing\n                  - completed\n                  - failed\n                  example: completed\n                timestamp:\n                  type: string\n                  format: date-time\n                  example: '2025-07-07T12:34:56Z'\n                metadata:\n                  type: object\n                  additionalProperties:\n                    type: string\n                  example:\n                    source: PrintCenterA\n                    batch: B20250707\n      responses:\n        '200':\n          description: Webhook received successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardResponse'\n        '400':\n          description: Invalid payload\n        '401':\n          description: Unauthorized\n"
  }
}
