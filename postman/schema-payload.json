{
  "type": "openapi:3",
  "files": [
    {
      "path": "openapi.yaml",
      "content": "\"openapi: 3.0.3\\ninfo:\\n  title: Click2Mail Document Submission API\\n  version: 1.0.0\\n  license:\\n    name: MIT\\n    url: https://opensource.org/licenses/NONE_YET\\n  description: API for submitting document jobs using the Click2Mail API\\n    Version 2\\nservers:\\n- url: https://api.noname.com\\ncomponents:\\n  securitySchemes:\\n    bearerAuth:\\n      type: http\\n      scheme: bearer\\n      bearerFormat: JWT\\n  schemas:\\n    DocumentSourceIdentifier:\\n      oneOf:\\n      - type: object\\n        required:\\n        - documentId\\n        properties:\\n          documentId:\\n            type: string\\n      - type: object\\n        required:\\n        - externalUrl\\n        properties:\\n          externalUrl:\\n            type: string\\n            format: uri\\n      - type: object\\n        required:\\n        - uploadRequestId\\n        - documentName\\n        properties:\\n          uploadRequestId:\\n            type: string\\n          documentName:\\n            type: string\\n      - type: object\\n        required:\\n        - uploadRequestId\\n        - zipId\\n        - documentName\\n        properties:\\n          uploadRequestId:\\n            type: string\\n          zipId:\\n            type: string\\n          documentName:\\n            type: string\\n      - type: object\\n        required:\\n        - zipId\\n        - documentName\\n        properties:\\n          zipId:\\n            type: string\\n          documentName:\\n            type: string\\n    RecipientAddress:\\n      type: object\\n      required:\\n      - firstName\\n      - lastName\\n      - address1\\n      - city\\n      - state\\n      - zip\\n      - country\\n      properties:\\n        firstName:\\n          type: string\\n        lastName:\\n          type: string\\n        nickName:\\n          type: string\\n        address1:\\n          type: string\\n        address2:\\n          type: string\\n        address3:\\n          type: string\\n        city:\\n          type: string\\n        state:\\n          type: string\\n        zip:\\n          type: string\\n        country:\\n          type: string\\n        phoneNumber:\\n          type: string\\n    RecipientAddressSource:\\n      oneOf:\\n      - $ref: '#/components/schemas/RecipientAddress'\\n      - type: object\\n        required:\\n        - addressListId\\n        properties:\\n          addressListId:\\n            type: string\\n      - type: object\\n        required:\\n        - addressId\\n        properties:\\n          addressId:\\n            type: string\\n    JobOptions:\\n      type: object\\n      required:\\n      - documentClass\\n      - layout\\n      - mailclass\\n      - paperType\\n      - printOption\\n      - envelope\\n      properties:\\n        documentClass:\\n          type: string\\n          enum:\\n          - businessLetter\\n          - personalLetter\\n        layout:\\n          type: string\\n          enum:\\n          - portrait\\n          - landscape\\n        mailclass:\\n          type: string\\n          enum:\\n          - firstClassMail\\n          - priorityMail\\n          - largeEnvelope\\n        paperType:\\n          type: string\\n          enum:\\n          - letter\\n          - legal\\n          - postcard\\n        printOption:\\n          type: string\\n          enum:\\n          - none\\n          - color\\n          - grayscale\\n        envelope:\\n          type: string\\n          enum:\\n          - flat\\n          - windowedFlat\\n          - letter\\n          - legal\\n          - postcard\\n    CreditCardDetails:\\n      type: object\\n      required:\\n      - cardType\\n      - cardNumber\\n      - expirationDate\\n      - cvv\\n      properties:\\n        cardType:\\n          type: string\\n          enum:\\n          - visa\\n          - mastercard\\n          - discover\\n          - americanExpress\\n        cardNumber:\\n          type: string\\n        expirationDate:\\n          type: object\\n          required:\\n          - month\\n          - year\\n          properties:\\n            month:\\n              type: integer\\n              minimum: 1\\n              maximum: 12\\n            year:\\n              type: integer\\n              minimum: 2000\\n        cvv:\\n          type: integer\\n    ACHDetails:\\n      type: object\\n      required:\\n      - routingNumber\\n      - accountNumber\\n      - checkDigit\\n      properties:\\n        routingNumber:\\n          type: string\\n        accountNumber:\\n          type: string\\n        checkDigit:\\n          type: integer\\n    CreditAmount:\\n      type: object\\n      required:\\n      - amount\\n      - currency\\n      properties:\\n        amount:\\n          type: number\\n        currency:\\n          type: string\\n          enum:\\n          - USD\\n          - EUR\\n          - GBP\\n          - CAD\\n          - AUD\\n    PaymentDetails:\\n      type: object\\n      required:\\n      - billingType\\n      properties:\\n        billingType:\\n          type: string\\n          enum:\\n          - creditCard\\n          - invoice\\n          - ach\\n          - userCredit\\n        creditCardDetails:\\n          $ref: '#/components/schemas/CreditCardDetails'\\n        invoiceDetails:\\n          type: object\\n          properties:\\n            invoiceNumber:\\n              type: string\\n            amountDue:\\n              type: number\\n        achDetails:\\n          $ref: '#/components/schemas/ACHDetails'\\n        creditAmount:\\n          $ref: '#/components/schemas/CreditAmount'\\n    StandardResponse:\\n      type: object\\n      properties:\\n        status:\\n          type: string\\n        message:\\n          type: string\\n        jobId:\\n          type: string\\n  parameters: {}\\nsecurity:\\n- bearerAuth: []\\npaths:\\n  /jobs/submit/single/doc:\\n    post:\\n      summary: Submit a single document to multiple recipients\\n      operationId: submitSingleDoc\\n      requestBody:\\n        required: true\\n        content:\\n          application/json:\\n            schema:\\n              type: object\\n              required:\\n              - documentSourceIdentifier\\n              - jobOptions\\n              properties:\\n                documentSourceIdentifier:\\n                  $ref: '#/components/schemas/DocumentSourceIdentifier'\\n                recipientAddresses:\\n                  type: array\\n                  items:\\n                    $ref: '#/components/schemas/RecipientAddressSource'\\n                jobOptions:\\n                  $ref: '#/components/schemas/JobOptions'\\n                paymentDetails:\\n                  $ref: '#/components/schemas/PaymentDetails'\\n                tags:\\n                  type: array\\n                  items:\\n                    type: string\\n      responses:\\n        '200':\\n          description: Job submission accepted\\n          content:\\n            application/json:\\n              schema:\\n                type: object\\n                properties:\\n                  jobId:\\n                    type: string\\n                  status:\\n                    type: string\\n        '400':\\n          description: Invalid request\\n        '401':\\n          description: Unauthorized\\n      tags:\\n      - jobs\\n      security:\\n      - bearerAuth: []\\n      description: Submit a single document to multiple recipients\\n  /jobs/submit/multi/doc:\\n    post:\\n      summary: Submit multiple documents, each to a different recipient\\n      requestBody:\\n        required: true\\n        content:\\n          application/json:\\n            schema:\\n              type: object\\n              required:\\n              - documentRecipientPairs\\n              - jobOptions\\n              properties:\\n                documentRecipientPairs: &id001\\n                  type: array\\n                  items:\\n                    type: object\\n                    required:\\n                    - documentSourceIdentifier\\n                    - recipientAddressSource\\n                    properties:\\n                      documentSourceIdentifier:\\n                        $ref: '#/components/schemas/DocumentSourceIdentifier'\\n                      recipientAddressSource:\\n                        $ref: '#/components/schemas/RecipientAddressSource'\\n                jobOptions:\\n                  $ref: '#/components/schemas/JobOptions'\\n                paymentDetails:\\n                  $ref: '#/components/schemas/PaymentDetails'\\n                tags:\\n                  type: array\\n                  items:\\n                    type: string\\n      responses:\\n        '200':\\n          description: OK\\n        '400':\\n          description: Invalid request\\n        '401':\\n          description: Unauthorized\\n      operationId: post_jobs_submit_multi_doc\\n      tags:\\n      - jobs\\n      security:\\n      - bearerAuth: []\\n      description: Submit multiple documents, each to a different recipient\\n  /jobs/submit/multi/doc/merge:\\n    post:\\n      summary: Merge multiple documents and send to a single recipient\\n      requestBody:\\n        required: true\\n        content:\\n          application/json:\\n            schema:\\n              type: object\\n              required:\\n              - documentsToMerge\\n              - recipientAddressSource\\n              properties:\\n                documentsToMerge: &id002\\n                  type: array\\n                  items:\\n                    $ref: '#/components/schemas/DocumentSourceIdentifier'\\n                recipientAddressSource:\\n                  $ref: '#/components/schemas/RecipientAddressSource'\\n                tags:\\n                  type: array\\n                  items:\\n                    type: string\\n      responses:\\n        '200':\\n          description: OK\\n        '400':\\n          description: Invalid request\\n        '401':\\n          description: Unauthorized\\n      operationId: post_jobs_submit_multi_doc_merge\\n      tags:\\n      - jobs\\n      security:\\n      - bearerAuth: []\\n      description: Merge multiple documents and send to a single recipient\\n  /jobs/submit/single/doc/jobTemplate:\\n    post:\\n      summary: Submit a document using a job template\\n      requestBody:\\n        required: true\\n        content:\\n          application/json:\\n            schema:\\n              type: object\\n              required:\\n              - documentSourceIdentifier\\n              - jobTemplate\\n              properties:\\n                documentSourceIdentifier:\\n                  $ref: '#/components/schemas/DocumentSourceIdentifier'\\n                recipientAddresses:\\n                  type: array\\n                  items:\\n                    $ref: '#/components/schemas/RecipientAddressSource'\\n                jobTemplate:\\n                  type: string\\n                jobOptions:\\n                  $ref: '#/components/schemas/JobOptions'\\n                paymentDetails:\\n                  $ref: '#/components/schemas/PaymentDetails'\\n                tags:\\n                  type: array\\n                  items:\\n                    type: string\\n      responses:\\n        '200':\\n          description: OK\\n        '400':\\n          description: Invalid request\\n        '401':\\n          description: Unauthorized\\n      operationId: post_jobs_submit_single_doc_jobTemplate\\n      tags:\\n      - jobs\\n      security:\\n      - bearerAuth: []\\n      description: Submit a document using a job template\\n  /jobs/submit/multi/docs/jobtemplate:\\n    post:\\n      summary: Submit multiple documents with recipient addresses and job template\\n      requestBody:\\n        required: true\\n        content:\\n          application/json:\\n            schema:\\n              type: object\\n              required:\\n              - documentRecipientPairs\\n              - jobTemplate\\n              - paymentDetails\\n              properties:\\n                documentRecipientPairs: *id001\\n                jobTemplate:\\n                  type: string\\n                paymentDetails:\\n                  $ref: '#/components/schemas/PaymentDetails'\\n                tags:\\n                  type: array\\n                  items:\\n                    type: string\\n      responses:\\n        '200':\\n          description: OK\\n        '400':\\n          description: Invalid request\\n        '401':\\n          description: Unauthorized\\n      operationId: post_jobs_submit_multi_docs_jobtemplate\\n      tags:\\n      - jobs\\n      security:\\n      - bearerAuth: []\\n      description: Submit multiple documents with recipient addresses and job template\\n  /jobs/submit/multi/doc/merge/jobTemplate:\\n    post:\\n      summary: Merge documents, send to recipient using job template\\n      requestBody:\\n        required: true\\n        content:\\n          application/json:\\n            schema:\\n              type: object\\n              required:\\n              - documentsToMerge\\n              - recipientAddressSource\\n              - jobTemplate\\n              properties:\\n                documentsToMerge: *id002\\n                recipientAddressSource:\\n                  $ref: '#/components/schemas/RecipientAddressSource'\\n                jobTemplate:\\n                  type: string\\n                paymentDetails:\\n                  $ref: '#/components/schemas/PaymentDetails'\\n                tags:\\n                  type: array\\n                  items:\\n                    type: string\\n      responses:\\n        '200':\\n          description: OK\\n        '400':\\n          description: Invalid request\\n        '401':\\n          description: Unauthorized\\n      operationId: post_jobs_submit_multi_doc_merge_jobTemplate\\n      tags:\\n      - jobs\\n      security:\\n      - bearerAuth: []\\n      description: Merge documents, send to recipient using job template\\n  /jobs/submit/single/pdf/split:\\n    post:\\n      summary: Split a PDF into page ranges and send to different recipients\\n      requestBody:\\n        required: true\\n        content:\\n          application/json:\\n            schema:\\n              type: object\\n              required:\\n              - documentSourceIdentifier\\n              - pageRanges\\n              properties:\\n                documentSourceIdentifier:\\n                  $ref: '#/components/schemas/DocumentSourceIdentifier'\\n                pageRanges:\\n                  type: array\\n                  items:\\n                    type: object\\n                    required:\\n                    - startPage\\n                    - endPage\\n                    - recipientAddressSource\\n                    properties:\\n                      startPage:\\n                        type: integer\\n                      endPage:\\n                        type: integer\\n                      recipientAddressSource:\\n                        $ref: '#/components/schemas/RecipientAddressSource'\\n                paymentDetails:\\n                  $ref: '#/components/schemas/PaymentDetails'\\n                tags:\\n                  type: array\\n                  items:\\n                    type: string\\n      responses:\\n        '200':\\n          description: OK\\n        '400':\\n          description: Invalid request\\n        '401':\\n          description: Unauthorized\\n      operationId: post_jobs_submit_single_pdf_split\\n      tags:\\n      - jobs\\n      security:\\n      - bearerAuth: []\\n      description: Split a PDF into page ranges and send to different recipients\\n  /jobs/submit/single/pdf/split/addressCapture:\\n    post:\\n      summary: Split PDF and extract embedded recipient addresses\\n      requestBody:\\n        required: true\\n        content:\\n          application/json:\\n            schema:\\n              type: object\\n              required:\\n              - documentSourceIdentifier\\n              - embeddedExtractionSpecs\\n              properties:\\n                documentSourceIdentifier:\\n                  $ref: '#/components/schemas/DocumentSourceIdentifier'\\n                embeddedExtractionSpecs:\\n                  type: array\\n                  items:\\n                    type: object\\n                    required:\\n                    - startPage\\n                    - endPage\\n                    - addressRegion\\n                    properties:\\n                      startPage:\\n                        type: integer\\n                      endPage:\\n                        type: integer\\n                      addressRegion:\\n                        type: object\\n                        required:\\n                        - x\\n                        - y\\n                        - width\\n                        - height\\n                        - pageOffset\\n                        properties:\\n                          x:\\n                            type: number\\n                          y:\\n                            type: number\\n                          width:\\n                            type: number\\n                          height:\\n                            type: number\\n                          pageOffset:\\n                            type: integer\\n                paymentDetails:\\n                  $ref: '#/components/schemas/PaymentDetails'\\n                tags:\\n                  type: array\\n                  items:\\n                    type: string\\n      responses:\\n        '200':\\n          description: OK\\n        '400':\\n          description: Invalid request\\n        '401':\\n          description: Unauthorized\\n      operationId: post_jobs_submit_single_pdf_split_addressCapture\\n      tags:\\n      - jobs\\n      security:\\n      - bearerAuth: []\\n      description: Split PDF and extract embedded recipient addresses\\n  /jobs/submit/multi/pdf/addressCapture:\\n    post:\\n      summary: Submit multiple PDFs with embedded address regions\\n      requestBody:\\n        required: true\\n        content:\\n          application/json:\\n            schema:\\n              type: object\\n              required:\\n              - addressCapturePdfs\\n              - jobTemplate\\n              properties:\\n                addressCapturePdfs:\\n                  type: array\\n                  items:\\n                    type: object\\n                    required:\\n                    - documentSourceIdentifier\\n                    - addressListRegion\\n                    properties:\\n                      documentSourceIdentifier:\\n                        $ref: '#/components/schemas/DocumentSourceIdentifier'\\n                      addressListRegion:\\n                        type: object\\n                        required:\\n                        - x\\n                        - y\\n                        - width\\n                        - height\\n                        - pageOffset\\n                        properties:\\n                          x:\\n                            type: number\\n                          y:\\n                            type: number\\n                          width:\\n                            type: number\\n                          height:\\n                            type: number\\n                          pageOffset:\\n                            type: integer\\n                      delimiter:\\n                        type: string\\n                      tags:\\n                        type: array\\n                        items:\\n                          type: string\\n                jobTemplate:\\n                  type: string\\n                paymentDetails:\\n                  $ref: '#/components/schemas/PaymentDetails'\\n                tags:\\n                  type: array\\n                  items:\\n                    type: string\\n      responses:\\n        '200':\\n          description: OK\\n        '400':\\n          description: Invalid request\\n        '401':\\n          description: Unauthorized\\n      operationId: post_jobs_submit_multi_pdf_addressCapture\\n      tags:\\n      - jobs\\n      security:\\n      - bearerAuth: []\\n      description: Submit multiple PDFs with embedded address regions\\n  /webhooks/jobStatusUpdate:\\n    post:\\n      summary: Webhook endpoint to receive job status updates\\n      requestBody:\\n        required: true\\n        content:\\n          application/json:\\n            schema:\\n              type: object\\n              required:\\n              - jobId\\n              - status\\n              - timestamp\\n              properties:\\n                jobId:\\n                  type: string\\n                  example: job_123456789\\n                status:\\n                  type: string\\n                  enum:\\n                  - queued\\n                  - processing\\n                  - completed\\n                  - failed\\n                  example: completed\\n                timestamp:\\n                  type: string\\n                  format: date-time\\n                  example: '2025-07-07T12:34:56Z'\\n                metadata:\\n                  type: object\\n                  additionalProperties:\\n                    type: string\\n                  example:\\n                    source: PrintCenterA\\n                    batch: B20250707\\n      responses:\\n        '200':\\n          description: Webhook received successfully\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/StandardResponse'\\n        '400':\\n          description: Invalid payload\\n        '401':\\n          description: Unauthorized\\n      operationId: post_webhooks_jobStatusUpdate\\n      tags:\\n      - webhooks\\n      security:\\n      - bearerAuth: []\\n      description: Webhook endpoint to receive job status updates\\ntags:\\n- name: jobs\\n  description: Operations related to jobs\\n- name: webhooks\\n  description: Operations related to webhooks\\n\""
    }
  ],
  "collection": {
    "uid": "46321051-87578476-5d7f-4b47-9ee6-051060bb0ad1"
  }
}
