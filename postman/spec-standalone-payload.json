{
  "name": "C2mApiV2",
  "type": "OPENAPI:3.0",
  "files": [
    {
      "path": "openapi.yaml",
      "content": "openapi: 3.0.3\ninfo:\n  title: LOB-Style Document Submission API\n  version: 1.0.0\n  description: API for submitting documents with various routing options\nservers:\n- url: https://api.example.com/v1\n  description: Production server\n- url: http://localhost:4010\n  description: Mock server\ncomponents:\n  schemas:\n    documentName:\n      type: string\n    firstName:\n      type: string\n    lastName:\n      type: string\n    nickName:\n      type: string\n    address1:\n      type: string\n    address2:\n      type: string\n    address3:\n      type: string\n    city:\n      type: string\n    state:\n      type: string\n    country:\n      type: string\n    zip:\n      type: string\n    phoneNumber:\n      type: string\n    externalUrl:\n      type: string\n      format: uri\n    tag:\n      type: string\n    tags:\n      type: array\n      items:\n        type: string\n    jobTemplate:\n      type: string\n    invoiceNumber:\n      type: string\n    routingNumber:\n      type: string\n    accountNumber:\n      type: string\n    cardNumber:\n      type: string\n    delimiter:\n      type: string\n    tbd:\n      type: string\n    documentId:\n      type: integer\n    addressId:\n      type: integer\n    addressListId:\n      type: integer\n    uploadRequestId:\n      type: integer\n    zipId:\n      type: integer\n    startPage:\n      type: integer\n    endPage:\n      type: integer\n    month:\n      type: integer\n      minimum: 1\n      maximum: 12\n    year:\n      type: integer\n    cvv:\n      type: integer\n    checkDigit:\n      type: integer\n    pageOffset:\n      type: integer\n    amountDue:\n      type: number\n    amount:\n      type: number\n    x:\n      type: number\n    y:\n      type: number\n    width:\n      type: number\n    height:\n      type: number\n    submitSingleDocWithTemplateParams:\n      type: object\n      properties:\n        documentSourceIdentifier:\n          $ref: '#/components/schemas/documentSourceIdentifier'\n        jobTemplate:\n          $ref: '#/components/schemas/jobTemplate'\n        paymentDetails:\n          $ref: '#/components/schemas/paymentDetails'\n        tags:\n          $ref: '#/components/schemas/tags'\n      required:\n      - documentSourceIdentifier\n      - jobTemplate\n    submitMultiDocWithTemplateParams:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              documentSourceIdentifier:\n                $ref: '#/components/schemas/documentSourceIdentifier'\n              recipientAddressSource:\n                $ref: '#/components/schemas/recipientAddressSource'\n            required:\n            - documentSourceIdentifier\n            - recipientAddressSource\n        jobTemplate:\n          $ref: '#/components/schemas/jobTemplate'\n        paymentDetails:\n          $ref: '#/components/schemas/paymentDetails'\n        tags:\n          $ref: '#/components/schemas/tags'\n      required:\n      - items\n      - jobTemplate\n      - paymentDetails\n    mergeMultiDocWithTemplateParams:\n      type: object\n      properties:\n        documentsToMerge:\n          $ref: '#/components/schemas/documentsToMerge'\n        recipientAddressSource:\n          $ref: '#/components/schemas/recipientAddressSource'\n        jobTemplate:\n          $ref: '#/components/schemas/jobTemplate'\n        paymentDetails:\n          $ref: '#/components/schemas/paymentDetails'\n        tags:\n          $ref: '#/components/schemas/tags'\n      required:\n      - documentsToMerge\n      - recipientAddressSource\n      - jobTemplate\n    singleDocJobParams:\n      type: object\n      properties:\n        documentSourceIdentifier:\n          $ref: '#/components/schemas/documentSourceIdentifier'\n        recipientAddressSources:\n          type: array\n          items:\n            $ref: '#/components/schemas/recipientAddressSource'\n        jobOptions:\n          $ref: '#/components/schemas/jobOptions'\n        paymentDetails:\n          $ref: '#/components/schemas/paymentDetails'\n        tags:\n          $ref: '#/components/schemas/tags'\n      required:\n      - documentSourceIdentifier\n      - recipientAddressSources\n      - jobOptions\n    submitMultiDocParams:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              documentSourceIdentifier:\n                $ref: '#/components/schemas/documentSourceIdentifier'\n              recipientAddressSource:\n                $ref: '#/components/schemas/recipientAddressSource'\n            required:\n            - documentSourceIdentifier\n            - recipientAddressSource\n        jobOptions:\n          $ref: '#/components/schemas/jobOptions'\n        paymentDetails:\n          $ref: '#/components/schemas/paymentDetails'\n        tags:\n          $ref: '#/components/schemas/tags'\n      required:\n      - items\n      - jobOptions\n    mergeMultiDocParams:\n      type: object\n      properties:\n        documentsToMerge:\n          $ref: '#/components/schemas/documentsToMerge'\n        recipientAddressSource:\n          $ref: '#/components/schemas/recipientAddressSource'\n        tags:\n          $ref: '#/components/schemas/tags'\n      required:\n      - documentsToMerge\n      - recipientAddressSource\n    documentsToMerge:\n      type: array\n      items:\n        $ref: '#/components/schemas/documentSourceIdentifier'\n    splitPdfParams:\n      type: object\n      properties:\n        documentSourceIdentifier:\n          $ref: '#/components/schemas/documentSourceIdentifier'\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              pageRange:\n                $ref: '#/components/schemas/pageRange'\n              recipientAddressSources:\n                type: array\n                items:\n                  $ref: '#/components/schemas/recipientAddressSource'\n            required:\n            - pageRange\n            - recipientAddressSources\n        paymentDetails:\n          $ref: '#/components/schemas/paymentDetails'\n        tags:\n          $ref: '#/components/schemas/tags'\n      required:\n      - documentSourceIdentifier\n      - items\n    pageRange:\n      type: object\n      properties:\n        startPage:\n          $ref: '#/components/schemas/startPage'\n        endPage:\n          $ref: '#/components/schemas/endPage'\n      required:\n      - startPage\n      - endPage\n    splitPdfWithCaptureParams:\n      type: object\n      properties:\n        documentSourceIdentifier:\n          $ref: '#/components/schemas/documentSourceIdentifier'\n        embeddedExtractionSpecs:\n          $ref: '#/components/schemas/embeddedExtractionSpecs'\n        paymentDetails:\n          $ref: '#/components/schemas/paymentDetails'\n        tags:\n          $ref: '#/components/schemas/tags'\n      required:\n      - documentSourceIdentifier\n      - embeddedExtractionSpecs\n    embeddedExtractionSpecs:\n      type: array\n      items:\n        $ref: '#/components/schemas/extractionSpec'\n    extractionSpec:\n      type: object\n      properties:\n        startPage:\n          $ref: '#/components/schemas/startPage'\n        endPage:\n          $ref: '#/components/schemas/endPage'\n        addressRegion:\n          $ref: '#/components/schemas/addressRegion'\n      required:\n      - startPage\n      - endPage\n      - addressRegion\n    addressRegion:\n      type: object\n      properties:\n        x:\n          $ref: '#/components/schemas/x'\n        y:\n          $ref: '#/components/schemas/y'\n        width:\n          $ref: '#/components/schemas/width'\n        height:\n          $ref: '#/components/schemas/height'\n        pageOffset:\n          $ref: '#/components/schemas/pageOffset'\n      required:\n      - x\n      - y\n      - width\n      - height\n      - pageOffset\n    multiPdfWithCaptureParams:\n      type: object\n      properties:\n        addressCapturePdfs:\n          $ref: '#/components/schemas/addressCapturePdfs'\n        jobTemplate:\n          $ref: '#/components/schemas/jobTemplate'\n        paymentDetails:\n          $ref: '#/components/schemas/paymentDetails'\n        tags:\n          $ref: '#/components/schemas/tags'\n      required:\n      - addressCapturePdfs\n      - jobTemplate\n    addressCapturePdfs:\n      type: array\n      items:\n        $ref: '#/components/schemas/addressListPdf'\n    addressListPdf:\n      type: object\n      properties:\n        documentSourceIdentifier:\n          $ref: '#/components/schemas/documentSourceIdentifier'\n        addressListRegion:\n          $ref: '#/components/schemas/addressListRegion'\n        delimiter:\n          $ref: '#/components/schemas/delimiter'\n        tags:\n          $ref: '#/components/schemas/tags'\n      required:\n      - documentSourceIdentifier\n      - addressListRegion\n    addressListRegion:\n      $ref: '#/components/schemas/tbd'\n    documentSourceIdentifier:\n      oneOf:\n      - $ref: '#/components/schemas/documentId'\n      - $ref: '#/components/schemas/externalUrl'\n      - type: object\n        properties:\n          uploadRequestId:\n            $ref: '#/components/schemas/uploadRequestId'\n          documentName:\n            $ref: '#/components/schemas/documentName'\n        required:\n        - uploadRequestId\n        - documentName\n      - type: object\n        properties:\n          uploadRequestId:\n            $ref: '#/components/schemas/uploadRequestId'\n          zipId:\n            $ref: '#/components/schemas/zipId'\n          documentName:\n            $ref: '#/components/schemas/documentName'\n        required:\n        - uploadRequestId\n        - zipId\n        - documentName\n      - type: object\n        properties:\n          zipId:\n            $ref: '#/components/schemas/zipId'\n          documentName:\n            $ref: '#/components/schemas/documentName'\n        required:\n        - zipId\n        - documentName\n    recipientAddressSource:\n      oneOf:\n      - $ref: '#/components/schemas/exactlyOneNewAddress'\n      - $ref: '#/components/schemas/exactlyOneListId'\n      - $ref: '#/components/schemas/exactlyOneId'\n    exactlyOneNewAddress:\n      $ref: '#/components/schemas/recipientAddress'\n    exactlyOneListId:\n      $ref: '#/components/schemas/addressListId'\n    exactlyOneId:\n      $ref: '#/components/schemas/addressId'\n    recipientAddress:\n      type: object\n      properties:\n        firstName:\n          $ref: '#/components/schemas/firstName'\n        lastName:\n          $ref: '#/components/schemas/lastName'\n        address1:\n          $ref: '#/components/schemas/address1'\n        city:\n          $ref: '#/components/schemas/city'\n        state:\n          $ref: '#/components/schemas/state'\n        zip:\n          $ref: '#/components/schemas/zip'\n        country:\n          $ref: '#/components/schemas/country'\n        nickName:\n          $ref: '#/components/schemas/nickName'\n        address2:\n          $ref: '#/components/schemas/address2'\n        address3:\n          $ref: '#/components/schemas/address3'\n        phoneNumber:\n          $ref: '#/components/schemas/phoneNumber'\n      required:\n      - firstName\n      - lastName\n      - address1\n      - city\n      - state\n      - zip\n      - country\n    jobOptions:\n      type: object\n      properties:\n        documentClass:\n          $ref: '#/components/schemas/documentClass'\n        layout:\n          $ref: '#/components/schemas/layout'\n        mailclass:\n          $ref: '#/components/schemas/mailclass'\n        paperType:\n          $ref: '#/components/schemas/paperType'\n        printOption:\n          $ref: '#/components/schemas/printOption'\n        envelope:\n          $ref: '#/components/schemas/envelope'\n      required:\n      - documentClass\n      - layout\n      - mailclass\n      - paperType\n      - printOption\n      - envelope\n    paymentDetails:\n      type: object\n      properties:\n        billingType:\n          $ref: '#/components/schemas/billingType'\n        optionalPaymentFields:\n          $ref: '#/components/schemas/optionalPaymentFields'\n      required:\n      - billingType\n    billingType:\n      type: string\n      enum:\n      - creditCard\n      - invoice\n      - ach\n      - userCredit\n    creditCardDetails:\n      type: object\n      properties:\n        cardType:\n          $ref: '#/components/schemas/cardType'\n        cardNumber:\n          $ref: '#/components/schemas/cardNumber'\n        expirationDate:\n          $ref: '#/components/schemas/expirationDate'\n        cvv:\n          $ref: '#/components/schemas/cvv'\n      required:\n      - cardType\n      - cardNumber\n      - expirationDate\n      - cvv\n    invoiceDetails:\n      type: object\n      properties:\n        invoiceNumber:\n          $ref: '#/components/schemas/invoiceNumber'\n        amountDue:\n          $ref: '#/components/schemas/amountDue'\n      required:\n      - invoiceNumber\n      - amountDue\n    achDetails:\n      type: object\n      properties:\n        routingNumber:\n          $ref: '#/components/schemas/routingNumber'\n        accountNumber:\n          $ref: '#/components/schemas/accountNumber'\n        checkDigit:\n          $ref: '#/components/schemas/checkDigit'\n      required:\n      - routingNumber\n      - accountNumber\n      - checkDigit\n    creditAmount:\n      type: object\n      properties:\n        amount:\n          $ref: '#/components/schemas/amount'\n        currency:\n          $ref: '#/components/schemas/currency'\n      required:\n      - amount\n      - currency\n    currency:\n      type: string\n      enum:\n      - USD\n      - EUR\n      - GBP\n      - CAD\n      - AUD\n    expirationDate:\n      type: object\n      properties:\n        month:\n          $ref: '#/components/schemas/month'\n        year:\n          $ref: '#/components/schemas/year'\n      required:\n      - month\n      - year\n    optionalPaymentFields:\n      type: object\n      properties:\n        creditCardDetails:\n          $ref: '#/components/schemas/creditCardDetails'\n        invoiceDetails:\n          $ref: '#/components/schemas/invoiceDetails'\n        achDetails:\n          $ref: '#/components/schemas/achDetails'\n        creditAmount:\n          $ref: '#/components/schemas/creditAmount'\n    digit:\n      type: string\n      enum:\n      - '0'\n      - '1'\n      - '2'\n      - '3'\n      - '4'\n      - '5'\n      - '6'\n      - '7'\n      - '8'\n      - '9'\n    cardType:\n      type: string\n      enum:\n      - visa\n      - mastercard\n      - discover\n      - americanExpress\n    documentFormat:\n      type: string\n      enum:\n      - pdf\n      - doc\n      - docx\n      - pub\n      - ppt\n      - pptx\n      - png\n      - jpeg\n      - odt\n    printOption:\n      type: string\n      enum:\n      - none\n      - color\n      - grayscale\n    envelope:\n      type: string\n      enum:\n      - flat\n      - windowedFlat\n      - letter\n      - legal\n      - postcard\n    paperType:\n      type: string\n      enum:\n      - letter\n      - legal\n      - postcard\n    layout:\n      type: string\n      enum:\n      - portrait\n      - landscape\n    mailclass:\n      type: string\n      enum:\n      - firstClassMail\n      - priorityMail\n      - largeEnvelope\n    documentClass:\n      type: string\n      enum:\n      - businessLetter\n      - personalLetter\n    StandardResponse:\n      type: object\n      properties:\n        status:\n          type: string\n        message:\n          type: string\n        jobId:\n          type: string\n  parameters:\n    Authorization:\n      name: Authorization\n      in: header\n      required: true\n      schema:\n        type: string\n        example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\n    Content-Type:\n      name: Content-Type\n      in: header\n      required: true\n      schema:\n        type: string\n        example: application/json\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\nsecurity:\n- bearerAuth: []\npaths:\n  /jobs/single-doc-job-template:\n    post:\n      summary: Operation for /jobs/single-doc-job-template\n      operationId: submitSingleDocWithTemplateParams\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                documentSourceIdentifier:\n                  $ref: '#/components/schemas/documentSourceIdentifier'\n                jobTemplate:\n                  $ref: '#/components/schemas/jobTemplate'\n                paymentDetails:\n                  $ref: '#/components/schemas/paymentDetails'\n                tags:\n                  $ref: '#/components/schemas/tags'\n              required:\n              - documentSourceIdentifier\n              - jobTemplate\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardResponse'\n        '400':\n          description: Invalid request\n        '401':\n          description: Unauthorized\n  /jobs/multi-docs-job-template:\n    post:\n      summary: Operation for /jobs/multi-docs-job-template\n      operationId: submitMultiDocWithTemplateParams\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                items:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      documentSourceIdentifier:\n                        $ref: '#/components/schemas/documentSourceIdentifier'\n                      recipientAddressSource:\n                        $ref: '#/components/schemas/recipientAddressSource'\n                    required:\n                    - documentSourceIdentifier\n                    - recipientAddressSource\n                jobTemplate:\n                  $ref: '#/components/schemas/jobTemplate'\n                paymentDetails:\n                  $ref: '#/components/schemas/paymentDetails'\n                tags:\n                  $ref: '#/components/schemas/tags'\n              required:\n              - items\n              - jobTemplate\n              - paymentDetails\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardResponse'\n        '400':\n          description: Invalid request\n        '401':\n          description: Unauthorized\n  /jobs/multi-doc-merge-job-template:\n    post:\n      summary: Operation for /jobs/multi-doc-merge-job-template\n      operationId: mergeMultiDocWithTemplateParams\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                documentsToMerge:\n                  $ref: '#/components/schemas/documentsToMerge'\n                recipientAddressSource:\n                  $ref: '#/components/schemas/recipientAddressSource'\n                jobTemplate:\n                  $ref: '#/components/schemas/jobTemplate'\n                paymentDetails:\n                  $ref: '#/components/schemas/paymentDetails'\n                tags:\n                  $ref: '#/components/schemas/tags'\n              required:\n              - documentsToMerge\n              - recipientAddressSource\n              - jobTemplate\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardResponse'\n        '400':\n          description: Invalid request\n        '401':\n          description: Unauthorized\n  /jobs/single-doc:\n    post:\n      summary: Operation for /jobs/single-doc\n      operationId: singleDocJobParams\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                documentSourceIdentifier:\n                  $ref: '#/components/schemas/documentSourceIdentifier'\n                recipientAddressSources:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/recipientAddressSource'\n                jobOptions:\n                  $ref: '#/components/schemas/jobOptions'\n                paymentDetails:\n                  $ref: '#/components/schemas/paymentDetails'\n                tags:\n                  $ref: '#/components/schemas/tags'\n              required:\n              - documentSourceIdentifier\n              - recipientAddressSources\n              - jobOptions\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardResponse'\n        '400':\n          description: Invalid request\n        '401':\n          description: Unauthorized\n  /jobs/multi-doc:\n    post:\n      summary: Operation for /jobs/multi-doc\n      operationId: submitMultiDocParams\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                items:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      documentSourceIdentifier:\n                        $ref: '#/components/schemas/documentSourceIdentifier'\n                      recipientAddressSource:\n                        $ref: '#/components/schemas/recipientAddressSource'\n                    required:\n                    - documentSourceIdentifier\n                    - recipientAddressSource\n                jobOptions:\n                  $ref: '#/components/schemas/jobOptions'\n                paymentDetails:\n                  $ref: '#/components/schemas/paymentDetails'\n                tags:\n                  $ref: '#/components/schemas/tags'\n              required:\n              - items\n              - jobOptions\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardResponse'\n        '400':\n          description: Invalid request\n        '401':\n          description: Unauthorized\n  /jobs/multi-doc-merge:\n    post:\n      summary: Operation for /jobs/multi-doc-merge\n      operationId: mergeMultiDocParams\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                documentsToMerge:\n                  $ref: '#/components/schemas/documentsToMerge'\n                recipientAddressSource:\n                  $ref: '#/components/schemas/recipientAddressSource'\n                tags:\n                  $ref: '#/components/schemas/tags'\n              required:\n              - documentsToMerge\n              - recipientAddressSource\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardResponse'\n        '400':\n          description: Invalid request\n        '401':\n          description: Unauthorized\n  /jobs/single-pdf-split:\n    post:\n      summary: Operation for /jobs/single-pdf-split\n      operationId: splitPdfParams\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                documentSourceIdentifier:\n                  $ref: '#/components/schemas/documentSourceIdentifier'\n                items:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      pageRange:\n                        $ref: '#/components/schemas/pageRange'\n                      recipientAddressSources:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/recipientAddressSource'\n                    required:\n                    - pageRange\n                    - recipientAddressSources\n                paymentDetails:\n                  $ref: '#/components/schemas/paymentDetails'\n                tags:\n                  $ref: '#/components/schemas/tags'\n              required:\n              - documentSourceIdentifier\n              - items\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardResponse'\n        '400':\n          description: Invalid request\n        '401':\n          description: Unauthorized\n  /jobs/single-pdf-split-addressCapture:\n    post:\n      summary: Operation for /jobs/single-pdf-split-addressCapture\n      operationId: splitPdfWithCaptureParams\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                documentSourceIdentifier:\n                  $ref: '#/components/schemas/documentSourceIdentifier'\n                embeddedExtractionSpecs:\n                  $ref: '#/components/schemas/embeddedExtractionSpecs'\n                paymentDetails:\n                  $ref: '#/components/schemas/paymentDetails'\n                tags:\n                  $ref: '#/components/schemas/tags'\n              required:\n              - documentSourceIdentifier\n              - embeddedExtractionSpecs\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardResponse'\n        '400':\n          description: Invalid request\n        '401':\n          description: Unauthorized\n  /jobs/multi-pdf-address-capture:\n    post:\n      summary: Operation for /jobs/multi-pdf-address-capture\n      operationId: multiPdfWithCaptureParams\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                addressCapturePdfs:\n                  $ref: '#/components/schemas/addressCapturePdfs'\n                jobTemplate:\n                  $ref: '#/components/schemas/jobTemplate'\n                paymentDetails:\n                  $ref: '#/components/schemas/paymentDetails'\n                tags:\n                  $ref: '#/components/schemas/tags'\n              required:\n              - addressCapturePdfs\n              - jobTemplate\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardResponse'\n        '400':\n          description: Invalid request\n        '401':\n          description: Unauthorized"
    }
  ]
}
