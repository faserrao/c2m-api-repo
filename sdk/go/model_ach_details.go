/*
C2M API v2 - Auth Overlay

API for submitting documents with various routing options

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package c2mapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AchDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AchDetails{}

// AchDetails struct for AchDetails
type AchDetails struct {
	RoutingNumber string `json:"routingNumber"`
	AccountNumber string `json:"accountNumber"`
	CheckDigit int32 `json:"checkDigit"`
}

type _AchDetails AchDetails

// NewAchDetails instantiates a new AchDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAchDetails(routingNumber string, accountNumber string, checkDigit int32) *AchDetails {
	this := AchDetails{}
	this.RoutingNumber = routingNumber
	this.AccountNumber = accountNumber
	this.CheckDigit = checkDigit
	return &this
}

// NewAchDetailsWithDefaults instantiates a new AchDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAchDetailsWithDefaults() *AchDetails {
	this := AchDetails{}
	return &this
}

// GetRoutingNumber returns the RoutingNumber field value
func (o *AchDetails) GetRoutingNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoutingNumber
}

// GetRoutingNumberOk returns a tuple with the RoutingNumber field value
// and a boolean to check if the value has been set.
func (o *AchDetails) GetRoutingNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoutingNumber, true
}

// SetRoutingNumber sets field value
func (o *AchDetails) SetRoutingNumber(v string) {
	o.RoutingNumber = v
}

// GetAccountNumber returns the AccountNumber field value
func (o *AchDetails) GetAccountNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value
// and a boolean to check if the value has been set.
func (o *AchDetails) GetAccountNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountNumber, true
}

// SetAccountNumber sets field value
func (o *AchDetails) SetAccountNumber(v string) {
	o.AccountNumber = v
}

// GetCheckDigit returns the CheckDigit field value
func (o *AchDetails) GetCheckDigit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CheckDigit
}

// GetCheckDigitOk returns a tuple with the CheckDigit field value
// and a boolean to check if the value has been set.
func (o *AchDetails) GetCheckDigitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CheckDigit, true
}

// SetCheckDigit sets field value
func (o *AchDetails) SetCheckDigit(v int32) {
	o.CheckDigit = v
}

func (o AchDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AchDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["routingNumber"] = o.RoutingNumber
	toSerialize["accountNumber"] = o.AccountNumber
	toSerialize["checkDigit"] = o.CheckDigit
	return toSerialize, nil
}

func (o *AchDetails) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"routingNumber",
		"accountNumber",
		"checkDigit",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAchDetails := _AchDetails{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAchDetails)

	if err != nil {
		return err
	}

	*o = AchDetails(varAchDetails)

	return err
}

type NullableAchDetails struct {
	value *AchDetails
	isSet bool
}

func (v NullableAchDetails) Get() *AchDetails {
	return v.value
}

func (v *NullableAchDetails) Set(val *AchDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableAchDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableAchDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAchDetails(val *AchDetails) *NullableAchDetails {
	return &NullableAchDetails{value: val, isSet: true}
}

func (v NullableAchDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAchDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


