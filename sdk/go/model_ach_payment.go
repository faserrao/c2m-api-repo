/*
C2M API v2 - Auth Overlay

API for submitting documents with various routing options

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package c2mapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AchPayment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AchPayment{}

// AchPayment struct for AchPayment
type AchPayment struct {
	AchDetails AchDetails `json:"achDetails"`
}

type _AchPayment AchPayment

// NewAchPayment instantiates a new AchPayment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAchPayment(achDetails AchDetails) *AchPayment {
	this := AchPayment{}
	this.AchDetails = achDetails
	return &this
}

// NewAchPaymentWithDefaults instantiates a new AchPayment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAchPaymentWithDefaults() *AchPayment {
	this := AchPayment{}
	return &this
}

// GetAchDetails returns the AchDetails field value
func (o *AchPayment) GetAchDetails() AchDetails {
	if o == nil {
		var ret AchDetails
		return ret
	}

	return o.AchDetails
}

// GetAchDetailsOk returns a tuple with the AchDetails field value
// and a boolean to check if the value has been set.
func (o *AchPayment) GetAchDetailsOk() (*AchDetails, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AchDetails, true
}

// SetAchDetails sets field value
func (o *AchPayment) SetAchDetails(v AchDetails) {
	o.AchDetails = v
}

func (o AchPayment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AchPayment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["achDetails"] = o.AchDetails
	return toSerialize, nil
}

func (o *AchPayment) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"achDetails",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAchPayment := _AchPayment{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAchPayment)

	if err != nil {
		return err
	}

	*o = AchPayment(varAchPayment)

	return err
}

type NullableAchPayment struct {
	value *AchPayment
	isSet bool
}

func (v NullableAchPayment) Get() *AchPayment {
	return v.value
}

func (v *NullableAchPayment) Set(val *AchPayment) {
	v.value = val
	v.isSet = true
}

func (v NullableAchPayment) IsSet() bool {
	return v.isSet
}

func (v *NullableAchPayment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAchPayment(val *AchPayment) *NullableAchPayment {
	return &NullableAchPayment{value: val, isSet: true}
}

func (v NullableAchPayment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAchPayment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


