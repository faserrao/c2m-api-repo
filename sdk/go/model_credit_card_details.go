/*
C2M API v2 - Auth Overlay

API for submitting documents with various routing options

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package c2mapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreditCardDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreditCardDetails{}

// CreditCardDetails struct for CreditCardDetails
type CreditCardDetails struct {
	CardType CardType `json:"cardType"`
	CardNumber string `json:"cardNumber"`
	ExpirationDate ExpirationDate `json:"expirationDate"`
	Cvv int32 `json:"cvv"`
}

type _CreditCardDetails CreditCardDetails

// NewCreditCardDetails instantiates a new CreditCardDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreditCardDetails(cardType CardType, cardNumber string, expirationDate ExpirationDate, cvv int32) *CreditCardDetails {
	this := CreditCardDetails{}
	this.CardType = cardType
	this.CardNumber = cardNumber
	this.ExpirationDate = expirationDate
	this.Cvv = cvv
	return &this
}

// NewCreditCardDetailsWithDefaults instantiates a new CreditCardDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreditCardDetailsWithDefaults() *CreditCardDetails {
	this := CreditCardDetails{}
	return &this
}

// GetCardType returns the CardType field value
func (o *CreditCardDetails) GetCardType() CardType {
	if o == nil {
		var ret CardType
		return ret
	}

	return o.CardType
}

// GetCardTypeOk returns a tuple with the CardType field value
// and a boolean to check if the value has been set.
func (o *CreditCardDetails) GetCardTypeOk() (*CardType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CardType, true
}

// SetCardType sets field value
func (o *CreditCardDetails) SetCardType(v CardType) {
	o.CardType = v
}

// GetCardNumber returns the CardNumber field value
func (o *CreditCardDetails) GetCardNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CardNumber
}

// GetCardNumberOk returns a tuple with the CardNumber field value
// and a boolean to check if the value has been set.
func (o *CreditCardDetails) GetCardNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CardNumber, true
}

// SetCardNumber sets field value
func (o *CreditCardDetails) SetCardNumber(v string) {
	o.CardNumber = v
}

// GetExpirationDate returns the ExpirationDate field value
func (o *CreditCardDetails) GetExpirationDate() ExpirationDate {
	if o == nil {
		var ret ExpirationDate
		return ret
	}

	return o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value
// and a boolean to check if the value has been set.
func (o *CreditCardDetails) GetExpirationDateOk() (*ExpirationDate, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpirationDate, true
}

// SetExpirationDate sets field value
func (o *CreditCardDetails) SetExpirationDate(v ExpirationDate) {
	o.ExpirationDate = v
}

// GetCvv returns the Cvv field value
func (o *CreditCardDetails) GetCvv() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Cvv
}

// GetCvvOk returns a tuple with the Cvv field value
// and a boolean to check if the value has been set.
func (o *CreditCardDetails) GetCvvOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cvv, true
}

// SetCvv sets field value
func (o *CreditCardDetails) SetCvv(v int32) {
	o.Cvv = v
}

func (o CreditCardDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreditCardDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cardType"] = o.CardType
	toSerialize["cardNumber"] = o.CardNumber
	toSerialize["expirationDate"] = o.ExpirationDate
	toSerialize["cvv"] = o.Cvv
	return toSerialize, nil
}

func (o *CreditCardDetails) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cardType",
		"cardNumber",
		"expirationDate",
		"cvv",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreditCardDetails := _CreditCardDetails{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreditCardDetails)

	if err != nil {
		return err
	}

	*o = CreditCardDetails(varCreditCardDetails)

	return err
}

type NullableCreditCardDetails struct {
	value *CreditCardDetails
	isSet bool
}

func (v NullableCreditCardDetails) Get() *CreditCardDetails {
	return v.value
}

func (v *NullableCreditCardDetails) Set(val *CreditCardDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableCreditCardDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableCreditCardDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreditCardDetails(val *CreditCardDetails) *NullableCreditCardDetails {
	return &NullableCreditCardDetails{value: val, isSet: true}
}

func (v NullableCreditCardDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreditCardDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


