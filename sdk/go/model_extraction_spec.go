/*
C2M API v2 - Auth Overlay

API for submitting documents with various routing options

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package c2mapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ExtractionSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExtractionSpec{}

// ExtractionSpec struct for ExtractionSpec
type ExtractionSpec struct {
	StartPage int32 `json:"startPage"`
	EndPage int32 `json:"endPage"`
	AddressRegion AddressRegion `json:"addressRegion"`
}

type _ExtractionSpec ExtractionSpec

// NewExtractionSpec instantiates a new ExtractionSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtractionSpec(startPage int32, endPage int32, addressRegion AddressRegion) *ExtractionSpec {
	this := ExtractionSpec{}
	this.StartPage = startPage
	this.EndPage = endPage
	this.AddressRegion = addressRegion
	return &this
}

// NewExtractionSpecWithDefaults instantiates a new ExtractionSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtractionSpecWithDefaults() *ExtractionSpec {
	this := ExtractionSpec{}
	return &this
}

// GetStartPage returns the StartPage field value
func (o *ExtractionSpec) GetStartPage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StartPage
}

// GetStartPageOk returns a tuple with the StartPage field value
// and a boolean to check if the value has been set.
func (o *ExtractionSpec) GetStartPageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartPage, true
}

// SetStartPage sets field value
func (o *ExtractionSpec) SetStartPage(v int32) {
	o.StartPage = v
}

// GetEndPage returns the EndPage field value
func (o *ExtractionSpec) GetEndPage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.EndPage
}

// GetEndPageOk returns a tuple with the EndPage field value
// and a boolean to check if the value has been set.
func (o *ExtractionSpec) GetEndPageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndPage, true
}

// SetEndPage sets field value
func (o *ExtractionSpec) SetEndPage(v int32) {
	o.EndPage = v
}

// GetAddressRegion returns the AddressRegion field value
func (o *ExtractionSpec) GetAddressRegion() AddressRegion {
	if o == nil {
		var ret AddressRegion
		return ret
	}

	return o.AddressRegion
}

// GetAddressRegionOk returns a tuple with the AddressRegion field value
// and a boolean to check if the value has been set.
func (o *ExtractionSpec) GetAddressRegionOk() (*AddressRegion, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AddressRegion, true
}

// SetAddressRegion sets field value
func (o *ExtractionSpec) SetAddressRegion(v AddressRegion) {
	o.AddressRegion = v
}

func (o ExtractionSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExtractionSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["startPage"] = o.StartPage
	toSerialize["endPage"] = o.EndPage
	toSerialize["addressRegion"] = o.AddressRegion
	return toSerialize, nil
}

func (o *ExtractionSpec) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"startPage",
		"endPage",
		"addressRegion",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExtractionSpec := _ExtractionSpec{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExtractionSpec)

	if err != nil {
		return err
	}

	*o = ExtractionSpec(varExtractionSpec)

	return err
}

type NullableExtractionSpec struct {
	value *ExtractionSpec
	isSet bool
}

func (v NullableExtractionSpec) Get() *ExtractionSpec {
	return v.value
}

func (v *NullableExtractionSpec) Set(val *ExtractionSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableExtractionSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableExtractionSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtractionSpec(val *ExtractionSpec) *NullableExtractionSpec {
	return &NullableExtractionSpec{value: val, isSet: true}
}

func (v NullableExtractionSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtractionSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


