/*
C2M API v2 - Auth Overlay

API for submitting documents with various routing options

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package c2mapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the InvoicePayment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoicePayment{}

// InvoicePayment struct for InvoicePayment
type InvoicePayment struct {
	InvoiceDetails InvoiceDetails `json:"invoiceDetails"`
}

type _InvoicePayment InvoicePayment

// NewInvoicePayment instantiates a new InvoicePayment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoicePayment(invoiceDetails InvoiceDetails) *InvoicePayment {
	this := InvoicePayment{}
	this.InvoiceDetails = invoiceDetails
	return &this
}

// NewInvoicePaymentWithDefaults instantiates a new InvoicePayment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoicePaymentWithDefaults() *InvoicePayment {
	this := InvoicePayment{}
	return &this
}

// GetInvoiceDetails returns the InvoiceDetails field value
func (o *InvoicePayment) GetInvoiceDetails() InvoiceDetails {
	if o == nil {
		var ret InvoiceDetails
		return ret
	}

	return o.InvoiceDetails
}

// GetInvoiceDetailsOk returns a tuple with the InvoiceDetails field value
// and a boolean to check if the value has been set.
func (o *InvoicePayment) GetInvoiceDetailsOk() (*InvoiceDetails, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvoiceDetails, true
}

// SetInvoiceDetails sets field value
func (o *InvoicePayment) SetInvoiceDetails(v InvoiceDetails) {
	o.InvoiceDetails = v
}

func (o InvoicePayment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoicePayment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["invoiceDetails"] = o.InvoiceDetails
	return toSerialize, nil
}

func (o *InvoicePayment) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"invoiceDetails",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInvoicePayment := _InvoicePayment{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInvoicePayment)

	if err != nil {
		return err
	}

	*o = InvoicePayment(varInvoicePayment)

	return err
}

type NullableInvoicePayment struct {
	value *InvoicePayment
	isSet bool
}

func (v NullableInvoicePayment) Get() *InvoicePayment {
	return v.value
}

func (v *NullableInvoicePayment) Set(val *InvoicePayment) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoicePayment) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoicePayment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoicePayment(val *InvoicePayment) *NullableInvoicePayment {
	return &NullableInvoicePayment{value: val, isSet: true}
}

func (v NullableInvoicePayment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoicePayment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


