/*
C2M API v2 - Auth Overlay

API for submitting documents with various routing options

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package c2mapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the LongTokenRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LongTokenRequest{}

// LongTokenRequest One of several credential mechanisms must be provided.
type LongTokenRequest struct {
	// The authentication grant type
	GrantType string `json:"grant_type"`
	// Client identifier issued by Click2Mail
	ClientId string `json:"client_id"`
	// Required if using client_credentials with secret
	ClientSecret *string `json:"client_secret,omitempty"`
	// Required if your policy mandates OTP for issuance
	OtpCode *string `json:"otp_code,omitempty"`
	// Required when grant_type=assertion
	AssertionType *string `json:"assertion_type,omitempty"`
	// Signed JWT or other accepted assertion
	Assertion *string `json:"assertion,omitempty"`
	// Scopes to assign to the long-term token
	Scopes []string `json:"scopes,omitempty"`
	// Requested lifetime (1 hour - 90 days). Server may clamp.
	TtlSeconds *int32 `json:"ttl_seconds,omitempty"`
}

type _LongTokenRequest LongTokenRequest

// NewLongTokenRequest instantiates a new LongTokenRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLongTokenRequest(grantType string, clientId string) *LongTokenRequest {
	this := LongTokenRequest{}
	this.GrantType = grantType
	this.ClientId = clientId
	return &this
}

// NewLongTokenRequestWithDefaults instantiates a new LongTokenRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLongTokenRequestWithDefaults() *LongTokenRequest {
	this := LongTokenRequest{}
	return &this
}

// GetGrantType returns the GrantType field value
func (o *LongTokenRequest) GetGrantType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GrantType
}

// GetGrantTypeOk returns a tuple with the GrantType field value
// and a boolean to check if the value has been set.
func (o *LongTokenRequest) GetGrantTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GrantType, true
}

// SetGrantType sets field value
func (o *LongTokenRequest) SetGrantType(v string) {
	o.GrantType = v
}

// GetClientId returns the ClientId field value
func (o *LongTokenRequest) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *LongTokenRequest) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *LongTokenRequest) SetClientId(v string) {
	o.ClientId = v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *LongTokenRequest) GetClientSecret() string {
	if o == nil || IsNil(o.ClientSecret) {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LongTokenRequest) GetClientSecretOk() (*string, bool) {
	if o == nil || IsNil(o.ClientSecret) {
		return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *LongTokenRequest) HasClientSecret() bool {
	if o != nil && !IsNil(o.ClientSecret) {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *LongTokenRequest) SetClientSecret(v string) {
	o.ClientSecret = &v
}

// GetOtpCode returns the OtpCode field value if set, zero value otherwise.
func (o *LongTokenRequest) GetOtpCode() string {
	if o == nil || IsNil(o.OtpCode) {
		var ret string
		return ret
	}
	return *o.OtpCode
}

// GetOtpCodeOk returns a tuple with the OtpCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LongTokenRequest) GetOtpCodeOk() (*string, bool) {
	if o == nil || IsNil(o.OtpCode) {
		return nil, false
	}
	return o.OtpCode, true
}

// HasOtpCode returns a boolean if a field has been set.
func (o *LongTokenRequest) HasOtpCode() bool {
	if o != nil && !IsNil(o.OtpCode) {
		return true
	}

	return false
}

// SetOtpCode gets a reference to the given string and assigns it to the OtpCode field.
func (o *LongTokenRequest) SetOtpCode(v string) {
	o.OtpCode = &v
}

// GetAssertionType returns the AssertionType field value if set, zero value otherwise.
func (o *LongTokenRequest) GetAssertionType() string {
	if o == nil || IsNil(o.AssertionType) {
		var ret string
		return ret
	}
	return *o.AssertionType
}

// GetAssertionTypeOk returns a tuple with the AssertionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LongTokenRequest) GetAssertionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AssertionType) {
		return nil, false
	}
	return o.AssertionType, true
}

// HasAssertionType returns a boolean if a field has been set.
func (o *LongTokenRequest) HasAssertionType() bool {
	if o != nil && !IsNil(o.AssertionType) {
		return true
	}

	return false
}

// SetAssertionType gets a reference to the given string and assigns it to the AssertionType field.
func (o *LongTokenRequest) SetAssertionType(v string) {
	o.AssertionType = &v
}

// GetAssertion returns the Assertion field value if set, zero value otherwise.
func (o *LongTokenRequest) GetAssertion() string {
	if o == nil || IsNil(o.Assertion) {
		var ret string
		return ret
	}
	return *o.Assertion
}

// GetAssertionOk returns a tuple with the Assertion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LongTokenRequest) GetAssertionOk() (*string, bool) {
	if o == nil || IsNil(o.Assertion) {
		return nil, false
	}
	return o.Assertion, true
}

// HasAssertion returns a boolean if a field has been set.
func (o *LongTokenRequest) HasAssertion() bool {
	if o != nil && !IsNil(o.Assertion) {
		return true
	}

	return false
}

// SetAssertion gets a reference to the given string and assigns it to the Assertion field.
func (o *LongTokenRequest) SetAssertion(v string) {
	o.Assertion = &v
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *LongTokenRequest) GetScopes() []string {
	if o == nil || IsNil(o.Scopes) {
		var ret []string
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LongTokenRequest) GetScopesOk() ([]string, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *LongTokenRequest) HasScopes() bool {
	if o != nil && !IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []string and assigns it to the Scopes field.
func (o *LongTokenRequest) SetScopes(v []string) {
	o.Scopes = v
}

// GetTtlSeconds returns the TtlSeconds field value if set, zero value otherwise.
func (o *LongTokenRequest) GetTtlSeconds() int32 {
	if o == nil || IsNil(o.TtlSeconds) {
		var ret int32
		return ret
	}
	return *o.TtlSeconds
}

// GetTtlSecondsOk returns a tuple with the TtlSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LongTokenRequest) GetTtlSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.TtlSeconds) {
		return nil, false
	}
	return o.TtlSeconds, true
}

// HasTtlSeconds returns a boolean if a field has been set.
func (o *LongTokenRequest) HasTtlSeconds() bool {
	if o != nil && !IsNil(o.TtlSeconds) {
		return true
	}

	return false
}

// SetTtlSeconds gets a reference to the given int32 and assigns it to the TtlSeconds field.
func (o *LongTokenRequest) SetTtlSeconds(v int32) {
	o.TtlSeconds = &v
}

func (o LongTokenRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LongTokenRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["grant_type"] = o.GrantType
	toSerialize["client_id"] = o.ClientId
	if !IsNil(o.ClientSecret) {
		toSerialize["client_secret"] = o.ClientSecret
	}
	if !IsNil(o.OtpCode) {
		toSerialize["otp_code"] = o.OtpCode
	}
	if !IsNil(o.AssertionType) {
		toSerialize["assertion_type"] = o.AssertionType
	}
	if !IsNil(o.Assertion) {
		toSerialize["assertion"] = o.Assertion
	}
	if !IsNil(o.Scopes) {
		toSerialize["scopes"] = o.Scopes
	}
	if !IsNil(o.TtlSeconds) {
		toSerialize["ttl_seconds"] = o.TtlSeconds
	}
	return toSerialize, nil
}

func (o *LongTokenRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"grant_type",
		"client_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLongTokenRequest := _LongTokenRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLongTokenRequest)

	if err != nil {
		return err
	}

	*o = LongTokenRequest(varLongTokenRequest)

	return err
}

type NullableLongTokenRequest struct {
	value *LongTokenRequest
	isSet bool
}

func (v NullableLongTokenRequest) Get() *LongTokenRequest {
	return v.value
}

func (v *NullableLongTokenRequest) Set(val *LongTokenRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLongTokenRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLongTokenRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLongTokenRequest(val *LongTokenRequest) *NullableLongTokenRequest {
	return &NullableLongTokenRequest{value: val, isSet: true}
}

func (v NullableLongTokenRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLongTokenRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


