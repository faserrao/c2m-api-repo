/**
 * C2M API v2 - Auth Overlay
 * API for submitting documents with various routing options
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DocumentClass from './DocumentClass';
import Envelope from './Envelope';
import Layout from './Layout';
import Mailclass from './Mailclass';
import PaperType from './PaperType';
import PrintOption from './PrintOption';

/**
 * The JobOptions model module.
 * @module c2m_api/model/JobOptions
 * @version 2.0.0
 */
class JobOptions {
    /**
     * Constructs a new <code>JobOptions</code>.
     * @alias module:c2m_api/model/JobOptions
     * @param documentClass {module:c2m_api/model/DocumentClass} 
     * @param layout {module:c2m_api/model/Layout} 
     * @param mailclass {module:c2m_api/model/Mailclass} 
     * @param paperType {module:c2m_api/model/PaperType} 
     * @param printOption {module:c2m_api/model/PrintOption} 
     * @param envelope {module:c2m_api/model/Envelope} 
     */
    constructor(documentClass, layout, mailclass, paperType, printOption, envelope) { 
        
        JobOptions.initialize(this, documentClass, layout, mailclass, paperType, printOption, envelope);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, documentClass, layout, mailclass, paperType, printOption, envelope) { 
        obj['documentClass'] = documentClass;
        obj['layout'] = layout;
        obj['mailclass'] = mailclass;
        obj['paperType'] = paperType;
        obj['printOption'] = printOption;
        obj['envelope'] = envelope;
    }

    /**
     * Constructs a <code>JobOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:c2m_api/model/JobOptions} obj Optional instance to populate.
     * @return {module:c2m_api/model/JobOptions} The populated <code>JobOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobOptions();

            if (data.hasOwnProperty('documentClass')) {
                obj['documentClass'] = DocumentClass.constructFromObject(data['documentClass']);
            }
            if (data.hasOwnProperty('layout')) {
                obj['layout'] = Layout.constructFromObject(data['layout']);
            }
            if (data.hasOwnProperty('mailclass')) {
                obj['mailclass'] = Mailclass.constructFromObject(data['mailclass']);
            }
            if (data.hasOwnProperty('paperType')) {
                obj['paperType'] = PaperType.constructFromObject(data['paperType']);
            }
            if (data.hasOwnProperty('printOption')) {
                obj['printOption'] = PrintOption.constructFromObject(data['printOption']);
            }
            if (data.hasOwnProperty('envelope')) {
                obj['envelope'] = Envelope.constructFromObject(data['envelope']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobOptions</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of JobOptions.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

JobOptions.RequiredProperties = ["documentClass", "layout", "mailclass", "paperType", "printOption", "envelope"];

/**
 * @member {module:c2m_api/model/DocumentClass} documentClass
 */
JobOptions.prototype['documentClass'] = undefined;

/**
 * @member {module:c2m_api/model/Layout} layout
 */
JobOptions.prototype['layout'] = undefined;

/**
 * @member {module:c2m_api/model/Mailclass} mailclass
 */
JobOptions.prototype['mailclass'] = undefined;

/**
 * @member {module:c2m_api/model/PaperType} paperType
 */
JobOptions.prototype['paperType'] = undefined;

/**
 * @member {module:c2m_api/model/PrintOption} printOption
 */
JobOptions.prototype['printOption'] = undefined;

/**
 * @member {module:c2m_api/model/Envelope} envelope
 */
JobOptions.prototype['envelope'] = undefined;






export default JobOptions;

