/**
 * C2M API v2 - Auth Overlay
 * API for submitting documents with various routing options
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AddressListPdf from './AddressListPdf';
import PaymentDetails from './PaymentDetails';

/**
 * The MultiPdfWithCaptureParams model module.
 * @module c2m_api/model/MultiPdfWithCaptureParams
 * @version 2.0.0
 */
class MultiPdfWithCaptureParams {
    /**
     * Constructs a new <code>MultiPdfWithCaptureParams</code>.
     * @alias module:c2m_api/model/MultiPdfWithCaptureParams
     * @param addressCapturePdfs {Array.<module:c2m_api/model/AddressListPdf>} 
     * @param jobTemplate {String} 
     */
    constructor(addressCapturePdfs, jobTemplate) { 
        
        MultiPdfWithCaptureParams.initialize(this, addressCapturePdfs, jobTemplate);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, addressCapturePdfs, jobTemplate) { 
        obj['addressCapturePdfs'] = addressCapturePdfs;
        obj['jobTemplate'] = jobTemplate;
    }

    /**
     * Constructs a <code>MultiPdfWithCaptureParams</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:c2m_api/model/MultiPdfWithCaptureParams} obj Optional instance to populate.
     * @return {module:c2m_api/model/MultiPdfWithCaptureParams} The populated <code>MultiPdfWithCaptureParams</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MultiPdfWithCaptureParams();

            if (data.hasOwnProperty('addressCapturePdfs')) {
                obj['addressCapturePdfs'] = ApiClient.convertToType(data['addressCapturePdfs'], [AddressListPdf]);
            }
            if (data.hasOwnProperty('jobTemplate')) {
                obj['jobTemplate'] = ApiClient.convertToType(data['jobTemplate'], 'String');
            }
            if (data.hasOwnProperty('paymentDetails')) {
                obj['paymentDetails'] = PaymentDetails.constructFromObject(data['paymentDetails']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MultiPdfWithCaptureParams</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MultiPdfWithCaptureParams</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MultiPdfWithCaptureParams.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['addressCapturePdfs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['addressCapturePdfs'])) {
                throw new Error("Expected the field `addressCapturePdfs` to be an array in the JSON data but got " + data['addressCapturePdfs']);
            }
            // validate the optional field `addressCapturePdfs` (array)
            for (const item of data['addressCapturePdfs']) {
                AddressListPdf.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['jobTemplate'] && !(typeof data['jobTemplate'] === 'string' || data['jobTemplate'] instanceof String)) {
            throw new Error("Expected the field `jobTemplate` to be a primitive type in the JSON string but got " + data['jobTemplate']);
        }
        // validate the optional field `paymentDetails`
        if (data['paymentDetails']) { // data not null
          PaymentDetails.validateJSON(data['paymentDetails']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tags'])) {
            throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
        }

        return true;
    }


}

MultiPdfWithCaptureParams.RequiredProperties = ["addressCapturePdfs", "jobTemplate"];

/**
 * @member {Array.<module:c2m_api/model/AddressListPdf>} addressCapturePdfs
 */
MultiPdfWithCaptureParams.prototype['addressCapturePdfs'] = undefined;

/**
 * @member {String} jobTemplate
 */
MultiPdfWithCaptureParams.prototype['jobTemplate'] = undefined;

/**
 * @member {module:c2m_api/model/PaymentDetails} paymentDetails
 */
MultiPdfWithCaptureParams.prototype['paymentDetails'] = undefined;

/**
 * @member {Array.<String>} tags
 */
MultiPdfWithCaptureParams.prototype['tags'] = undefined;






export default MultiPdfWithCaptureParams;

