/**
 * C2M API v2 - Auth Overlay
 * API for submitting documents with various routing options
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ShortTokenRequest model module.
 * @module c2m_api/model/ShortTokenRequest
 * @version 2.0.0
 */
class ShortTokenRequest {
    /**
     * Constructs a new <code>ShortTokenRequest</code>.
     * @alias module:c2m_api/model/ShortTokenRequest
     */
    constructor() { 
        
        ShortTokenRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ShortTokenRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:c2m_api/model/ShortTokenRequest} obj Optional instance to populate.
     * @return {module:c2m_api/model/ShortTokenRequest} The populated <code>ShortTokenRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShortTokenRequest();

            if (data.hasOwnProperty('long_token')) {
                obj['long_token'] = ApiClient.convertToType(data['long_token'], 'String');
            }
            if (data.hasOwnProperty('scopes')) {
                obj['scopes'] = ApiClient.convertToType(data['scopes'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ShortTokenRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ShortTokenRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['long_token'] && !(typeof data['long_token'] === 'string' || data['long_token'] instanceof String)) {
            throw new Error("Expected the field `long_token` to be a primitive type in the JSON string but got " + data['long_token']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['scopes'])) {
            throw new Error("Expected the field `scopes` to be an array in the JSON data but got " + data['scopes']);
        }

        return true;
    }


}



/**
 * Optional if the long-term token is provided in Authorization header
 * @member {String} long_token
 */
ShortTokenRequest.prototype['long_token'] = undefined;

/**
 * Optional scope narrowing; defaults to the long-term token's scopes
 * @member {Array.<String>} scopes
 */
ShortTokenRequest.prototype['scopes'] = undefined;






export default ShortTokenRequest;

