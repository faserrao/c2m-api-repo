/**
 * C2M API v2 - Auth Overlay
 * API for submitting documents with various routing options
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PageRange from './PageRange';
import RecipientAddressSource from './RecipientAddressSource';

/**
 * The SplitPdfParamsRequestItemsInner model module.
 * @module c2m_api/model/SplitPdfParamsRequestItemsInner
 * @version 2.0.0
 */
class SplitPdfParamsRequestItemsInner {
    /**
     * Constructs a new <code>SplitPdfParamsRequestItemsInner</code>.
     * @alias module:c2m_api/model/SplitPdfParamsRequestItemsInner
     * @param pageRange {module:c2m_api/model/PageRange} 
     * @param recipientAddressSources {Array.<module:c2m_api/model/RecipientAddressSource>} 
     */
    constructor(pageRange, recipientAddressSources) { 
        
        SplitPdfParamsRequestItemsInner.initialize(this, pageRange, recipientAddressSources);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, pageRange, recipientAddressSources) { 
        obj['pageRange'] = pageRange;
        obj['recipientAddressSources'] = recipientAddressSources;
    }

    /**
     * Constructs a <code>SplitPdfParamsRequestItemsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:c2m_api/model/SplitPdfParamsRequestItemsInner} obj Optional instance to populate.
     * @return {module:c2m_api/model/SplitPdfParamsRequestItemsInner} The populated <code>SplitPdfParamsRequestItemsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SplitPdfParamsRequestItemsInner();

            if (data.hasOwnProperty('pageRange')) {
                obj['pageRange'] = PageRange.constructFromObject(data['pageRange']);
            }
            if (data.hasOwnProperty('recipientAddressSources')) {
                obj['recipientAddressSources'] = ApiClient.convertToType(data['recipientAddressSources'], [RecipientAddressSource]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SplitPdfParamsRequestItemsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SplitPdfParamsRequestItemsInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SplitPdfParamsRequestItemsInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `pageRange`
        if (data['pageRange']) { // data not null
          PageRange.validateJSON(data['pageRange']);
        }
        if (data['recipientAddressSources']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['recipientAddressSources'])) {
                throw new Error("Expected the field `recipientAddressSources` to be an array in the JSON data but got " + data['recipientAddressSources']);
            }
            // validate the optional field `recipientAddressSources` (array)
            for (const item of data['recipientAddressSources']) {
                RecipientAddressSource.validateJSON(item);
            };
        }

        return true;
    }


}

SplitPdfParamsRequestItemsInner.RequiredProperties = ["pageRange", "recipientAddressSources"];

/**
 * @member {module:c2m_api/model/PageRange} pageRange
 */
SplitPdfParamsRequestItemsInner.prototype['pageRange'] = undefined;

/**
 * @member {Array.<module:c2m_api/model/RecipientAddressSource>} recipientAddressSources
 */
SplitPdfParamsRequestItemsInner.prototype['recipientAddressSources'] = undefined;






export default SplitPdfParamsRequestItemsInner;

