/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.c2m.api.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * Values: pdf,doc,docx,pub,ppt,pptx,png,jpeg,odt
 */

@JsonClass(generateAdapter = false)
enum class DocumentFormat(val value: kotlin.String) {

    @Json(name = "pdf")
    pdf("pdf"),

    @Json(name = "doc")
    doc("doc"),

    @Json(name = "docx")
    docx("docx"),

    @Json(name = "pub")
    pub("pub"),

    @Json(name = "ppt")
    ppt("ppt"),

    @Json(name = "pptx")
    pptx("pptx"),

    @Json(name = "png")
    png("png"),

    @Json(name = "jpeg")
    jpeg("jpeg"),

    @Json(name = "odt")
    odt("odt");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is DocumentFormat) "$data" else null

        /**
         * Returns a valid [DocumentFormat] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): DocumentFormat? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

