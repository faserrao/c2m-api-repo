# coding: utf-8

"""
    C2M API v2 - Auth Overlay

    API for submitting documents with various routing options

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from c2m_api.models.credit_card_payment import CreditCardPayment

class TestCreditCardPayment(unittest.TestCase):
    """CreditCardPayment unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreditCardPayment:
        """Test CreditCardPayment
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreditCardPayment`
        """
        model = CreditCardPayment()
        if include_optional:
            return CreditCardPayment(
                credit_card_details = c2m_api.models.credit_card_details.creditCardDetails(
                    card_type = 'visa', 
                    card_number = '', 
                    expiration_date = c2m_api.models.expiration_date.expirationDate(
                        month = 1, 
                        year = 56, ), 
                    cvv = 56, )
            )
        else:
            return CreditCardPayment(
                credit_card_details = c2m_api.models.credit_card_details.creditCardDetails(
                    card_type = 'visa', 
                    card_number = '', 
                    expiration_date = c2m_api.models.expiration_date.expirationDate(
                        month = 1, 
                        year = 56, ), 
                    cvv = 56, ),
        )
        """

    def testCreditCardPayment(self):
        """Test CreditCardPayment"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
