=begin
#C2M API v2 - Auth Overlay

#API for submitting documents with various routing options

The version of the OpenAPI document: 2.0.0

Generated by: https://openapi-generator.tech
Generator version: 7.15.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::AuthApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'AuthApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::AuthApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AuthApi' do
    it 'should create an instance of AuthApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::AuthApi)
    end
  end

  # unit tests for issue_long_term_token
  # Issue or rotate a long-term token
  # Issues a long-term token (e.g., 30-90 days) for automation or server-to-server use. Requires step-up authentication. Choose one of the supported grant types:  - &#x60;client_credentials&#x60; + &#x60;client_secret&#x60; - &#x60;client_credentials&#x60; + one-time &#x60;otp_code&#x60; - &#x60;assertion&#x60; (e.g., signed JWT by your private key) - Or an existing short-term token with the &#x60;tokens:write&#x60; scope  Only one mechanism is required per call. 
  # @param long_token_request 
  # @param [Hash] opts the optional parameters
  # @return [LongTokenResponse]
  describe 'issue_long_term_token test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for issue_short_term_token
  # Issue a short-term access token
  # Exchange a valid long-term token for a short-lived JWT (e.g., 15 minutes). The long-term token must be sent in the Authorization header as &#x60;Bearer &lt;long_token&gt;&#x60;. 
  # @param [Hash] opts the optional parameters
  # @option opts [ShortTokenRequest] :short_token_request 
  # @return [ShortTokenResponse]
  describe 'issue_short_term_token test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for revoke_token
  # Revoke a token
  # Revokes a short- or long-term token by its &#x60;tokenId&#x60;. Idempotent.
  # @param token_id The token ID to revoke
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'revoke_token test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
