/*
 * C2M API v2 - Auth Overlay
 *
 * API for submitting documents with various routing options
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MergeMultiDocWithTemplateParams {
    #[serde(rename = "documentsToMerge")]
    pub documents_to_merge: Vec<models::DocumentSourceIdentifier>,
    #[serde(rename = "recipientAddressSource")]
    pub recipient_address_source: Box<models::RecipientAddressSource>,
    #[serde(rename = "jobTemplate")]
    pub job_template: String,
    #[serde(rename = "paymentDetails", skip_serializing_if = "Option::is_none")]
    pub payment_details: Option<Box<models::PaymentDetails>>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
}

impl MergeMultiDocWithTemplateParams {
    pub fn new(documents_to_merge: Vec<models::DocumentSourceIdentifier>, recipient_address_source: models::RecipientAddressSource, job_template: String) -> MergeMultiDocWithTemplateParams {
        MergeMultiDocWithTemplateParams {
            documents_to_merge,
            recipient_address_source: Box::new(recipient_address_source),
            job_template,
            payment_details: None,
            tags: None,
        }
    }
}

