/*
 * C2M API v2 - Auth Overlay
 *
 * API for submitting documents with various routing options
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RecipientAddress {
    #[serde(rename = "firstName")]
    pub first_name: String,
    #[serde(rename = "lastName")]
    pub last_name: String,
    #[serde(rename = "address1")]
    pub address1: String,
    #[serde(rename = "city")]
    pub city: String,
    #[serde(rename = "state")]
    pub state: String,
    #[serde(rename = "zip")]
    pub zip: String,
    #[serde(rename = "country")]
    pub country: String,
    #[serde(rename = "nickName", skip_serializing_if = "Option::is_none")]
    pub nick_name: Option<String>,
    #[serde(rename = "address2", skip_serializing_if = "Option::is_none")]
    pub address2: Option<String>,
    #[serde(rename = "address3", skip_serializing_if = "Option::is_none")]
    pub address3: Option<String>,
    #[serde(rename = "phoneNumber", skip_serializing_if = "Option::is_none")]
    pub phone_number: Option<String>,
}

impl RecipientAddress {
    pub fn new(first_name: String, last_name: String, address1: String, city: String, state: String, zip: String, country: String) -> RecipientAddress {
        RecipientAddress {
            first_name,
            last_name,
            address1,
            city,
            state,
            zip,
            country,
            nick_name: None,
            address2: None,
            address3: None,
            phone_number: None,
        }
    }
}

