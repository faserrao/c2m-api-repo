//
// ShortTokenRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ShortTokenRequest: Codable, JSONEncodable, Hashable {

    /** Optional if the long-term token is provided in Authorization header */
    public var longToken: String?
    /** Optional scope narrowing; defaults to the long-term token's scopes */
    public var scopes: [String]?

    public init(longToken: String? = nil, scopes: [String]? = nil) {
        self.longToken = longToken
        self.scopes = scopes
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case longToken = "long_token"
        case scopes
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(longToken, forKey: .longToken)
        try container.encodeIfPresent(scopes, forKey: .scopes)
    }
}

